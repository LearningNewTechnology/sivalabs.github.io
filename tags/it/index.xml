<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>It on SivaLabs</title>
    <link>https://sivalabs.github.io/tags/it/</link>
    <description>Recent content in It on SivaLabs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Jul 2015 16:17:00 +0000</lastBuildDate>
    
	<atom:link href="https://sivalabs.github.io/tags/it/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My Life as a Software Developer in India</title>
      <link>https://sivalabs.github.io/2015/07/my-life-as-software-developer-in-india/</link>
      <pubDate>Mon, 06 Jul 2015 16:17:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2015/07/my-life-as-software-developer-in-india/</guid>
      <description>I am Siva, working as a Software Developer in Hyderabad, India. Working as a Software Developer is very exciting as you see new things coming in everyday. If there are no new things at least we put a new fancy name to some old concept and celebrate (#microservices) :-). But in my opinion working as a Software Developer in India is little bit different and hard too. Few things are good, and few things are bad.</description>
    </item>
    
    <item>
      <title>Can MicroServices Architecture Solve All Your Problems?</title>
      <link>https://sivalabs.github.io/2014/11/can-microservices-architecture-solve-all-your-problems/</link>
      <pubDate>Sun, 30 Nov 2014 01:21:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2014/11/can-microservices-architecture-solve-all-your-problems/</guid>
      <description>IT is one field where you can find new things coming everyday. Theses days the whole developer community websites are flooded with MicroServices and Docker related stuff. Among them the idea of MicroServices is very exciting and encourages better way of building software systems. But as with any architectural style there will be pros and cons to every approach.
Before discussing what are good and bad sides of MicroServices approach, first let me say what I understood about MicroServices.</description>
    </item>
    
    <item>
      <title>How much crap you are keeping because “You might need it in future”?</title>
      <link>https://sivalabs.github.io/2014/09/how-much-crap-you-are-keeping-because-you-might-need-it-in-future/</link>
      <pubDate>Mon, 15 Sep 2014 03:11:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2014/09/how-much-crap-you-are-keeping-because-you-might-need-it-in-future/</guid>
      <description>How much crap you are keeping because &amp;#8220;You might need it in future&amp;#8221;?
I am planning to move to a new house in a couple of weeks, so I started packing things and throwing away unnecessary stuff.
In the process of identifying unnecessary stuff I realized how much crap I am keeping in my house thinking it might be required in future.
But I only came to know that I have these things while looking for waste to throw away.</description>
    </item>
    
    <item>
      <title>What is your favorite open source project?</title>
      <link>https://sivalabs.github.io/2014/07/what-is-your-favorite-open-source-project/</link>
      <pubDate>Wed, 02 Jul 2014 21:20:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2014/07/what-is-your-favorite-open-source-project/</guid>
      <description>I do spend at-least couple of hours everyday reading about what is going on in Java community to be aware where we are heading and what is hot these days.
Because in Java land everyday new frameworks, new libraries came out and few of them might be really good and can drastically simplify the work you are doing. So I thought it is good to know about these new and hot stuff even if you are not going to use them in your official project.</description>
    </item>
    
    <item>
      <title>Do you have defect id to burn the hours spent on code refactoring?</title>
      <link>https://sivalabs.github.io/2012/02/do-you-have-defect-id-to-burn-hours/</link>
      <pubDate>Wed, 22 Feb 2012 04:34:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2012/02/do-you-have-defect-id-to-burn-hours/</guid>
      <description>Working on a large legacy code-base is challenging(painful?) and is inevitable.
You may need to keep on refactoring the legacy code to fix bugs, to add new features or enhancements.
For these changes normally we would have a defect or new requirement created in QualityCenter/VersionOne or whatever the tool you use for tracking the tasks. We burn the hours spent on these tasks against the respective defect-id or requirement-id.
Then assume you identify some piece of code which is written in horrible way and thought of refactoring that logic.</description>
    </item>
    
    <item>
      <title>Where is Craig McClanahan(Author of Struts 1.x)?</title>
      <link>https://sivalabs.github.io/2012/02/where-is-craig-mcclanahanauthor-of-struts-1-x/</link>
      <pubDate>Thu, 02 Feb 2012 00:23:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2012/02/where-is-craig-mcclanahanauthor-of-struts-1-x/</guid>
      <description>Firstly, a little background on why I like Struts&amp;#8230;please bear with me.
I started my career as a java developer in 2006. That time my team lead strongly believes that freshers should work on core technologies without any tools for at-least 6 months so that they will get a chance to learn basics and have a strong foundation on fundamentals.So I was working on Core Java, Servlets and JSP for first 3-4 months and I used to hear the term &amp;#8220;Struts&amp;#8221; very frequently on web and in our senior java developers discussions.</description>
    </item>
    
    <item>
      <title>Finally you need to deliver DeveloperWrittenCode.WAR, not Manager’sManagerialSkills.zip</title>
      <link>https://sivalabs.github.io/2011/02/finally-you-need-to-deliver-developerwrittencode-war-not-managersmanagerialskills-zip/</link>
      <pubDate>Tue, 01 Feb 2011 00:40:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2011/02/finally-you-need-to-deliver-developerwrittencode-war-not-managersmanagerialskills-zip/</guid>
      <description>Some IT managers perspective on developers made me to write this post.
A managing director of a company telling to delivery head that
 We need not worry about developers. If we go around the villages with a car and get the people who just completed their school and give him a computer with internet connection and then give 15 days of time to learn java. Then assign the work and put a deadline.</description>
    </item>
    
  </channel>
</rss>