<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>It on SivaLabs</title>
    <link>http://sivalabs.github.io/tags/it/</link>
    <description>Recent content in It on SivaLabs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Jul 2015 16:17:00 +0000</lastBuildDate>
    <atom:link href="http://sivalabs.github.io/tags/it/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>My Life as a Software Developer in India</title>
      <link>http://sivalabs.github.io/post/2015/my-life-as-software-developer-in-india/</link>
      <pubDate>Mon, 06 Jul 2015 16:17:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2015/my-life-as-software-developer-in-india/</guid>
      <description>

&lt;p&gt;I am Siva, working as a Software Developer in Hyderabad, India. Working as a Software Developer is very exciting as you see new things coming in everyday. If there are no new things at least we put a new fancy name to some old concept and celebrate (#microservices) :-). But in my opinion working as a Software Developer in India is little bit different and hard too. Few things are good, and few things are bad.&lt;/p&gt;

&lt;p&gt;The opinions of Software Developers from other countries on Indian Software Developers surprised me a lot.&lt;/p&gt;

&lt;p&gt;Here I would like to share How I feel as a Software Developer in Indian IT Industry.&lt;/p&gt;

&lt;p&gt;**Note: **These are all purely my opinions, you may agree or may not agree. If you feel I am generalizing something I mean MAJORITY not ALL.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My First Job&lt;/strong&gt;&lt;br /&gt;
I got a job in a small organization as a Java developer. Along with me couple of my close friends also joined in the same organization. I am fortunate that I got a chance to work with very talented people in the very beginning of my career.&lt;/p&gt;

&lt;p&gt;My first manager used to force us to use only Notepad++/EditPlus for coding for the first 2 to 3 months so that we get familiar with how to compile, run programs and be familiar with compile time and runtime classpath etc. On the other hand our Architect thinks other way. One day he saw me coding in EditPlus and came to me and asked &amp;ldquo;Do you go to war without any weapons?&amp;rdquo;. I have no idea what he is talking about and he understood that based on my blank face expression. He pulled keyboard from me and downloaded Lomboz Eclipse (one variant of Eclipse, not active any more) and explained how to use it. Also every now and then he taught me some interesting keyboard short-cuts and I am amazed how quickly we can code in an IDE instead of Notepad/EditPlus.&lt;/p&gt;

&lt;p&gt;I learned very important things from my manager and architect like how important it is to understand how things work and how to effectively use tools to speed up the work.&lt;/p&gt;

&lt;p&gt;On the other hand my team lead was very hands-on experienced developer. He literally remember most of the core Java API methods and have good grasp of design patterns. He is a kind of perfectionist. He never let us commit the code even if the code indentation is not correct. One day we were working late night (12:00 PM) and we got to deliver some urgent deliverable. At that time also he insisted to correct the indentation, cleanup imports, unused variables, strictly following TABs or spaces consistently etc.&lt;/p&gt;

&lt;p&gt;But later we realized how important it is while merging all the code changes from different developers. He always says &amp;ldquo;If you are going to do something, do it well. Otherwise don&amp;rsquo;t do it&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;As my other team members were also my close friends we didn&amp;rsquo;t have any conflicts and no politics at all between us. We used to have Friday night parties from 9 PM to 2AM, cracking jokes on all the people in office. So everything was wonderful.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Real Journey Starts&lt;/strong&gt;&lt;br /&gt;
After  3 years at my first company I resigned and joined a BIG company assuming &amp;ldquo;&lt;strong&gt;Big company means better work, better pay and better work culture&lt;/strong&gt;&amp;rdquo;. I quickly realized that it is not at all the case!. There I was working on a legacy application which has horrible codebase that I have ever worked till then.&lt;/p&gt;

&lt;p&gt;In addition to that I ended up working with developers who stick with that company for a long time, stopped learning anything new, have no interest to make the application better and want to do things in the same familiar way even though it is painful.&lt;/p&gt;

&lt;p&gt;As Indian IT industry is mostly based on offshore development model, most of the times we end up maintaining the legacy code bases. Rarely we got chance to work on greenfield projects. Even for those greenfield projects the key architecture/design aspects will be done by onsite team.&lt;/p&gt;

&lt;p&gt;Fortunately I got chance to work on few greenfield projects and involved in designing the application from scratch.&lt;/p&gt;

&lt;p&gt;In many of the organizations there is no clear career path for those who want to continue in Technology Stream and don&amp;rsquo;t want to go to People Management. Even worse some companies force developers to step into people management after some years of experience.&lt;/p&gt;

&lt;p&gt;Different people will have different interests in their life and not all developers must be passionate about the technology, and that&amp;rsquo;s fine. Some people are 9 AM to 6 PM types, and some are just get it done by whatever means and don&amp;rsquo;t care about code quality or maintainability etc. It is very difficult to find the passionate developers in India because most of the people start programming as part of the Job only, not for fun or habit.&lt;/p&gt;

&lt;p&gt;At times when I learn something new or did some cool stuff then I look around to share my wow moment and I find no one who can understand my excitement.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The New Blogger On The Floor&lt;/strong&gt;&lt;br /&gt;
I was working in a project using Struts 1.x framework and I got into some tricky issue. I couldn&amp;rsquo;t find any solution after struggling for 3 days also. I kept on debugging and searching all over the books and forums. Finally someone wrote an article on the exact problem and provided a solution. I followed his solution and it worked. I told million thanks to the blog author. But the thought that some unknown developer&amp;rsquo;s blog helped me a lot stuck in my mind. I too wanted to start a blog. May be I too can give something back to the community. So I started my blog &lt;strong&gt;www.sivalabs.in&lt;/strong&gt; writing about the things that I learn.&lt;/p&gt;

&lt;p&gt;Soon my articles got published on community websites like DZone and JavaCodeGeeks. Though my English writing skills are not good enough I keep on writing articles and I hope now I am getting it little bit better.&lt;/p&gt;

&lt;p&gt;When someone post a comment saying &amp;ldquo;Your article helped me to learn something&amp;rdquo;, I feel very happy. I take lot of help from community like StackOverflow, blogs, forums etc. If possible I try giving something back to the community, my 2 cents :-)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Becoming A Book Author&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After I started blogging and my articles got published on DZone and JavaCodeGeeks, my blog started getting more and more visitors. One day I received an email from Packt Publishers asking me whether I am interested to write a book on &lt;strong&gt;MyBatis&lt;/strong&gt; and I was very excited about it.&lt;/p&gt;

&lt;p&gt;Once I agreed to write the book, they explained the writing process and the payment details. They might not know that I would have written the book even without any pay. I agreed to write book because of my passion for technology, not to earn money.&lt;/p&gt;

&lt;p&gt;When I almost completed writing my first book I was asked to write another book on &lt;strong&gt;PrimeFaces&lt;/strong&gt; and I agreed. Approximately it took 18 months to write those two books. During all these 18 months I didn&amp;rsquo;t have any breaks, no week-ends, no outings, nothing. Whenever I find time I keep on writing or reading what I have already written to see if I can make it better.&lt;/p&gt;

&lt;p&gt;That was the time I realized how important it is to have some free time in life. Writing book is incredibly time consuming. If you are planning to write a book with the motivation of earning money, I would suggest to look for other options!!&lt;/p&gt;

&lt;p&gt;Finally one day I got a courier and I see the printed copies of my MyBatis book. It feels great to hold the book in your hand that you wrote. I got very emotional that day.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Challenges for passionate developers in India&lt;/strong&gt;&lt;br /&gt;
There are many issues that Indian Software Developers face.&lt;/p&gt;

&lt;h3 id=&#34;good-developers-are-like-war-heroes:c1b8c8a1a036b83faff332da70da14d3&#34;&gt;Good developers are like war heroes&lt;/h3&gt;

&lt;p&gt;As most of the projects we got are legacy projects or may be in maintenance mode, the management likes those people who are loyal and stick with the company (even though you don&amp;rsquo;t pay well or treat them like one type of RESOURCE) rather than strong technical people.&lt;/p&gt;

&lt;p&gt;Good developers are like war heroes, they are required while starting a new project or creating some core design. Once the core design is ready other developers can follow the design and add methods to the flow. Just like once the war is over no one cares where are those heroes, once the core design of the system is ready many companies won&amp;rsquo;t care about those good developers.&lt;/p&gt;

&lt;h3 id=&#34;many-non-indian-techies-hate-indian-developers:c1b8c8a1a036b83faff332da70da14d3&#34;&gt;Many Non-Indian Techies hate Indian developers&lt;/h3&gt;

&lt;p&gt;Every now and then I read articles about Indian Software Developers by someone bashing all the Indian software developers concluding the whole Indian IT is crap. Well, that is one individual&amp;rsquo;s opinion and different people have different opinions, and that&amp;rsquo;s perfectly OK.&lt;/p&gt;

&lt;p&gt;See this article &lt;a href=&#34;https://avinashsingh.wordpress.com/2007/04/05/a-myth-called-the-indian-programmer/&#34;&gt;https://avinashsingh.wordpress.com/2007/04/05/a-myth-called-the-indian-programmer/&lt;/a&gt; and read the comments. Even someone wants sponsor Pakistan to bomb India. Very matured people!!.&lt;/p&gt;

&lt;p&gt;The main problem with Indian IT companies is in order to get the project they convince the client that they can deliver the project in almost impossible timelines. To meet these crazy timelines they push managers to get it done and managers force team leads to get it done and the team leads put deadlines to developers. And here is is the biggest problem with Indian developers. Many of the Indian Developers don&amp;rsquo;t know how to say &amp;ldquo;NO&amp;rdquo;. They simply accept the crazy timelines and try to finish it. And the outcome of this whole process is &amp;ldquo;Unmaintainable crappy code&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;But I always have few questions in my mind. How the on-site Non-Indian client believes &amp;ldquo;Indian off-shore team can build it in 6 months when on-site team estimated 18 months for the same project&amp;rdquo;? Why don&amp;rsquo;t they ask for End-To-End Test Suite? Why don&amp;rsquo;t they ask for Code Quality reports?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Greediness to get it done for cheapest possible cost!!  You get what you paid for!!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Those who generalizes and say &amp;ldquo;The whole Indian Software Developers are bad&amp;rdquo; should think before saying things like this. I don&amp;rsquo;t think all the people living in one geographical location will automatically become good or bad. There will be good developers as well as bad developer everywhere. I worked with some onsite developers who are very arrogant. So is it correct to say all the on-site developers are arrogant. That will be ABSOLUTELY WRONG.&lt;/p&gt;

&lt;p&gt;I strongly believe that there are great developers and architects also In India and I worked with some of them.&lt;/p&gt;

&lt;p&gt;There are people like me who want to learn something everyday and become a better developer than yesterday. Over the years I learned &amp;ldquo;How to learn new things quickly?&amp;rdquo;. So I learn as many things as possible and be ready to work on anything. You want me to work on **Spring **or &lt;strong&gt;JavaEE&lt;/strong&gt;, I am fine. You want me to work on **Python **or **RoR **I am ready. You want me to use **Eclipse **or &lt;strong&gt;NetBeans&lt;/strong&gt;, no problem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Following the Community&lt;/strong&gt;&lt;br /&gt;
As I said it is very difficult to find passionate developers in India, I try to make contacts with the passionate developers around the world using Social Networks like Twitter.&lt;/p&gt;

&lt;p&gt;I like to attend technical conferences and meet other great developers. But unfortunately there are very less conferences happens in India compared to USA. So I try to watch those conference talks on InfoQ, Parleys or Youtube and I enjoy it a lot.&lt;/p&gt;

&lt;p&gt;I love the talks by &lt;strong&gt;Venkat Subramaniam&lt;/strong&gt; (@venkat_s) which are very informative and funny. I can&amp;rsquo;t stop laughing after reading few jokes in his book  Programming Groovy 2: Dynamic Productivity for the Java Developer &lt;a href=&#34;https://pragprog.com/book/vslg2/programming-groovy-2&#34;&gt;https://pragprog.com/book/vslg2/programming-groovy-2&lt;/a&gt;. He is really an amazing man.&lt;/p&gt;

&lt;p&gt;Talks by Venkat Subramaniam on Parleys &lt;a href=&#34;https://www.parleys.com/author/venkat-subramaniam&#34;&gt;https://www.parleys.com/author/venkat-subramaniam&lt;/a&gt;&lt;br /&gt;
How To Approach Refactoring by Venkat Subramaniam &lt;a href=&#34;https://www.youtube.com/watch?v=iGsPeR-SYYo&#34;&gt;https://www.youtube.com/watch?v=iGsPeR-SYYo&lt;/a&gt;&lt;br /&gt;
Ten Cool Things We Can Do with Popular JVM Languages &lt;a href=&#34;https://www.youtube.com/watch?v=Ulcl2TjHktA&#34;&gt;https://www.youtube.com/watch?v=Ulcl2TjHktA&lt;/a&gt;&lt;br /&gt;
33rd Degree 2012 - Pointy haired bosses and pragmatic programmers - Venkat Subramaniam &lt;a href=&#34;https://www.youtube.com/watch?v=lfmKvRaNnUs&#34;&gt;https://www.youtube.com/watch?v=lfmKvRaNnUs&lt;/a&gt;&lt;br /&gt;
Scala for the Intrigued &lt;a href=&#34;https://www.youtube.com/watch?v=grvvKURwGNg&#34;&gt;https://www.youtube.com/watch?v=grvvKURwGNg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a big fan of &lt;strong&gt;Rod Johnson&lt;/strong&gt; and I love his talks on **Entrepreneurialism &lt;strong&gt;&lt;a href=&#34;http://www.infoq.com/interviews/rod-johnson-entrepreneurialism&#34;&gt;http://www.infoq.com/interviews/rod-johnson-entrepreneurialism&lt;/a&gt; and the &amp;ldquo;&lt;/strong&gt;Things I wish I&amp;rsquo;d known**&amp;rdquo;  &lt;a href=&#34;http://www.infoq.com/presentations/Things-I-Wish-I-d-Known&#34;&gt;http://www.infoq.com/presentations/Things-I-Wish-I-d-Known&lt;/a&gt; in which he shared his journey of building Spring framework and creating an ecosystem around it. What a great presentation.&lt;/p&gt;

&lt;p&gt;I also watched his &amp;ldquo;&lt;strong&gt;Scala in 2018&lt;/strong&gt;&amp;rdquo; talk &lt;a href=&#34;https://www.youtube.com/watch?v=DBu6zmrZ_50&#34;&gt;https://www.youtube.com/watch?v=DBu6zmrZ_50&lt;/a&gt; and a discussion regarding the same Scala talk on youtube &lt;a href=&#34;https://www.youtube.com/watch?v=hZlxBRnxzDc&#34;&gt;https://www.youtube.com/watch?v=hZlxBRnxzDc&lt;/a&gt;. His way of taking the constructive criticism amazed me. He is awesome man.&lt;/p&gt;

&lt;p&gt;I also love the talks by &lt;strong&gt;Uncle Bob&lt;/strong&gt; &lt;a href=&#34;https://blog.8thlight.com/uncle-bob/archive.html&#34;&gt;https://blog.8thlight.com/uncle-bob/archive.html&lt;/a&gt;, &lt;strong&gt;Martin Fowler&lt;/strong&gt; &lt;a href=&#34;http://martinfowler.com/&#34;&gt;http://martinfowler.com/&lt;/a&gt;, &lt;strong&gt;David Heinemeier Hansson (DHH)&lt;/strong&gt;. We can learn lot of things from their decades of experience.&lt;/p&gt;

&lt;p&gt;I follow the talks and blogs of the awesome Java community leaders like&lt;br /&gt;
&lt;strong&gt;Antonio Goncalves&lt;/strong&gt; @agoncal &lt;a href=&#34;http://antoniogoncalves.org/&#34;&gt;http://antoniogoncalves.org/&lt;/a&gt;&lt;br /&gt;
**Adam Bien **@AdamBien &lt;a href=&#34;http://www.adam-bien.com/roller/abien/&#34;&gt;http://www.adam-bien.com/roller/abien/&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Reza Rahman&lt;/strong&gt; @reza_rahman &lt;a href=&#34;https://blogs.oracle.com/reza/&#34;&gt;https://blogs.oracle.com/reza/&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Arun Gupta&lt;/strong&gt; @arungupta &lt;a href=&#34;http://blog.arungupta.me/&#34;&gt;http://blog.arungupta.me/&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Josh Long&lt;/strong&gt; @starbuxman&lt;br /&gt;
&lt;strong&gt;Phil Webb&lt;/strong&gt; @phillip_webb&lt;br /&gt;
&lt;strong&gt;Cagatay Civici&lt;/strong&gt; @cagataycivici &lt;a href=&#34;http://www.primefaces.org/&#34;&gt;http://www.primefaces.org/&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Oliver Gierke&lt;/strong&gt; @olivergierke &lt;a href=&#34;http://olivergierke.de/&#34;&gt;http://olivergierke.de/&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;David Blevins&lt;/strong&gt; @dblevins &lt;a href=&#34;http://www.tomitribe.com/blog/&#34;&gt;http://www.tomitribe.com/blog/&lt;/a&gt;&lt;br /&gt;
and many more.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t miss even a single blog post or tweet from the rock star bloggers like&lt;br /&gt;
&lt;strong&gt;Baeldung&lt;/strong&gt; @baeldung &lt;a href=&#34;http://www.baeldung.com/&#34;&gt;http://www.baeldung.com/&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Petri Kainulainen&lt;/strong&gt; @petrikainulaine &lt;a href=&#34;http://www.petrikainulainen.net/&#34;&gt;http://www.petrikainulainen.net/&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Vlad Mihalcea&lt;/strong&gt; @vlad_mihalcea &lt;a href=&#34;http://vladmihalcea.com/&#34;&gt;http://vladmihalcea.com/&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Abhishek Gupta&lt;/strong&gt; @abhi_tweeter &lt;a href=&#34;https://abhirockzz.wordpress.com/&#34;&gt;https://abhirockzz.wordpress.com/&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Manuel Jordan&lt;/strong&gt; @dr_pompeii &lt;a href=&#34;http://manueljordanelera.blogspot.in/2014/06/manuel-jordan.html&#34;&gt;http://manueljordanelera.blogspot.in/2014/06/manuel-jordan.html&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Lukas Eder&lt;/strong&gt; @lukaseder &lt;a href=&#34;http://blog.jooq.org/&#34;&gt;http://blog.jooq.org&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Trisha Gee&lt;/strong&gt; @trisha_gee &lt;a href=&#34;http://trishagee.github.io/&#34;&gt;http://trishagee.github.io&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Thorben Janssen&lt;/strong&gt; @thjanssen123  &lt;a href=&#34;http://www.thoughts-on-java.org/&#34;&gt;http://www.thoughts-on-java.org&lt;/a&gt;&lt;br /&gt;
&lt;strong&gt;Nicolas Frankel&lt;/strong&gt; @nicolas_frankel &lt;a href=&#34;http://blog.frankel.ch/&#34;&gt;http://blog.frankel.ch&lt;/a&gt;&lt;br /&gt;
and many more.&lt;/p&gt;

&lt;p&gt;I love this whole awesome Java community!!&lt;/p&gt;

&lt;h2 id=&#34;looking-towards-better-future:c1b8c8a1a036b83faff332da70da14d3&#34;&gt;Looking towards better future&lt;/h2&gt;

&lt;p&gt;In recent years things are getting changed. Now Indian IT industry is not completely depending upon USA based projects. There is a lot of growth in technology adoption in Indian businesses. But again unless the thought process changed nothing is going to get better. Companies should stop expecting &lt;strong&gt;&amp;ldquo;9 developers to deliver a baby in 1 month&amp;rdquo;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Developer should become more professional and have guts to say &amp;ldquo;&lt;strong&gt;NO&lt;/strong&gt;&amp;rdquo; when they asked to code which they can&amp;rsquo;t implement with good quality.&lt;/p&gt;

&lt;p&gt;Anyway, over the years I learned Software Development is not all about technology. The key part is understanding the business domain and communicating with the other people.&lt;/p&gt;

&lt;p&gt;Hoping things will get better :-)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Can MicroServices Architecture Solve All Your Problems?</title>
      <link>http://sivalabs.github.io/post/2014/can-microservices-architecture-solve-all-your-problems/</link>
      <pubDate>Sun, 30 Nov 2014 06:51:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2014/can-microservices-architecture-solve-all-your-problems/</guid>
      <description>&lt;p&gt;IT is one field where you can find new things coming everyday. Theses days the whole developer community websites are flooded with MicroServices and Docker related stuff. Among them the idea of MicroServices is very exciting and encourages better way of building software systems. But as with any architectural style there will be pros and cons to every approach.&lt;/p&gt;

&lt;p&gt;Before discussing what are good and bad sides of MicroServices approach, first let me say what I understood about MicroServices.&lt;/p&gt;

&lt;blockquote&gt;MicroServices architecture encourage to build small, focused subsystems which can be integrated into the whole system preferably using REST protocol.&lt;/blockquote&gt;

&lt;p&gt;Now lets discuss on various aspects of MicroServices architecture.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The dream of every software architect/developer:&lt;/strong&gt;&lt;br /&gt;
First of all the idea of MicroServices is not new at all. From the very beginning our elders suggest to write classes focusing on one Single Responsibility and write methods to do one particular thing and do it well. Also we were encouraged to build separate modules which can perform some functionally related tasks. Then we bundle all these separate modules together and build an application delegating the appropriate tasks to respective modules. This is what we try to do for many year.&lt;/p&gt;

&lt;p&gt;But the idea of MicroServices took this approach to next level where you can deploy each module as an individual deployable unit and each service can communicate with any other Service based on some agreed protocol (preferably REST, another trendy cool thing :-)).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So what are the advantages of this MicroServices architectures?&lt;/strong&gt; There are plenty.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You will have many small services with manageable codebases which is easy to read and understand.&lt;/li&gt;
&lt;li&gt;You can confidently refactor or rewrite entire service because there won&amp;rsquo;t be any impact on other services.&lt;/li&gt;
&lt;li&gt;Each microservice can be deployed independently so that adding new features or upgrading any existing software/hardware platform won&amp;rsquo;t affect other services.&lt;/li&gt;
&lt;li&gt;You can easily adopt the next cool technology. If one of microservices is very critical service and performance is the highest priority then we can write that particular service using Scala in order to leverage your multi-core hardware support.&lt;/li&gt;
&lt;li&gt;If you are a service provider company you can sell each service separately possibly making better money compared to selling whole monolithic product.&lt;/li&gt;
&lt;li&gt;And most important factor is, the term MicroService is cool :-)
**&lt;br /&gt;
What is the other side of MicroServices architecture?**&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As with any approach, MicroServices also has some down sides and associated cost.&lt;/p&gt;

&lt;blockquote&gt;&#34;Great power comes with great responsibility&#34;. -Uncle Ben&lt;/blockquote&gt;

&lt;p&gt;Let us see what are the challenges to implement a system using MicroServices architecture.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The idea of MicroServices is very simple but very complex to implement in reality.&lt;/strong&gt;&lt;br /&gt;
In a monolithic system, the communication between various subsystems are mostly direct object communication. But in MicroServices based system, in order to communicate with other services you may use REST services which means additional HTTP call overhead and its inherent issues like network latency, possible communication failures etc. So we need to consider various aspects while implementing inter-service communication logic such as retry, fail-over and service down scenarios etc.&lt;br /&gt;
**&lt;br /&gt;
How good is your DevOps infrastructure?**&lt;br /&gt;
In order to go with MicroServices architecture, organization should have a good DevOps team to properly maintain the dozens of MicroService applications.&lt;br /&gt;
Do your organization has DevOps culture? Or your organization has the problem of blame game between Devs and Ops? If your organization doesn&amp;rsquo;t have a good DevOps culture and software/hardware resources then MicroServices architecture will be much more difficult to adopt.&lt;br /&gt;
**&lt;br /&gt;
Are we fixing the actual problem at all?**&lt;br /&gt;
Now many people are saying MicroServices architecture is better than Monolithic architecture. &lt;strong&gt;But is Monolithic architecture is the actual reason why many projects are failing? Will MicroServices architecture save the projects from failing? I guess NO.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Think, what were the reasons for your previously failed projects. Are those projects failed because of technology issues or people issues?&lt;br /&gt;
I have never seen a project which is failed because of the wrong technology selection, or wrong architectural approach. But I have seen many projects failing just because of problems with people.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I feel there are more severe issues than architecture issues which are causing projects to be failed such as:&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Having developers without sufficient skills&lt;/li&gt;
&lt;li&gt;Having developers who don&amp;rsquo;t want to learn anything new&lt;/li&gt;
&lt;li&gt;Having developers who don&amp;rsquo;t have courage to say &amp;ldquo;NO, we can&amp;rsquo;t do that in that time&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Having Architects who abandoned coding years ago&lt;/li&gt;
&lt;li&gt;Having Architects who think they know everything and don&amp;rsquo;t need to listen to their developers pain&lt;/li&gt;
&lt;li&gt;Having Managers who just blame the developers for not meeting the imposed deadlines without ever asking the developers for time-lines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are the real problems which are really causing the project failures.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now do you think just moving to MicroServices architecture saves the IT without fixing these problems?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Continuously innovating new ways of doing things is awesome and is required to move ahead. At the same time assuming &amp;ldquo;the next cool methodology/technology will fix all the problems is also wrong&amp;rdquo;.&lt;/p&gt;

&lt;blockquote&gt;So those of you who are just about to jump on MicroServices boat..THINK. FIX THE REAL PROBLEMS FIRST. You can&#39;t fill a bottle which has a hole at it&#39;s bottom.&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>How much crap you are keeping because &#34;You might need it in future&#34;?</title>
      <link>http://sivalabs.github.io/post/2014/how-much-crap-you-are-keeping-because-you-might-need-it-in-future/</link>
      <pubDate>Mon, 15 Sep 2014 08:41:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2014/how-much-crap-you-are-keeping-because-you-might-need-it-in-future/</guid>
      <description>&lt;p&gt;How much crap you are keeping because &amp;ldquo;You might need it in future&amp;rdquo;?&lt;/p&gt;

&lt;p&gt;I am planning to move to a new house in a couple of weeks, so I started packing things and throwing away unnecessary stuff.&lt;/p&gt;

&lt;p&gt;In the process of identifying unnecessary stuff I realized how much crap I am keeping in my house thinking it might be required in future.&lt;/p&gt;

&lt;p&gt;But I only came to know that I have these things while looking for waste to throw away. Lots of stuff..CDs/DVDs with JDK1.&lt;sup&gt;4&lt;/sup&gt;&amp;frasl;&lt;sub&gt;1&lt;/sub&gt;.5, Eclipse 3.2, Spring 2.5.zip, MySQL4.x, WebLogic Server 10, Utilities(AVG 2007, MS OFFICE 2003, Winamp/VLC players), broken DVD Writer and HardDrive and lots of clothes which I can&amp;rsquo;t wear anymore, many other electronic goods which are not working and many more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;While cleaning up all these things and throwing away all unnecessary things I got a thought like &amp;ldquo;Aren&amp;rsquo;t we doing the same mistake while developing software?&amp;rdquo;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;First we keep adding unnecessary features assuming we might need them in future to support all types of *bilities(Scalability, Extendability,Maintainability etc). After a while &amp;ldquo;That future purpose features&amp;rdquo; becomes a &amp;ldquo;Dark Room&amp;rdquo; where no one knows what exactly in there and many people don&amp;rsquo;t even bother to know why it is there in the first place.&lt;/p&gt;

&lt;p&gt;Even horrible thing is you might be in a situation where &amp;ldquo;whenever you add some new required feature you might have to add some code/configuration in that future purpose module as well&amp;rdquo;. You don&amp;rsquo;t know why you have to do it or you have to do it just because to pass the build.&lt;/p&gt;

&lt;p&gt;Moving to a new place quickly is painful when you have unnecessary luggage. Being Agile is very difficult if you have unnecessary future purpose code about what you forgot a long time ago.&lt;/p&gt;

&lt;p&gt;Less luggage, more comfort. Applies both to personal life and Software Development as well :-)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What is your favorite open source project?</title>
      <link>http://sivalabs.github.io/post/2014/what-is-your-favorite-open-source-project/</link>
      <pubDate>Thu, 03 Jul 2014 02:50:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2014/what-is-your-favorite-open-source-project/</guid>
      <description>&lt;p&gt;I do spend at-least couple of hours everyday reading about what is going on in Java community to be aware where we are heading and what is hot these days.&lt;/p&gt;

&lt;p&gt;Because in Java land everyday new frameworks, new libraries came out and few of them might be really good and can drastically simplify the work you are doing. So I thought it is good to know about these new and hot stuff even if you are not going to use them in your official project.&lt;/p&gt;

&lt;p&gt;In the last few years it looks like frameworks craze is gone and Programming Languages era begins. Ceylon, Kotlin, XTend, Go, Dart, Swift etc etc&amp;hellip;every BIG company is trying to invent their own programming language.&lt;/p&gt;

&lt;p&gt;But I feel like again things got changed in 2014, now everyone talks about MicroServices and Platform.&lt;/p&gt;

&lt;p&gt;Based on my understanding, Platform means a generic infrastructure tailored to solve one type of domain problem by using one or more programming languages (Polyglot programming) based on the need. You no need to stick to one programming language.&lt;/p&gt;

&lt;p&gt;And then I am seeing on web, more and more companies started calling their &amp;ldquo;framework&amp;rdquo; as a &amp;ldquo;platform&amp;rdquo; which makes me wondering when this framework turned into Platform.&lt;/p&gt;

&lt;p&gt;To tell this satirically I posted the following tweet on twitter.&lt;/p&gt;

&lt;blockquote&gt;**&#34;Seems frameworks &amp; programming languages craze is gone..Now if u want to sound like a model IT developers spel Platform as much as possible.&#34;**&lt;/blockquote&gt;

&lt;p&gt;Interestingly this turned into another interesting discussion &lt;a href=&#34;https://twitter.com/sivalabs/status/484369820805124096&#34;&gt;https://twitter.com/sivalabs/status/484369820805124096&lt;/a&gt; where my favorite twitter buddies participated.&lt;/p&gt;

&lt;p&gt;Now the topic of interest is &amp;ldquo;Whether writing a book is good option or not. If yes, writing on what? Spring, SQL, JOOQ???&lt;/p&gt;

&lt;p&gt;My friend @lukaseder feels instead of writing about Spring, better to write on SQL. And @petrikainulaine expressed his opinion that &amp;ldquo;he is not that passionate about SQL&amp;rdquo; which is my opinion too.&lt;/p&gt;

&lt;blockquote&gt;**Twitter isn&#39;t nice place for long discussion because of 140 char limit. So I created this post on my blog so that we can continue on this topic more elaborately.**&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;First is writing a book a good option?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yes, if you are passionate about technology and the topic you are writing about. No, if you are writing just to earn money. No, if you don&amp;rsquo;t want to spend your weekends also writing content thinking you could improve content within the page limit :-).&lt;/p&gt;

&lt;p&gt;And my friend @dr_pompeii brought up another issue &amp;ldquo;Piracy&amp;rdquo;. Yes, that&amp;rsquo;s one of the problem. You can get a pirated e-copy of most of the books in 2 months.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On what topic should you write? Better to write on SQL instead of Spring?&lt;/strong&gt;&lt;br /&gt;
Here I disagree with LukasEder :-). I write on topics which I am interested in and have good understanding. &lt;em&gt;And let me shamelessly agree that I am not very good at SQL and I can&amp;rsquo;t write a book on it which is more interesting than any of the existing SQL books.&lt;/em&gt; And most importantly I don&amp;rsquo;t have a passion on SQL.&lt;/p&gt;

&lt;p&gt;Promoting the articles on popular website might not be that difficult. I can write couple of posts about JavaEE 7 and let Reza do the promoting part :-)&lt;/p&gt;

&lt;p&gt;I like Spring not just because of its popularity, I do learn how to design and code in a better by going through its source code. I learn how to write a good abstraction layer by looking into various Template classes and Adapters in Spring source code.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;At time I also feel like I am after this Spring framework for a very long time and want to learn something different and more interesting.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So if it is not Spring, what is a good open source project that you suggest worth reading its source code and learn something good?&lt;/strong&gt;&lt;br /&gt;
I thought of taking a deep look into Jersey (JAX-RS) and SLF4J libraries.&lt;/p&gt;

&lt;p&gt;What would you suggest? Any ideas?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do you have defect id to burn the hours spent on code refactoring?</title>
      <link>http://sivalabs.github.io/post/2012/do-you-have-defect-id-to-burn-hours/</link>
      <pubDate>Wed, 22 Feb 2012 10:04:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2012/do-you-have-defect-id-to-burn-hours/</guid>
      <description>&lt;p&gt;Working on a large legacy code-base is challenging(painful?) and is inevitable.&lt;br /&gt;
You may need to keep on refactoring the legacy code to fix bugs, to add new features or enhancements.&lt;br /&gt;
For these changes normally we would have a defect or new requirement created in QualityCenter/VersionOne or whatever the tool you use for tracking the tasks. We burn the hours spent on these tasks against the respective defect-id or requirement-id.&lt;/p&gt;

&lt;p&gt;Then assume you identify some piece of code which is written in horrible way and thought of refactoring that logic. Generally we will create a defect-id explaining the need for refactoring and refactor, test, commit, done.&lt;/p&gt;

&lt;p&gt;In some organizations, &lt;strong&gt;as per process every commit to the source code should be associated with some defect-id or requirement-id&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;What if your manager said&lt;/p&gt;

&lt;blockquote&gt;_As per our process, every commit should be associated with a defect/requirement.  
We can create a defect for code refactoring that you are suggesting. Every code change should go through all the QA/UAT cycles. But the business will prioritize the defects/features for the next release as per release plan. So I can&#39;t assure you whether this will go in next release or not._&lt;/blockquote&gt;

&lt;p&gt;I guess you can understand what that manager&amp;rsquo;s reply implies :-).&lt;/p&gt;

&lt;p&gt;But I felt like from the manager&amp;rsquo;s perspective it is valid point. His target might be to deliver the planned bug-fixes/features for the next release.&lt;/p&gt;

&lt;p&gt;So guys, I am curious to know how is code refactoring is happening in your organizations?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Where is Craig McClanahan(Author of Struts 1.x)?</title>
      <link>http://sivalabs.github.io/post/2012/where-is-craig-mcclanahanauthor-of-struts-1-x/</link>
      <pubDate>Thu, 02 Feb 2012 05:53:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2012/where-is-craig-mcclanahanauthor-of-struts-1-x/</guid>
      <description>&lt;p&gt;Firstly, a little background on why I like Struts&amp;hellip;please bear with me.&lt;/p&gt;

&lt;p&gt;I started my career as a java developer in 2006. That time my team lead strongly believes that freshers should work on core technologies without any tools for at-least 6 months so that they will get a chance to learn basics and have a strong foundation on fundamentals.So I was working on Core Java, Servlets and JSP for first 3-4 months and I used to hear the term &amp;ldquo;Struts&amp;rdquo; very frequently on web and in our senior java developers discussions. So I started learning Struts in my free time and practiced it by myself by writing code using EditPlus(no eclipse ide as per my team leads rule :-)).&lt;/p&gt;

&lt;p&gt;One evening me and my friend sat together to write a simple registration application using struts.Because we were not using any IDE, it is like write the code in EditPlus, compile using javac, build war file using jar command and deploy to tomcat. I still remember the same process(code/compile/build/deploy with bare hands) is repeated 17 times to finally get that one form struts application working because of spelling mistakes, missing import statements, mistakes in struts xml configuration etc etc. After 4th time we started counting how many times we need to do this in frustration:-))&lt;/p&gt;

&lt;p&gt;Soon we got EclipseIDE and coding became a cake walk&amp;hellip; type first 2 chars and Ctrl+K&amp;hellip;enjoy :-).&lt;br /&gt;
We were using LombozEclipse which comes with in-built Support for creating Struts projects.So coding became fun with LombozEclipse, Tomcat &amp;amp; Struts.&lt;br /&gt;
I fall in love with Struts after knowing how easy it is to develop web apps using Struts instead of directly using Servlets. Then I experimented with different types Action Classes, Modules, Validations, Tiles, i18n, lot of Struts UI tags&amp;hellip;.That was a great time for me.&lt;/p&gt;

&lt;p&gt;After a year or so I started hearing like Struts is not that good, depends on Servlet API, verbose xml, blah blah in the process of marketing brand new MVC frameworks. Every new MVC framework started explaining how their framework is better than Struts.&lt;/p&gt;

&lt;p&gt;I remember, I guess in Spring in Action book author mentioned Struts as &amp;ldquo;King Of Java Web Frameworks&amp;rdquo;. Yes, that true. Yes I agree that Struts has its own set of limitations/drawbacks. But writing a framework when there is no such a similar framework exists is not easy.&lt;/p&gt;

&lt;p&gt;What I meant to say is writing SpringMVC is easier as it has a reference to check what minimum features needs to be provided, what limitations should be eliminated and what additional features should be added by looking at Struts. But for Struts Author there is no such a reference to check against.&lt;/p&gt;

&lt;p&gt;After sometime I came to know that Craig McClanahan is moved on to JSF1.x and then to Shale and then totally fade-out from java community.&lt;br /&gt;
After that no news about what he is doing, no updates on his blog, no clue where he is and what he is doing.&lt;/p&gt;

&lt;p&gt;Recently somewhere I read in some blog like &amp;ldquo;Craig McClanahan created shit framework(struts) and now he is playing with Rails Toys&amp;rdquo;. I really surprised rather disappointed after knowing that Craig McClanahan, The Author of The King of Java Web Framework, is entirely left Java :-(&lt;/p&gt;

&lt;p&gt;Even what is more surprising to me is why SpringSource or RedHat guys didn&amp;rsquo;t try to bring him back to Java.&lt;br /&gt;
When there was no MVC framework, no DI concepts, no Annotations he was able to create such a beautiful framework. Now we have all fancy stuff IOC, DI, CDI, Annotations, REST, JSON and 1000 more&amp;hellip; With all these, he could create something more poweful.&lt;/p&gt;

&lt;p&gt;Come on guys bring him back to Java Community.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dennis Ritchie passed away :-&#39;(</title>
      <link>http://sivalabs.github.io/post/2011/dennis-ritchie-died/</link>
      <pubDate>Fri, 14 Oct 2011 06:38:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/dennis-ritchie-died/</guid>
      <description>&lt;p&gt;The creator of C programming language and UNIX operating system expired on Oct 8th 2011.&lt;br /&gt;
C and UNIX are the terms which doesn&amp;rsquo;t need any introductions and can&amp;rsquo;t imagine today&amp;rsquo;s modern technologies without them.&lt;/p&gt;

&lt;p&gt;Till my secondary education i was passionate about mathematics and wanted to become a mathematician. But in my graduation(B.Sc computer science) I used computer for the first time starting with Pascal.&lt;br /&gt;
Then I learn C programming language and then I fall in love with programming.&lt;/p&gt;

&lt;p&gt;If there is no C then there is no Java, J2EE, Spring, Hibernate, Grails, Scala or whatever the hot technologies out there in market.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-c4UWEOw_qZU/TpfV_5WPmFI/AAAAAAAAAlI/vb8aA31G-vs/s1600/1997_dennis_ritchie.jpg&#34;&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-c4UWEOw_qZU/TpfV_5WPmFI/AAAAAAAAAlI/vb8aA31G-vs/s1600/1997_dennis_ritchie.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We miss you Dennis. RIP.&lt;/p&gt;

&lt;p&gt;-Siva&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Finally you need to deliver DeveloperWrittenCode.WAR, not Manager&#39;sManagerialSkills.zip</title>
      <link>http://sivalabs.github.io/post/2011/finally-you-need-to-deliver-developerwrittencode-war-not-managersmanagerialskills-zip/</link>
      <pubDate>Tue, 01 Feb 2011 06:10:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/finally-you-need-to-deliver-developerwrittencode-war-not-managersmanagerialskills-zip/</guid>
      <description>&lt;p&gt;Some IT managers perspective on developers made me to write this post.&lt;/p&gt;

&lt;p&gt;A managing director of a company telling to delivery head that&lt;/p&gt;

&lt;blockquote&gt;We need not worry about developers. If we go around the villages with a car and get the people who just completed their school and give him a computer with internet connection and then give 15 days of time to learn java. Then assign the work and put a deadline. They will complete the work. We need not bother about Developers. All we need to care about is Managers, who can interact with the client and make the developers to finish their work.&lt;/blockquote&gt;

&lt;p&gt;A Delivery head telling to a team lead that&lt;/p&gt;

&lt;blockquote&gt;Why the project get delayed? If you allocate the work to your developers and put a deadline they should complete it on-time. If they can&#39;t we don&#39;t need them and we can terminate them right away&#34;.(The team is a one year experienced java developer and two 2 months experienced fresh graduates, and still nobody knows what are the requirements for the project).&lt;/blockquote&gt;

&lt;p&gt;A delivery head is telling to a senior developer that&lt;/p&gt;

&lt;blockquote&gt;I will give you 3 fresh graduates and i want to build a portal that looks like igoogle in 2 months. Just assign the work and put a deadline. They will complete it.(Those 3 fresh graduates just know about computer programming in theory and they haven&#39;t write HelloWorld program yet).&lt;/blockquote&gt;

&lt;p&gt;I know not all manager think like this. I have worked with many good managers who takes care of developers very well, sit with the developers when it needs to work in late nights, arranging dinner and drop him at his door steps at 2&amp;rsquo;o clock in the midnight. I know managers will have much more responsibilities than a developer. I know managers are responsible to give justification if the project delivery got delayed. But that doesn&amp;rsquo;t mean that managers should treat the developers as machines.&lt;/p&gt;

&lt;p&gt;A project delivery is not solely depends on either developers or managers. It is a team work. Everyone should understand the importance of others contribution and treat properly.&lt;/p&gt;

&lt;p&gt;Putting the deadline is the only way to make the developers complete their work? No.&lt;/p&gt;

&lt;p&gt;There are some other approaches to keep the team members energy levels up and get the maximum productivity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Observe their interested areas and put them to work on those areas:&lt;/strong&gt;&lt;br /&gt;
Some developers are more interested on UI development, some are interested on Back-end Server side coding and some others are much more interested on Database programming. If any developer is interested in any particular area allow him to work on it. You can get maximum productivity from him as he likes what he is doing which always results in better productivity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Give an opportunity to improve in his weak areas:&lt;/strong&gt;&lt;br /&gt;
Some developers are very strong in technical aspects but poor in communication skills. Communication skills are very important as developers has to communicate their design approaches, any development issues to others. In that case ask them to build a good POC using his favorite technologies and explain the design and best practices he followed to his team. After doing this multiple times there will be definitely an improvement in his communication skills.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Promptly give feedback on his improvement:&lt;/strong&gt;&lt;br /&gt;
It is more important to give feedback on his improvement which build confidence on himself. If you don&amp;rsquo;t give any feedback promptly and you did it on year-end appraisal only there will be no use. Give timely feedback and allow give a chance to improve.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Appreciate the good work:&lt;/strong&gt;&lt;br /&gt;
When a developer did a good job it is the managers responsibility to let others know about it because all the developers may not be good at marketing himself. A simple congratulations email or a ThanksCard might drastically improve the developers productivity.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Give the ownership on his work:&lt;/strong&gt;&lt;br /&gt;
When a developer is capable of handling a module ask him to take up the ownership on that. This will be good for both the project and the developer. For that module you can have a single point of contact to track the progress and the developer may improve on how to design the module, architecture best practices etc instead of just coding to the design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Listen to their suggestions:&lt;/strong&gt;&lt;br /&gt;
Even though some developers have less experience they might have better ideas. Listen to them. If a developer suggest a new way of doing something ask him to prove that it will work by doing a simple POC.&lt;/p&gt;

&lt;blockquote&gt;A great developer&#39;s(Craig McClanahan) passion on technology gave birth to Struts which became the default web application framework for java and brings up lots of job opportunities(Still there are lot of openings for Struts 1.x). Another great developer/architect&#39;s(Rod Johnson) expertise on application development gave birth to Spring framework which eases the life of java developers across the world and cut down the development time drastically which is saving lot of money to enterprises. Some other technology freak&#39;s(Gavin King) thoughts on database programming using java created Hibernate ORM framework which influences the persistence approach and became a default tool for persistence across the java community.&lt;/blockquote&gt;

&lt;blockquote&gt;**This is the power of a developer. Feel proud to be a developer.**&lt;/blockquote&gt;

&lt;p&gt;The last thing that I can say is &amp;ldquo;&lt;strong&gt;Finally you need to deliver DeveloperWrittenCode.WAR to your client, not Manager&amp;rsquo;sManagerialSkills.zip&lt;/strong&gt;&amp;rdquo;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>