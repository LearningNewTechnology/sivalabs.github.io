<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Springmvc on SivaLabs</title>
    <link>http://sivalabs.github.io/tags/springmvc/</link>
    <description>Recent content in Springmvc on SivaLabs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Mar 2014 06:31:00 +0000</lastBuildDate>
    <atom:link href="http://sivalabs.github.io/tags/springmvc/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>SpringMVC4 &#43; Spring Data JPA &#43; SpringSecurity configuration using JavaConfig</title>
      <link>http://sivalabs.github.io/post/2014/springmvc4-spring-data-jpa-springsecurity-configuration-using-javaconfig/</link>
      <pubDate>Sun, 02 Mar 2014 06:31:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2014/springmvc4-spring-data-jpa-springsecurity-configuration-using-javaconfig/</guid>
      <description>&lt;p&gt;In this article we will see how to configure and integrate SpringMVC4, Spring Data JPA with Hibernate and SpringSecurity using JavaConfig.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First let&amp;rsquo;s configure all the necessary dependencies in &lt;strong&gt;pom.xml&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302291&#34;&gt;https://gist.github.com/sivaprasadreddy/9302291&lt;/a&gt; /]&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure database connection properties and email settings in &lt;strong&gt;application.properties&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302302&#34;&gt;https://gist.github.com/sivaprasadreddy/9302302&lt;/a&gt; /]&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure common Service Layer beans such as &lt;strong&gt;PropertySourcesPlaceholderConfigurer&lt;/strong&gt; and **JavaMailSender **etc in &lt;strong&gt;com.sivalabs.springapp.config.AppConfig.java&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302313&#34;&gt;https://gist.github.com/sivaprasadreddy/9302313&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Observe that we have excluded the package &amp;ldquo;&lt;strong&gt;com.sivalabs.springapp.web.&lt;/strong&gt;*&amp;rdquo; from component scanning using new **REGEX excludeFilter **type.
If we don&amp;rsquo;t exclude web related packages and tries to run JUnit test for service layer beans we will encounter the following Exception:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;java.lang.IllegalArgumentException: A ServletContext is required to configure default servlet handling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Also note that we have enabled Caching using &lt;strong&gt;@EnableCaching&lt;/strong&gt;, so we should declare **CacheManager **bean.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure Persistence Layer beans in &lt;strong&gt;com.sivalabs.springapp.config.PersistenceConfig.java&lt;/strong&gt; as follows:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302322&#34;&gt;https://gist.github.com/sivaprasadreddy/9302322&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Here we have configured DataSource and JPA EntityManagerFactory bean using Hibernate implementation.
Also we have configured DataSourceInitializer bean to initialize and populate our tables with seed data. We can enable/disable executing this &lt;strong&gt;db.sql&lt;/strong&gt; script by changing init-db property value in application.properties.
And finally we have enabled Spring Data JPA repositories scanning using &lt;strong&gt;@EnableJpaRepositories&lt;/strong&gt; to scan &amp;ldquo;&lt;strong&gt;com.sivalabs.springapp.repositories&lt;/strong&gt;&amp;rdquo; package for JPA repository interfaces.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Now let us configure Web related beans in &lt;strong&gt;com.sivalabs.springapp.web.config.WebMvcConfig.java&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302326&#34;&gt;https://gist.github.com/sivaprasadreddy/9302326&lt;/a&gt; /]&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure DispatcherService using &lt;strong&gt;AbstractAnnotationConfigDispatcherServletInitializer&lt;/strong&gt; convinient class.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302337&#34;&gt;https://gist.github.com/sivaprasadreddy/9302337&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Here few things to note are we configured &lt;strong&gt;AppConfig.class&lt;/strong&gt; as RootConfig classes and &lt;strong&gt;WebMvcConfig.class&lt;/strong&gt; as ServletConfigClasses which is similar to how we configure in &lt;strong&gt;web.xml&lt;/strong&gt; using ContextLoaderListener and DispatcherServlet&amp;rsquo;s contextConfigLocation .
Also we have registered &lt;strong&gt;OpenEntityManagerInViewFilter&lt;/strong&gt; to enable lazy loading of JPA entity graphs in view rendering phase.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Let us configure SpringSecurity.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;First let us create a &lt;strong&gt;SecurityUser&lt;/strong&gt; class which extends our application specific &lt;strong&gt;User&lt;/strong&gt; class and implements &lt;strong&gt;org.springframework.security.core.userdetails.UserDetails&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302340&#34;&gt;https://gist.github.com/sivaprasadreddy/9302340&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;We will implement a custom &lt;strong&gt;UserDetailsService&lt;/strong&gt; and use Spring Data JPA repositories to load User details.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302345&#34;&gt;https://gist.github.com/sivaprasadreddy/9302345&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Now create &lt;strong&gt;com.sivalabs.springapp.config.SecurityConfig.java&lt;/strong&gt; which contains SpeingSecurity related bean definitions.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302351&#34;&gt;https://gist.github.com/sivaprasadreddy/9302351&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Update &lt;strong&gt;SpringWebAppInitializer&lt;/strong&gt; which we created eariler to add &lt;strong&gt;SecurityConfig&lt;/strong&gt; configuration class.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302357&#34;&gt;https://gist.github.com/sivaprasadreddy/9302357&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;As per our SpringSecurity custom Form Login configuration, we will use the following login form in &lt;strong&gt;login.jsp&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302375&#34;&gt;https://gist.github.com/sivaprasadreddy/9302375&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Once we successfully login we can obtain the authenticated use details using **** and secure parts of the view using **** as follows:&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302382&#34;&gt;https://gist.github.com/sivaprasadreddy/9302382&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;You can find the source code at github &lt;a href=&#34;https://github.com/sivaprasadreddy/sivalabs-blog-samples-code/tree/master/springmvc-datajpa-security-demo&#34;&gt;https://github.com/sivaprasadreddy/sivalabs-blog-samples-code/tree/master/springmvc-datajpa-security-demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There are few issues while running the same application on JBoss AS 7.1. I have made few changes to run on JBossAS7.1 and published code at &lt;a href=&#34;https://github.com/sivaprasadreddy/sivalabs-blog-samples-code/tree/master/springmvc-datajpa-security-demo-jboss7&#34;&gt;https://github.com/sivaprasadreddy/sivalabs-blog-samples-code/tree/master/springmvc-datajpa-security-demo-jboss7&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Context root relative URLs using Spring&#39;s </title>
      <link>http://sivalabs.github.io/post/2011/context-root-relative-urls-using-springs/</link>
      <pubDate>Wed, 27 Jul 2011 04:57:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/context-root-relative-urls-using-springs/</guid>
      <description>&lt;p&gt;While developing web applications the common problem is to reference the static resources like js, stylesheets,images in JSPs from the relative URLs.&lt;br /&gt;
Suppose in your project you have the following structure.&lt;br /&gt;
MyApp&lt;br /&gt;
src&lt;br /&gt;
WebContent&lt;br /&gt;
home.jsp&lt;br /&gt;
jsp&lt;br /&gt;
createUser.jsp&lt;br /&gt;
js&lt;br /&gt;
util.js&lt;br /&gt;
css&lt;br /&gt;
style.css&lt;br /&gt;
images&lt;br /&gt;
logo.jpg&lt;br /&gt;
WEB-INF&lt;br /&gt;
&amp;hellip;&lt;br /&gt;
&amp;hellip;&amp;hellip;.&lt;/p&gt;

&lt;p&gt;So here if your current URL is &lt;a href=&#34;http://localhost:8080/MyApp/home.do&#34;&gt;http://localhost:8080/MyApp/home.do&lt;/a&gt;, you need to reference static resources as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;js/util.js&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Suppose your current URL is &lt;a href=&#34;http://localhost:8080/MyApp/jsp/createUser.do&#34;&gt;http://localhost:8080/MyApp/jsp/createUser.do&lt;/a&gt;, you need to reference static resources as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;../js/util.js&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This becomes messy to reference the static resources like this.&lt;/p&gt;

&lt;p&gt;Spring framewrok is providing a custom tag &lt;a href=&#34;spring:url&#34;&gt;spring:url&lt;/a&gt; to resolve this issue.&lt;br /&gt;
&lt;a href=&#34;spring:url&#34;&gt;spring:url&lt;/a&gt; tag resolves the path from context root. So you can always give the path for static resources from context root irrespective of current URL.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%@taglib uri=&amp;quot;http://www.springframework.org/tags&amp;quot; prefix=&amp;quot;spring&amp;quot;%&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&#39;&amp;lt;spring:url value=&amp;quot;/js/ajax.js&amp;quot; htmlEscape=&amp;quot;true&amp;quot;/&amp;gt;&#39;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also pass the query parameters like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;s:url value=&amp;quot;/messages/&amp;quot; var=&amp;quot;messages_url&amp;quot; htmlEscape=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;s:param name=&amp;quot;name&amp;quot; value=&amp;quot;siva&amp;quot;&amp;gt;&amp;lt;/s:param&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/s:url&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;a href=&amp;quot;${messages_url}&amp;quot;&amp;gt;Messages&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This results in &lt;a href=&#34;http://sivalabs.github.io/MyApp/messages/?name=siva&#34;&gt;Messages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to pass the param values as part of URI you can do like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;s:url value=&amp;quot;/messages/{name}&amp;quot; var=&amp;quot;messages_url&amp;quot; htmlEscape=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;s:param name=&amp;quot;name&amp;quot; value=&amp;quot;siva&amp;quot;&amp;gt;&amp;lt;/s:param&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/s:url&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;a href=&amp;quot;${messages_url}&amp;quot;&amp;gt;Messages&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This results in &lt;a href=&#34;http://sivalabs.github.io/MyApp/messages/siva&#34;&gt;Messages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This tag helped me a lot while developing web application following REST approach.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to POST and GET JSON between EXTJS and SpringMVC3</title>
      <link>http://sivalabs.github.io/post/2011/how-to-post-and-get-json-between-extjs-and-springmvc3/</link>
      <pubDate>Thu, 23 Jun 2011 08:27:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/how-to-post-and-get-json-between-extjs-and-springmvc3/</guid>
      <description>&lt;p&gt;After one month of evaluation of the frameworks and tools, i choose ExtJS for UI and Spring/SpringMVC for business layer for my pet project.&lt;/p&gt;

&lt;p&gt;Again by using ExtJS we can send data to server by form submits or as request parameters or in json format through Ajax requests. ExtJS uses JSON format in many situations to hold data. So I thought using JSON as data exchange format between EXTJS and Spring will be consistent.&lt;/p&gt;

&lt;p&gt;The following code snippets explains how we can use ExtJS and SpringMVC3 to exchange data in JSON format.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Register MappingJacksonHttpMessageConverter in dispatcher-servlet.xml&lt;/p&gt;

&lt;p&gt;&lt;bean class=&#34;org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter&#34;&gt;&lt;br&gt;&lt;/br&gt;     &lt;br&gt;&lt;/br&gt;  &lt;property name=&#34;messageConverters&#34;&gt;&lt;br&gt;&lt;/br&gt;     &lt;list&gt;&lt;br&gt;&lt;/br&gt;        &lt;bean class=&#34;org.springframework.http.converter.json.MappingJacksonHttpMessageConverter&#34;/&gt;&lt;br&gt;&lt;/br&gt;     &lt;/list&gt;&lt;br&gt;&lt;/br&gt;   &lt;/property&gt;     &lt;br&gt;&lt;/br&gt; &lt;/bean&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Don&amp;rsquo;t forget to copy jackson-json jar(s) to WEB-INF/lib&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Trigger the POST request from ExtJS script as follows:&lt;/p&gt;

&lt;p&gt;Ext.Ajax.request({&lt;br&gt;&lt;/br&gt;  url : &amp;lsquo;doSomething.htm&amp;rsquo;,&lt;br&gt;&lt;/br&gt;  method: &amp;lsquo;POST&amp;rsquo;,&lt;br&gt;&lt;/br&gt;  headers: { &amp;lsquo;Content-Type&amp;rsquo;: &amp;lsquo;application/json&amp;rsquo; },                     &lt;br&gt;&lt;/br&gt;  params : { &amp;ldquo;test&amp;rdquo; : &amp;ldquo;testParam&amp;rdquo; },&lt;br&gt;&lt;/br&gt;  jsonData: {&lt;br&gt;&lt;/br&gt;      &amp;ldquo;username&amp;rdquo; : &amp;ldquo;admin&amp;rdquo;,&lt;br&gt;&lt;/br&gt;      &amp;ldquo;emailId&amp;rdquo; : &amp;ldquo;admin@sivalabs.com&amp;rdquo;&lt;br&gt;&lt;/br&gt;        },&lt;br&gt;&lt;/br&gt;  success: function (response) {&lt;br&gt;&lt;/br&gt;         var jsonResp = Ext.util.JSON.decode(response.responseText);&lt;br&gt;&lt;/br&gt;         Ext.Msg.alert(&amp;ldquo;Info&amp;rdquo;,&amp;ldquo;UserName from Server : &amp;ldquo;+jsonResp.username);&lt;br&gt;&lt;/br&gt;       },&lt;br&gt;&lt;/br&gt;  failure: function (response) {&lt;br&gt;&lt;/br&gt;      var jsonResp = Ext.util.JSON.decode(response.responseText);&lt;br&gt;&lt;/br&gt;      Ext.Msg.alert(&amp;ldquo;Error&amp;rdquo;,jsonResp.error);&lt;br&gt;&lt;/br&gt;       }&lt;br&gt;&lt;/br&gt; });&lt;br&gt;&lt;/br&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Write a Spring Controller to handle the &amp;ldquo;/doSomething.htm&amp;rdquo; reguest.&lt;/p&gt;

&lt;p&gt;@Controller&lt;br&gt;&lt;/br&gt;public class DataController&lt;br&gt;&lt;/br&gt;{&lt;br&gt;&lt;/br&gt; @RequestMapping(value = &amp;ldquo;/doSomething&amp;rdquo;, method = RequestMethod.POST)&lt;br&gt;&lt;/br&gt; @ResponseBody&lt;br&gt;&lt;/br&gt; public User handle(@RequestBody User user) throws IOException &lt;br&gt;&lt;/br&gt; {&lt;br&gt;&lt;/br&gt;  System.out.println(&amp;ldquo;Username From Client : &amp;ldquo;+user.getUsername());&lt;br&gt;&lt;/br&gt;  System.out.println(&amp;ldquo;EmailId from Client : &amp;ldquo;+user.getEmailId());&lt;br&gt;&lt;/br&gt;  user.setUsername(&amp;ldquo;SivaPrasadReddy&amp;rdquo;);&lt;br&gt;&lt;/br&gt;  user.setEmailId(&amp;ldquo;siva@sivalabs.com&amp;rdquo;);  &lt;br&gt;&lt;/br&gt;  return user;&lt;br&gt;&lt;/br&gt; }&lt;br&gt;&lt;/br&gt;}&lt;br&gt;&lt;/br&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Any other better approaches?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Authentication Checking using SpringMVC Interceptors</title>
      <link>http://sivalabs.github.io/post/2011/authentication-checking-using-springmvc-interceptors/</link>
      <pubDate>Mon, 06 Jun 2011 08:18:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/authentication-checking-using-springmvc-interceptors/</guid>
      <description>&lt;p&gt;For many web applications, some URLs need to protect from public access and some other URLs need to be protected based on the User Roles and privileges. To achieve this we can use Filters that comes with Servlet API or we can use JAAS(Java Authentication and Authorization Service).&lt;/p&gt;

&lt;p&gt;SpringMVC provides Interceptors which can be used to intercept the URL and pre-process, post-process the requests.&lt;/p&gt;

&lt;p&gt;Let us write a simple AuthenticationInterceptor to check whether the user is already logged in or not. If the User is already logged into the system we will let him continue otherwise we will redirect him to login page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AuthenticationInterceptor .java&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.web.controllers;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.servlet.http.HttpServletRequest;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.servlet.http.HttpServletResponse;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.stereotype.Component;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import com.sivalabs.entities.User;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Component&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class AuthenticationInterceptor extends HandlerInterceptorAdapter&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Override&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public boolean preHandle(HttpServletRequest request,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   HttpServletResponse response, Object handler) throws Exception&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  String uri = request.getRequestURI();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  if(!uri.endsWith(&amp;quot;login.do&amp;quot;) &amp;amp;&amp;amp; !uri.endsWith(&amp;quot;logout.do&amp;quot;))&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   User userData = (User) request.getSession().getAttribute(&amp;quot;LOGGEDIN_USER&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   if(userData == null)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    response.sendRedirect(&amp;quot;login.do&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    return false;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   }   &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return true;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;LoginController.java&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.web.controllers;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Controller&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class LoginController&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(value=&amp;quot;/login&amp;quot;, method=RequestMethod.POST)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public ModelAndView login(@ModelAttribute(&amp;quot;login&amp;quot;)User user, &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         BindingResult result, SessionStatus status,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         HttpServletRequest request)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     String viewName = &amp;quot;login&amp;quot;;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     ModelAndView mav = new ModelAndView(viewName);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     loginFormValidator.validate(user, result);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        if (result.hasErrors())&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            return mav;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        User userData = userService.login(user);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        status.setComplete();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        if(userData == null){&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         mav.getModel().put(&amp;quot;ERROR&amp;quot;, &amp;quot;Invalid UserName and Password&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }else{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         viewName = &amp;quot;welcome&amp;quot;;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         request.getSession().setAttribute(&amp;quot;LOGGEDIN_USER&amp;quot;, userData);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        mav.setViewName(viewName);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return mav;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;WEB-INF/dispatcher-servlet.xml&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;beans&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;context:annotation-config/&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;context:component-scan base-package=&amp;quot;com.sivalabs&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;bean class=&amp;quot;org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;property name=&amp;quot;interceptors&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;ref bean=&amp;quot;authenticationInterceptor&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;bean class=&amp;quot;org.springframework.web.servlet.view.InternalResourceViewResolver&amp;quot; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  p:prefix=&amp;quot;/WEB-INF/jsp/&amp;quot; p:suffix=&amp;quot;.jsp&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/beans&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now if we try to access any other URLs without logging into the application it will automatically redirect to login page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SpringMVC 3 &#43; Tiles 2.2.2 Integration</title>
      <link>http://sivalabs.github.io/post/2011/springmvc-3-tiles-222-integration/</link>
      <pubDate>Mon, 06 Jun 2011 07:53:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/springmvc-3-tiles-222-integration/</guid>
      <description>&lt;p&gt;Apache Tiles is a popular and mostly used templating framework for java based web application.&lt;br /&gt;
Tiles became more popular because Struts 1.x uses Tiles as its default templating framework.&lt;br /&gt;
SpringMVC which is an MVC framework, like Struts, also supports integration of Tiles as its templating framework.&lt;/p&gt;

&lt;p&gt;Let us see how we can integrate SpringMVC and Tiles.&lt;/p&gt;

&lt;p&gt;You can download Tiles binaries from &lt;a href=&#34;http://tiles.apache.org/&#34;&gt;http://tiles.apache.org/&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#1: Add the following tiles jars to WEB-INF/lib folder.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;tiles-api-2.2.2.jar&lt;br /&gt;
tiles-core-2.2.2.jar&lt;br /&gt;
tiles-jsp-2.2.2.jar&lt;br /&gt;
tiles-servlet-2.2.2.jar&lt;br /&gt;
tiles-template-2.2.2.jar&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#2: Configure tiles integration in WEB-INF/dispatcher-servlet.xml&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;beans&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;property name=&amp;quot;definitions&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;list&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;value&amp;gt;/WEB-INF/tiles.xml&amp;lt;/value&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;/list&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;property name=&amp;quot;viewClass&amp;quot; value=&amp;quot;org.springframework.web.servlet.view.tiles2.TilesView&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/bean&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/beans&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Step#3: Configure tiles definitions in WEB-INF/tiles.xml&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tiles-definitions&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;definition name=&amp;quot;baseLayout&amp;quot; template=&amp;quot;/jsp/layout/layout.jsp&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;put-attribute name=&amp;quot;title&amp;quot; value=&amp;quot;SivaLabs&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;put-attribute name=&amp;quot;header&amp;quot; value=&amp;quot;/jsp/layout/header.jsp&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;put-attribute name=&amp;quot;navigation&amp;quot; value=&amp;quot;/jsp/layout/navigation.jsp&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;put-attribute name=&amp;quot;body&amp;quot; value=&amp;quot;&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;put-attribute name=&amp;quot;footer&amp;quot; value=&amp;quot;/jsp/layout/footer.jsp&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/definition&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;definition extends=&amp;quot;baseLayout&amp;quot; name=&amp;quot;login&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;put-attribute name=&amp;quot;title&amp;quot; value=&amp;quot;SivaLabs : Login&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;put-attribute name=&amp;quot;navigation&amp;quot; value=&amp;quot;&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;put-attribute name=&amp;quot;body&amp;quot; value=&amp;quot;/jsp/login.jsp&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/definition&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;definition extends=&amp;quot;baseLayout&amp;quot; name=&amp;quot;welcome&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;put-attribute name=&amp;quot;title&amp;quot; value=&amp;quot;SivaLabs : Welcome&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;put-attribute name=&amp;quot;body&amp;quot; value=&amp;quot;/jsp/welcome.jsp&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/definition&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/tiles-definitions&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Step#4: Code the layout JSPs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;layout.jsp&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%@ taglib uri=&amp;quot;http://tiles.apache.org/tags-tiles&amp;quot; prefix=&amp;quot;tiles&amp;quot;%&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;title&amp;gt;&amp;lt;tiles:insertAttribute name=&amp;quot;title&amp;quot; ignore=&amp;quot;true&amp;quot; /&amp;gt;&amp;lt;/title&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;body&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;table cellpadding=&amp;quot;2&amp;quot; cellspacing=&amp;quot;2&amp;quot; align=&amp;quot;center&amp;quot; border=&amp;quot;1&amp;quot; style=&amp;quot;border-collapse: collapse; width: 800px;&amp;quot;&amp;gt;    &amp;lt;tbody&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;td colspan=&amp;quot;2&amp;quot; height=&amp;quot;30&amp;quot;&amp;gt;&amp;lt;tiles:insertAttribute name=&amp;quot;header&amp;quot; /&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;td width=&amp;quot;150&amp;quot; valign=&amp;quot;top&amp;quot; height=&amp;quot;450&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tiles:insertAttribute name=&amp;quot;navigation&amp;quot; /&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;td width=&amp;quot;650&amp;quot; valign=&amp;quot;top&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tiles:insertAttribute name=&amp;quot;body&amp;quot; /&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;td colspan=&amp;quot;2&amp;quot; height=&amp;quot;30&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tiles:insertAttribute name=&amp;quot;footer&amp;quot; /&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;header.jsp&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h2&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;SivaLabs : My Experiments On Technology&amp;lt;/h2&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;footer.jsp&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;center&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;b&amp;gt;© 2011 SivaLabs All Rights Reserved&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/center&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;navigation.jsp&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;http://www.blogger.com/createUser.do&amp;quot;&amp;gt;Create User&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;a href=&amp;quot;http://www.blogger.com/listUsers.do&amp;quot;&amp;gt;View Users&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;a href=&amp;quot;http://www.blogger.com/logout.do&amp;quot;&amp;gt;Logout&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;welcome.jsp&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;h2&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;Welcome to SpringMVC+Tiles Sample Application &amp;lt;/h2&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;**Step#5: **&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WelcomeController.java&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.web.controllers;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.stereotype.Controller;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.annotation.RequestMapping;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Controller&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class WelcomeController&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(&amp;quot;welcome&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public String welcome()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return &amp;quot;welcome&amp;quot;;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here the String &amp;ldquo;welcome&amp;rdquo; will be resolved as a tile name and display the UI as per &amp;ldquo;welcome&amp;rdquo; tile configuration.&lt;/p&gt;

&lt;p&gt;You can download the code from &lt;a href=&#34;https://github.com/sivaprasadreddy/sivalabs-blog-samples-code/tree/master/springmvc-tiles&#34;&gt;https://github.com/sivaprasadreddy/sivalabs-blog-samples-code/tree/master/springmvc-tiles&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SpringMVC &#43; Hibernate Error: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here</title>
      <link>http://sivalabs.github.io/post/2011/springmvc-hibernate-error-no-hibernate-session-bound-to-thread-and-configuration-does-not-allow-creation-of-non-transactional-one-here/</link>
      <pubDate>Tue, 17 May 2011 07:44:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/springmvc-hibernate-error-no-hibernate-session-bound-to-thread-and-configuration-does-not-allow-creation-of-non-transactional-one-here/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SpringMVC3 Hibernate CRUD Sample Application</title>
      <link>http://sivalabs.github.io/post/2011/springmvc3-hibernate-crud-sample-application/</link>
      <pubDate>Fri, 01 Apr 2011 18:46:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/springmvc3-hibernate-crud-sample-application/</guid>
      <description>&lt;p&gt;To learn any web framework starting with a HelloWorld application is a good idea. Once we get familiarity with the framework configuration it would be better to do a CRUD(Create,Read,Update,Delete) application which covers various aspects of a web framework like Validations, Request URL Mappings, Request Parameter Binding,&lt;br /&gt;
Pre-populating forms etc.&lt;/p&gt;

&lt;p&gt;Now I am going to explain how to write a Simple CRUD application using SpringMVC3, Hibernate and MySQL.&lt;br /&gt;
Our Application is ContactsManagements where you can view or search contacts, create new contacts, edit or delete existing contacts.&lt;/p&gt;

&lt;p&gt;Step#1: Create the CONTACTS Table&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CREATE TABLE  CONTACTS &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;(&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  id int(10) unsigned NOT NULL AUTO_INCREMENT,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  name varchar(45) NOT NULL,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  address varchar(45) DEFAULT NULL,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  gender char(1) DEFAULT &#39;M&#39;,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  dob datetime DEFAULT NULL,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  email varchar(45) DEFAULT NULL,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  mobile varchar(15) DEFAULT NULL,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  phone varchar(15) DEFAULT NULL,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  PRIMARY KEY (id)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#2: Copy the SpringMVC, Hibernate and their dependent jars into WEB-INF/lib folder.&lt;br /&gt;
If you are using Maven you can mention the following dependencies.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;dependencies&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;group&amp;gt;junit&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;artifact&amp;gt;junit&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;version&amp;gt;4.8.1&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.springframework&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;spring-web&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.0.5.RELEASE&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.springframework&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;spring-core&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.0.5.RELEASE&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;exclusions&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      &amp;lt;exclusion&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;artifact&amp;gt;commons-logging&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;group&amp;gt;commons-logging&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      &amp;lt;/exclusion&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;/exclusions&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;log4j&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;log4j&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;1.2.14&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.springframework&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;spring-tx&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.0.5.RELEASE&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;jstl&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;jstl&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;1.1.2&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;taglibs&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;standard&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;1.1.2&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.springframework&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;spring-webmvc&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.0.5.RELEASE&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.springframework&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;spring-aop&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.0.5.RELEASE&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;commons-digester&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;commons-digester&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;2.1&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;commons-collections&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;commons-collections&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.2.1&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.hibernate&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;hibernate-core&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.3.2.GA&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;javax.persistence&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;persistence-api&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;c3p0&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;c3p0&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;0.9.1.2&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.springframework&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;spring-orm&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.0.5.RELEASE&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.slf4j&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;slf4j-api&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;1.6.1&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.slf4j&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;slf4j-log4j12&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;1.6.1&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;cglib&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;cglib-nodep&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;2.2&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.hibernate&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;hibernate-annotations&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.4.0.GA&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;jboss&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;javassist&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.7.ga&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;mysql&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;mysql-connector-java&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;5.1.14&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/dependencies&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#3: Configure SpringMVC&lt;/p&gt;

&lt;p&gt;a) Configure DispatcherServlet in web.xml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;servlet&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;servlet-name&amp;gt;dispatcher&amp;lt;/servlet-name&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;servlet-&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-class&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/servlet&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;servlet-mapping&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;servlet-name&amp;gt;dispatcher&amp;lt;/servlet-name&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;url-pattern&amp;gt;*.do&amp;lt;/url-pattern&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/servlet-mapping&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;listener&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;listener-&amp;gt;org.springframework.web.context.ContextLoaderListener&amp;lt;/listener-class&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/listener&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;context-param&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;&amp;lt;param-value&amp;gt;classpath:applicationContext.xml&amp;lt;/param-value&amp;gt;&amp;lt;/context-param&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;b) Configure View Resolver in WEB-INF/dispatcher-servlet.xml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;bean p:suffix=&amp;quot;.jsp&amp;quot; p:prefix=&amp;quot;/jsp/&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;c) Configure Annotation support, PropertyPlaceHolderConfigurer, ResourceBundleMessageSource in WEB-INF/classes/applicationContext.xml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;context:annotation-config&amp;gt;&amp;lt;/context:annotation-config&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;context:component-scan base-package=&amp;quot;com.sivalabs&amp;quot;&amp;gt;&amp;lt;/context:component-scan&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;mvc:annotation-driven&amp;gt; &amp;lt;/mvc:annotation-driven&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;context:property-placeholder location=&amp;quot;classpath:config.properties&amp;quot;&amp;gt;&amp;lt;/context:property-placeholder&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;bean p:basename=&amp;quot;Messages&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#4: Configure JDBC connection parameters and Hibernate properties in config.properties&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;################### JDBC Configuration ##########################&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.driverClassName=com.mysql.jdbc.Driver&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.url=jdbc:mysql://localhost:3306/sivalabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.username=root&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.password=admin&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;################### Hibernate Configuration ##########################&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;hibernate.dialect=org.hibernate.dialect.MySQLDialect&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;hibernate.show_sql=true&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;#hibernate.hbm2ddl.auto=update&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;hibernate.generate_statistics=true&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#5: Configure DataSource, SessionFactory, TransactionManagement support in WEB-INF/classes/applicationContext.xml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;bean p:driverclassname=&amp;quot;${jdbc.driverClassName}&amp;quot; p:url=&amp;quot;${jdbc.url}&amp;quot; p:password=&amp;quot;${jdbc.password}&amp;quot; p:username=&amp;quot;${jdbc.username}&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/bean&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;property ref=&amp;quot;dataSource&amp;quot; name=&amp;quot;dataSource&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;property name=&amp;quot;hibernateProperties&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;props&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;             &amp;lt;prop key=&amp;quot;hibernate.dialect&amp;quot;&amp;gt;${hibernate.dialect}&amp;lt;/prop&amp;gt;          &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;             &amp;lt;prop key=&amp;quot;hibernate.show_sql&amp;quot;&amp;gt;${hibernate.show_sql}&amp;lt;/prop&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;/props&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;property name=&amp;quot;packagesToScan&amp;quot; value=&amp;quot;com.sivalabs&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;bean p:sessionfactory-ref=&amp;quot;sessionFactory&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;tx:annotation-driven transaction-manager=&amp;quot;transactionManager&amp;quot;&amp;gt;&amp;lt;/tx:annotation-driven&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#6: Configure the Labels, error messages in WEB-INF/classes/Messages.properties&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;App.Title=SivaLabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;typeMismatch.java.util.Date={0} is Invalid Date.&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;dob=DOB&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#7: Create the Entity class Contact.java&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.contacts;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Date;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.Column;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.Entity;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.GeneratedValue;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.GenerationType;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.Id;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.Table;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.apache.commons.lang.builder.ToStringBuilder;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Entity&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Table(name=&amp;quot;CONTACTS&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class Contact&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Id&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @GeneratedValue(strategy = GenerationType.AUTO)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private int id;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Column private String name;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Column private String address; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Column private String gender; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Column private Date dob; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Column private String email;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Column private String mobile; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Column private String phone;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Override&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public String toString()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return ToStringBuilder.reflectionToString(this);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; //setters &amp;amp; getters &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#8: Create the ContactsDAO.java which performs CRUD operations on CONTACTS table.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.contacts;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.List;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.hibernate.Criteria;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.hibernate.SessionFactory;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.hibernate.criterion.Restrictions;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.factory.annotation.Autowired;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.stereotype.Repository;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.transaction.annotation.Transactional;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Repository&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Transactional&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class ContactsDAO&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Autowired&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private SessionFactory sessionFactory;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public Contact getById(int id)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return (Contact) sessionFactory.getCurrentSession().get(Contact.class, id);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @SuppressWarnings(&amp;quot;unchecked&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public List&amp;lt;Contact&amp;gt; searchContacts(String name)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  Criteria criteria = sessionFactory.getCurrentSession().createCriteria(Contact.class);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  criteria.add(Restrictions.ilike(&amp;quot;name&amp;quot;, name+&amp;quot;%&amp;quot;));&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return criteria.list();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @SuppressWarnings(&amp;quot;unchecked&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public List&amp;lt;Contact&amp;gt; getAllContacts()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  Criteria criteria = sessionFactory.getCurrentSession().createCriteria(Contact.class);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return criteria.list();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public int save(Contact contact)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return (Integer) sessionFactory.getCurrentSession().save(contact);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public void update(Contact contact)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  sessionFactory.getCurrentSession().merge(contact);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public void delete(int id)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  Contact c = getById(id);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  sessionFactory.getCurrentSession().delete(c);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#9: Create ContactFormValidator.java which performs the validations on saving/updating a contact.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.contacts;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.stereotype.Component;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.validation.Errors;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.validation.ValidationUtils;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.validation.Validator;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Component(&amp;quot;contactFormValidator&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class ContactFormValidator implements Validator&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @SuppressWarnings(&amp;quot;unchecked&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Override&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public boolean supports(Class clazz)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return Contact.class.isAssignableFrom(clazz);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Override&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public void validate(Object model, Errors errors)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  ValidationUtils.rejectIfEmptyOrWhitespace(errors, &amp;quot;name&amp;quot;,&amp;quot;required.name&amp;quot;, &amp;quot;Name is required.&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#10: Create ContactsControllers.java which processes all the CRUD requests.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.contacts;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.text.SimpleDateFormat;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Date;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.List;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.factory.annotation.Autowired;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.propertyeditors.CustomDateEditor;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.stereotype.Controller;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.validation.BindingResult;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.WebDataBinder;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.annotation.InitBinder;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.annotation.ModelAttribute;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.annotation.RequestMapping;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.annotation.RequestMethod;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.annotation.RequestParam;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.support.SessionStatus;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.servlet.ModelAndView;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Controller&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class ContactsControllers&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Autowired&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private ContactsDAO contactsDAO;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Autowired&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private ContactFormValidator validator;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @InitBinder&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public void initBinder(WebDataBinder binder) &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  SimpleDateFormat dateFormat = new SimpleDateFormat(&amp;quot;dd-MM-yyyy&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  dateFormat.setLenient(false);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  binder.registerCustomEditor(Date.class, new CustomDateEditor(dateFormat, true));&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(&amp;quot;/searchContacts&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public ModelAndView searchContacts(@RequestParam(required= false, defaultValue=&amp;quot;&amp;quot;) String name)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  ModelAndView mav = new ModelAndView(&amp;quot;showContacts&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  List&amp;lt;Contact&amp;gt; contacts = contactsDAO.searchContacts(name.trim());&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  mav.addObject(&amp;quot;SEARCH_CONTACTS_RESULTS_KEY&amp;quot;, contacts);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return mav;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(&amp;quot;/viewAllContacts&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public ModelAndView getAllContacts()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  ModelAndView mav = new ModelAndView(&amp;quot;showContacts&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  List&amp;lt;Contact&amp;gt; contacts = contactsDAO.getAllContacts();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  mav.addObject(&amp;quot;SEARCH_CONTACTS_RESULTS_KEY&amp;quot;, contacts);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return mav;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(value=&amp;quot;/saveContact&amp;quot;, method=RequestMethod.GET)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public ModelAndView newuserForm()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  ModelAndView mav = new ModelAndView(&amp;quot;newContact&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  Contact contact = new Contact();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  mav.getModelMap().put(&amp;quot;newContact&amp;quot;, contact);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return mav;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(value=&amp;quot;/saveContact&amp;quot;, method=RequestMethod.POST)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public String create(@ModelAttribute(&amp;quot;newContact&amp;quot;)Contact contact, BindingResult result, SessionStatus status)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  validator.validate(contact, result);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  if (result.hasErrors()) &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  {    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   return &amp;quot;newContact&amp;quot;;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  contactsDAO.save(contact);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  status.setComplete();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return &amp;quot;redirect:viewAllContacts.do&amp;quot;;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(value=&amp;quot;/updateContact&amp;quot;, method=RequestMethod.GET)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public ModelAndView edit(@RequestParam(&amp;quot;id&amp;quot;)Integer id)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  ModelAndView mav = new ModelAndView(&amp;quot;editContact&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  Contact contact = contactsDAO.getById(id);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  mav.addObject(&amp;quot;editContact&amp;quot;, contact);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return mav;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(value=&amp;quot;/updateContact&amp;quot;, method=RequestMethod.POST)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public String update(@ModelAttribute(&amp;quot;editContact&amp;quot;) Contact contact, BindingResult result, SessionStatus status)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  validator.validate(contact, result);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  if (result.hasErrors()) {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   return &amp;quot;editContact&amp;quot;;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  contactsDAO.update(contact);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  status.setComplete();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return &amp;quot;redirect:viewAllContacts.do&amp;quot;;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(&amp;quot;deleteContact&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public ModelAndView delete(@RequestParam(&amp;quot;id&amp;quot;)Integer id)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  ModelAndView mav = new ModelAndView(&amp;quot;redirect:viewAllContacts.do&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  contactsDAO.delete(id);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return mav;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; } &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#11: Instead of writing the JSTL tag library declerations in all the JSPs, declare them in one JSP and include that JSP in other JSPs.&lt;br /&gt;
taglib_includes.jsp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%@taglib uri=&amp;quot;http://java.sun.com/jsp/jstl/core&amp;quot; prefix=&amp;quot;c&amp;quot;%&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;%@taglib uri=&amp;quot;http://java.sun.com/jsp/jstl/fmt&amp;quot; prefix=&amp;quot;fmt&amp;quot;%&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;%@taglib uri=&amp;quot;http://www.springframework.org/tags/form&amp;quot; prefix=&amp;quot;form&amp;quot;%&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;%@taglib uri=&amp;quot;http://www.springframework.org/tags&amp;quot; prefix=&amp;quot;spring&amp;quot;%&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#12: Create the JSPs.&lt;/p&gt;

&lt;p&gt;a)showContacts.jsp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%@include file=&amp;quot;taglib_includes.jsp&amp;quot; %&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;title&amp;gt;&amp;lt;spring:message code=&amp;quot;App.Title&amp;quot;&amp;gt;&amp;lt;/spring:message&amp;gt; &amp;lt;/title&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;body style=&amp;quot;font-family: Arial; font-size:smaller;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;center&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;table bordercolor=&amp;quot;#006699&amp;quot; style=&amp;quot;border-collapse: collapse; width: 500px;&amp;quot; border=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;     &amp;lt;td&amp;gt;Enter Contact Name&amp;lt;/td&amp;gt;      &amp;lt;td&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;table bordercolor=&amp;quot;#006699&amp;quot; style=&amp;quot;border-collapse: collapse; width: 500px;&amp;quot; border=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr bgcolor=&amp;quot;lightblue&amp;quot;&amp;gt;    &amp;lt;th&amp;gt;Id&amp;lt;/th&amp;gt;    &amp;lt;th&amp;gt;Name&amp;lt;/th&amp;gt;       &amp;lt;th&amp;gt;Address&amp;lt;/th&amp;gt;     &amp;lt;th&amp;gt;Mobile&amp;lt;/th&amp;gt;    &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;   &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;c:if test=&amp;quot;${empty SEARCH_CONTACTS_RESULTS_KEY}&amp;quot;&amp;gt; &amp;lt;/c:if&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;    &amp;lt;td colspan=&amp;quot;4&amp;quot;&amp;gt;No Results found&amp;lt;/td&amp;gt;   &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;c:if test=&amp;quot;${! empty SEARCH_CONTACTS_RESULTS_KEY}&amp;quot;&amp;gt;    &amp;lt;c:foreach var=&amp;quot;contact&amp;quot; items=&amp;quot;${SEARCH_CONTACTS_RESULTS_KEY}&amp;quot;&amp;gt; &amp;lt;/c:foreach&amp;gt;&amp;lt;/c:if&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;     &amp;lt;td&amp;gt;&amp;lt;c:out value=&amp;quot;${contact.id}&amp;quot;&amp;gt;&amp;lt;/c:out&amp;gt;&amp;lt;/td&amp;gt;     &amp;lt;td&amp;gt;&amp;lt;c:out value=&amp;quot;${contact.name}&amp;quot;&amp;gt;&amp;lt;/c:out&amp;gt;&amp;lt;/td&amp;gt;     &amp;lt;td&amp;gt;&amp;lt;c:out value=&amp;quot;${contact.address}&amp;quot;&amp;gt;&amp;lt;/c:out&amp;gt; &amp;lt;/td&amp;gt;     &amp;lt;td&amp;gt;&amp;lt;c:out value=&amp;quot;${contact.mobile}&amp;quot;&amp;gt;&amp;lt;/c:out&amp;gt;&amp;lt;/td&amp;gt;     &amp;lt;td&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;a href=&amp;quot;http://www.blogger.com/updateContact.do?id=$%7Bcontact.id%7D&amp;quot;&amp;gt;Edit&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;a href=&amp;quot;javascript:deleteContact(&#39;deleteContact.do?id=$%7Bcontact.id%7D&#39;);&amp;quot;&amp;gt;Delete&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;    &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/center&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;b)newContact.jsp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%@include file=&amp;quot;taglib_includes.jsp&amp;quot; %&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;title&amp;gt;&amp;lt;spring:message code=&amp;quot;App.Title&amp;quot;&amp;gt;&amp;lt;/spring:message&amp;gt; &amp;lt;/title&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;body style=&amp;quot;font-family: Arial; font-size:smaller;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;table bordercolor=&amp;quot;#006699&amp;quot; style=&amp;quot;border-collapse: collapse; width: 750px;&amp;quot; align=&amp;quot;center&amp;quot; height=&amp;quot;500&amp;quot; bgcolor=&amp;quot;lightblue&amp;quot; border=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;   &amp;lt;td align=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;h3&amp;gt;Edit Contact Form&amp;lt;/h3&amp;gt;&amp;lt;/td&amp;gt;  &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr align=&amp;quot;center&amp;quot; valign=&amp;quot;top&amp;quot;&amp;gt;     &amp;lt;td align=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:form action=&amp;quot;saveContact.do&amp;quot; commandname=&amp;quot;newContact&amp;quot; method=&amp;quot;post&amp;quot;&amp;gt;&amp;lt;/form:form&amp;gt;&amp;lt;table bordercolor=&amp;quot;#006699&amp;quot; cellpadding=&amp;quot;2&amp;quot; style=&amp;quot;border-collapse: collapse; width: 500px;&amp;quot; cellspacing=&amp;quot;2&amp;quot; border=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Name&amp;lt;/td&amp;gt;       &amp;lt;td width=&amp;quot;150&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:input path=&amp;quot;name&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;name&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;DOB&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;dob&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;dob&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Gender&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:select path=&amp;quot;gender&amp;quot;&amp;gt;&amp;lt;form:option value=&amp;quot;M&amp;quot; label=&amp;quot;Male&amp;quot;&amp;gt;&amp;lt;form:option value=&amp;quot;F&amp;quot; label=&amp;quot;Female&amp;quot;&amp;gt;&amp;lt;/form:option&amp;gt;&amp;lt;/form:option&amp;gt;&amp;lt;/form:select&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt; &amp;lt;/td&amp;gt;            &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Address&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;address&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;address&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Email&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;email&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;email&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Mobile&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;mobile&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;mobile&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td colspan=&amp;quot;3&amp;quot; align=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;a)editContact.jsp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%@include file=&amp;quot;taglib_includes.jsp&amp;quot; %&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;title&amp;gt;&amp;lt;spring:message code=&amp;quot;App.Title&amp;quot;&amp;gt;&amp;lt;/spring:message&amp;gt; &amp;lt;/title&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;body style=&amp;quot;font-family: Arial; font-size:smaller;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;table bordercolor=&amp;quot;#006699&amp;quot; style=&amp;quot;border-collapse: collapse; width: 750px;&amp;quot; align=&amp;quot;center&amp;quot; height=&amp;quot;500&amp;quot; bgcolor=&amp;quot;lightblue&amp;quot; border=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;   &amp;lt;td align=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;h3&amp;gt;Edit Contact Form&amp;lt;/h3&amp;gt;&amp;lt;/td&amp;gt;  &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr align=&amp;quot;center&amp;quot; valign=&amp;quot;top&amp;quot;&amp;gt;     &amp;lt;td align=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:form action=&amp;quot;updateContact.do&amp;quot; commandname=&amp;quot;editContact&amp;quot; method=&amp;quot;post&amp;quot;&amp;gt;&amp;lt;/form:form&amp;gt;&amp;lt;table bordercolor=&amp;quot;#006699&amp;quot; cellpadding=&amp;quot;2&amp;quot; style=&amp;quot;border-collapse: collapse; width: 500px;&amp;quot; cellspacing=&amp;quot;2&amp;quot; border=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Id&amp;lt;/td&amp;gt;       &amp;lt;td width=&amp;quot;150&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:input path=&amp;quot;id&amp;quot; readonly=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;id&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Name&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:input path=&amp;quot;name&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;name&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;DOB&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;dob&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;dob&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Gender&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:select path=&amp;quot;gender&amp;quot;&amp;gt;&amp;lt;form:option value=&amp;quot;M&amp;quot; label=&amp;quot;Male&amp;quot;&amp;gt;&amp;lt;form:option value=&amp;quot;F&amp;quot; label=&amp;quot;Female&amp;quot;&amp;gt;&amp;lt;/form:option&amp;gt;&amp;lt;/form:option&amp;gt;&amp;lt;/form:select&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt; &amp;lt;/td&amp;gt;            &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Address&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;address&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;address&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Email&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;email&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;email&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Mobile&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;mobile&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;mobile&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr valign=&amp;quot;bottom&amp;quot;&amp;gt;       &amp;lt;td colspan=&amp;quot;3&amp;quot; align=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#13: Write the javascript file js/contacts.js containing the utility methods&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function go(url)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; window.location = url;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;function deleteContact(url)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; var isOK = confirm(&amp;quot;Are you sure to delete?&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; if(isOK)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  go(url);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#14: The welcome file index.jsp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;response.sendRedirect(&amp;quot;viewAllContacts.do&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;%&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#15: Start the server and point your browser URL to &lt;a href=&#34;http://localhost:8080/SpringMVCHibernate&#34;&gt;http://localhost:8080/SpringMVCHibernate&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can download the source code at&lt;br /&gt;
&lt;a href=&#34;https://sites.google.com/site/sivalabworks/sampleappdownloads/SpringMVCHibernate.zip?attredirects=0&amp;amp;d=1&#34;&gt;SpringMVCHibernate.zip&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SpringMVC HelloWorld Tutorial</title>
      <link>http://sivalabs.github.io/post/2011/springmvc-helloworld-tutorial/</link>
      <pubDate>Tue, 29 Mar 2011 07:45:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/springmvc-helloworld-tutorial/</guid>
      <description>&lt;p&gt;Spring is a popular Application framework based on Inversion Of Control/DependencyInjection principle.&lt;br /&gt;
SpringMVC is a framework following MVC architecture for building web applications.&lt;/p&gt;

&lt;p&gt;Let us see how to create simple Hello World application using SpringMVC.&lt;/p&gt;

&lt;p&gt;Step1 :&lt;br /&gt;
Copy the SpringMVC dependent libraries into WEB-INF/lib folder.&lt;br /&gt;
You can download the latest Spring bundle at &lt;a href=&#34;http://www.springsource.org/download&#34;&gt;http://www.springsource.org/download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step2:&lt;br /&gt;
Configure the Spring&amp;rsquo;s FrontController class DispatcherServlet in web.xml.&lt;br /&gt;
You can configure the other spring beans (if any) in XMLs and wireup using ContextLoaderListener as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;web-app&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;servlet&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;servlet-name&amp;gt;dispatcher&amp;lt;/servlet-name&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;servlet-&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-class&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/servlet&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;servlet-mapping&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;servlet-name&amp;gt;dispatcher&amp;lt;/servlet-name&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;url-pattern&amp;gt;*.htm&amp;lt;/url-pattern&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/servlet-mapping&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;listener&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;listener-&amp;gt;org.springframework.web.context.ContextLoaderListener&amp;lt;/listener-class&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/listener&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;context-param&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;&amp;lt;param-value&amp;gt;classpath:applicationContext.xml&amp;lt;/param-value&amp;gt;&amp;lt;/context-param&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/web-app&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step3:&lt;br /&gt;
Create dispatcher-servlet.xml and put it in WEB-INF folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;beans&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;context:annotation-config&amp;gt;&amp;lt;/context:annotation-config&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;context:component-scan base-package=&amp;quot;com.sivalabs&amp;quot;&amp;gt;&amp;lt;/context:component-scan&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;bean&amp;gt;&amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;bean&amp;gt;&amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;bean&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;property name=&amp;quot;viewClass&amp;quot; value=&amp;quot;org.springframework.web.servlet.view.JstlView&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;property name=&amp;quot;prefix&amp;quot; value=&amp;quot;/WEB-INF/jsp/&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;property name=&amp;quot;suffix&amp;quot; value=&amp;quot;.jsp&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/beans&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step4:&lt;br /&gt;
Create index.jsp as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;title&amp;gt;SpringMVC - HelloWorld&amp;lt;/title&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;body&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  Enter your Name : &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/body&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step5:&lt;br /&gt;
Create a Controller which will handle the greetingController.htm request.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.springmvc.controllers;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.servlet.http.HttpServletRequest;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.servlet.http.HttpServletResponse;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.stereotype.Controller;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.annotation.RequestMapping;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.servlet.ModelAndView;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;/**&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; * @author SivaLabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; *&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; */&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Controller&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class GreetingController&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(&amp;quot;/greetingController&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public ModelAndView greet(HttpServletRequest request, HttpServletResponse response)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  ModelAndView mav = new ModelAndView(&amp;quot;welcome&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  String username = request.getParameter(&amp;quot;username&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  mav.getModel().put(&amp;quot;LOGGEDIN_USERNAME&amp;quot;, username);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return mav;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step6:&lt;br /&gt;
Create welcome.jsp to show the welcome message and put it in /WEB-INF/jsp folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;title&amp;gt;SpringMVC - HelloWorld&amp;lt;/title&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;body&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  Welcome ${LOGGEDIN_USERNAME}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/body&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/html&amp;gt; 



For source code download at 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://sites.google.com/site/sivalabworks/sampleappdownloads/SpringMVCHibernate.zip?attredirects=0&amp;amp;d=1&#34;&gt;SpringMVCHibernate.zip&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Spring&#43;Hibernate Application with zero XML</title>
      <link>http://sivalabs.github.io/post/2011/springhibernate-application-with-zero-xml/</link>
      <pubDate>Thu, 17 Feb 2011 17:00:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/springhibernate-application-with-zero-xml/</guid>
      <description>&lt;p&gt;Spring framework came up with Annotation support since 2.5 version which eases the development.&lt;br /&gt;
Whether Annotation based approach better or XML approach is better is depends on the project and their personal preference.&lt;/p&gt;

&lt;p&gt;Let us see how we can write a Simple Application using Spring and Hibernate using Annotations, no xml at all.&lt;/p&gt;

&lt;p&gt;The configuration for JDBC datasource and Hibernate properties:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;application.properties&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;################### JDBC Configuration ##########################&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.driverClassName=org.hsqldb.jdbcDriver&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.url=jdbc:hsqldb:file:db/SivaLabsDB;shutdown=true&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.username=sa&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.password=&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;################### Hibernate Configuration ##########################&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;hibernate.dialect=org.hibernate.dialect.HSQLDialect&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;hibernate.show_sql=true&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;hibernate.hbm2ddl.auto=update&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;hibernate.generate_statistics=true&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can instantiate ApplicationContext from a java file having @Configuration annotation.&lt;/p&gt;

&lt;p&gt;AppConfig.java&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.springmvc.config;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.annotation.Bean;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.annotation.Configuration;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.annotation.Import;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.core.io.ClassPathResource;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;/**&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; * @author SivaLabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; *&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; */&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Import({RepositoryConfig.class})&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Configuration&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class AppConfig&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    //&amp;lt;context:property-placeholder location=&amp;quot;classpath:application.properties&amp;quot;&amp;gt;&amp;lt;/context:property-placeholder&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Bean&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public PropertyPlaceholderConfigurer getPropertyPlaceholderConfigurer()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        PropertyPlaceholderConfigurer ppc = new PropertyPlaceholderConfigurer();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ppc.setLocation(new ClassPathResource(&amp;quot;application.properties&amp;quot;));&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ppc.setIgnoreUnresolvablePlaceholders(true);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return ppc;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here @Import({RepositoryConfig.class}) means xml version of &lt;strong&gt;&lt;import resource=&#34;applicationContext-dao.xml&#34;&gt;&lt;/import&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.springmvc.config;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.HashMap;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Map;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Properties;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.sql.DataSource;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.hibernate.SessionFactory;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.factory.annotation.Autowired;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.factory.annotation.Value;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.annotation.Bean;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.annotation.Configuration;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.jdbc.datasource.DriverManagerDataSource;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.orm.hibernate3.HibernateTemplate;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.orm.hibernate3.HibernateTransactionManager;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.transaction.annotation.AnnotationTransactionAttributeSource;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.transaction.interceptor.TransactionAttributeSource;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.transaction.interceptor.TransactionInterceptor;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;/**&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; * @author SivaLabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; *&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; */&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Configuration&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class RepositoryConfig&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    //${jdbc.driverClassName}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Value(&amp;quot;${jdbc.driverClassName}&amp;quot;)     private String driverClassName;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Value(&amp;quot;${jdbc.url}&amp;quot;)                 private String url;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Value(&amp;quot;${jdbc.username}&amp;quot;)             private String username;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Value(&amp;quot;${jdbc.password}&amp;quot;)             private String password;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Value(&amp;quot;${hibernate.dialect}&amp;quot;)         private String hibernateDialect;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Value(&amp;quot;${hibernate.show_sql}&amp;quot;)     private String hibernateShowSql;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Value(&amp;quot;${hibernate.hbm2ddl.auto}&amp;quot;) private String hibernateHbm2ddlAuto;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Bean()    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public DataSource getDataSource()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        DriverManagerDataSource ds = new DriverManagerDataSource();        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ds.setDriverClassName(driverClassName);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ds.setUrl(url);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ds.setUsername(username);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ds.setPassword(password);        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return ds;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Bean&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Autowired &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public HibernateTransactionManager transactionManager(SessionFactory sessionFactory)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        HibernateTransactionManager htm = new HibernateTransactionManager();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        htm.setSessionFactory(sessionFactory);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return htm;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Bean&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Autowired&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public HibernateTemplate getHibernateTemplate(SessionFactory sessionFactory)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        HibernateTemplate hibernateTemplate = new HibernateTemplate(sessionFactory);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return hibernateTemplate;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Bean&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public AnnotationSessionFactoryBean getSessionFactory()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        AnnotationSessionFactoryBean asfb = new AnnotationSessionFactoryBean();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        asfb.setDataSource(getDataSource());&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        asfb.setHibernateProperties(getHibernateProperties());        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        asfb.setPackagesToScan(new String[]{&amp;quot;com.sivalabs&amp;quot;});&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return asfb;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Bean&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public Properties getHibernateProperties()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        Properties properties = new Properties();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        properties.put(&amp;quot;hibernate.dialect&amp;quot;, hibernateDialect);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        properties.put(&amp;quot;hibernate.show_sql&amp;quot;, hibernateShowSql);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        properties.put(&amp;quot;hibernate.hbm2ddl.auto&amp;quot;, hibernateHbm2ddlAuto);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return properties;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create an Entity User as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.springmvc.entities;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.Entity;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.GeneratedValue;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.GenerationType;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.Id;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;/**&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; * @author SivaLabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; *&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; */&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Entity&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class User&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Id&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @GeneratedValue(strategy = GenerationType.AUTO)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private Integer id;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private String name;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private String address;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public User()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public User(Integer id, String name, String address)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.id = id;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.name = name;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.address = address;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Override&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public String toString()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return &amp;quot;User [address=&amp;quot; + address + &amp;quot;, id=&amp;quot; + id + &amp;quot;, name=&amp;quot; + name+ &amp;quot;]&amp;quot;;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public Integer getId()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return id;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void setId(Integer id)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.id = id;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public String getName()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return name;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void setName(String name)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.name = name;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public String getAddress()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return address;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void setAddress(String address)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.address = address;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create UserRepository to perform DB operations using Hibernate.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.springmvc.repositories;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.List;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.factory.annotation.Autowired;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.orm.hibernate3.HibernateTemplate;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.stereotype.Repository;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.transaction.annotation.Transactional;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import com.sivalabs.springmvc.entities.User;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;/**&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; * @author SivaLabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; *&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;*/&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Transactional&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Repository&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class UserRepository&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Autowired&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private HibernateTemplate hibernateTemplate;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public List&amp;lt;User&amp;gt; getAllUsers()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return this.hibernateTemplate.loadAll(User.class);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public Integer createUser(User user)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        User mergeUser = this.hibernateTemplate.merge(user);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return mergeUser.getId();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a UserService class which is responsible for performing User operations.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.springmvc.services;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.List;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.factory.annotation.Autowired;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.stereotype.Service;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import com.sivalabs.springmvc.entities.User;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import com.sivalabs.springmvc.repositories.UserRepository;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;/**&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; * @author SivaLabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; *&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; */&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Service&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class UserService&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Autowired&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private UserRepository userRepository;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public List&amp;lt;User&amp;gt; getAllUsers()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return this.userRepository.getAllUsers();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public Integer createUser(User user)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return this.userRepository.createUser(user);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let us create ApplicationContext from AppConfig.java and test the functionality.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.test;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.List;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.ApplicationContext;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.annotation.AnnotationConfigApplicationContext;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.support.ClassPathXmlApplicationContext;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import com.sivalabs.springmvc.entities.User;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import com.sivalabs.springmvc.services.UserService;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class ContainerTest&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public static void main(String[] args)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ctx.scan(&amp;quot;com.sivalabs&amp;quot;);//This will load the configured components UserService, UserRepository, &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ctx.refresh();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        System.out.println(ctx);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        UserService userService = ctx.getBean(&amp;quot;userService&amp;quot;, UserService.class);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        List&amp;lt;User&amp;gt; allUser = userService.getAllUsers();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        for (User u : allUser)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            System.out.println(u);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        User user = new User(null, &amp;quot;K.siva reddy&amp;quot;, &amp;quot;hyderabad&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        Integer id = userService.createUser(user);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        System.out.println(&amp;quot;Newly created User Id=&amp;quot;+id);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        allUser = userService.getAllUsers();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        for (User u : allUser)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            System.out.println(u);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;See how application development is much more easier now with Annotations.&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>