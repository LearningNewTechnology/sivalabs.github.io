<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hibernate on SivaLabs</title>
    <link>http://sivalabs.github.io/tags/hibernate/</link>
    <description>Recent content in Hibernate on SivaLabs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Mar 2014 06:31:00 +0000</lastBuildDate>
    <atom:link href="http://sivalabs.github.io/tags/hibernate/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>SpringMVC4 &#43; Spring Data JPA &#43; SpringSecurity configuration using JavaConfig</title>
      <link>http://sivalabs.github.io/post/2014/springmvc4-spring-data-jpa-springsecurity-configuration-using-javaconfig/</link>
      <pubDate>Sun, 02 Mar 2014 06:31:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2014/springmvc4-spring-data-jpa-springsecurity-configuration-using-javaconfig/</guid>
      <description>&lt;p&gt;In this article we will see how to configure and integrate SpringMVC4, Spring Data JPA with Hibernate and SpringSecurity using JavaConfig.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First let&amp;rsquo;s configure all the necessary dependencies in &lt;strong&gt;pom.xml&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302291&#34;&gt;https://gist.github.com/sivaprasadreddy/9302291&lt;/a&gt; /]&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure database connection properties and email settings in &lt;strong&gt;application.properties&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302302&#34;&gt;https://gist.github.com/sivaprasadreddy/9302302&lt;/a&gt; /]&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure common Service Layer beans such as &lt;strong&gt;PropertySourcesPlaceholderConfigurer&lt;/strong&gt; and **JavaMailSender **etc in &lt;strong&gt;com.sivalabs.springapp.config.AppConfig.java&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302313&#34;&gt;https://gist.github.com/sivaprasadreddy/9302313&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Observe that we have excluded the package &amp;ldquo;&lt;strong&gt;com.sivalabs.springapp.web.&lt;/strong&gt;*&amp;rdquo; from component scanning using new **REGEX excludeFilter **type.
If we don&amp;rsquo;t exclude web related packages and tries to run JUnit test for service layer beans we will encounter the following Exception:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;java.lang.IllegalArgumentException: A ServletContext is required to configure default servlet handling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Also note that we have enabled Caching using &lt;strong&gt;@EnableCaching&lt;/strong&gt;, so we should declare **CacheManager **bean.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure Persistence Layer beans in &lt;strong&gt;com.sivalabs.springapp.config.PersistenceConfig.java&lt;/strong&gt; as follows:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302322&#34;&gt;https://gist.github.com/sivaprasadreddy/9302322&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Here we have configured DataSource and JPA EntityManagerFactory bean using Hibernate implementation.
Also we have configured DataSourceInitializer bean to initialize and populate our tables with seed data. We can enable/disable executing this &lt;strong&gt;db.sql&lt;/strong&gt; script by changing init-db property value in application.properties.
And finally we have enabled Spring Data JPA repositories scanning using &lt;strong&gt;@EnableJpaRepositories&lt;/strong&gt; to scan &amp;ldquo;&lt;strong&gt;com.sivalabs.springapp.repositories&lt;/strong&gt;&amp;rdquo; package for JPA repository interfaces.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Now let us configure Web related beans in &lt;strong&gt;com.sivalabs.springapp.web.config.WebMvcConfig.java&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302326&#34;&gt;https://gist.github.com/sivaprasadreddy/9302326&lt;/a&gt; /]&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure DispatcherService using &lt;strong&gt;AbstractAnnotationConfigDispatcherServletInitializer&lt;/strong&gt; convinient class.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302337&#34;&gt;https://gist.github.com/sivaprasadreddy/9302337&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Here few things to note are we configured &lt;strong&gt;AppConfig.class&lt;/strong&gt; as RootConfig classes and &lt;strong&gt;WebMvcConfig.class&lt;/strong&gt; as ServletConfigClasses which is similar to how we configure in &lt;strong&gt;web.xml&lt;/strong&gt; using ContextLoaderListener and DispatcherServlet&amp;rsquo;s contextConfigLocation .
Also we have registered &lt;strong&gt;OpenEntityManagerInViewFilter&lt;/strong&gt; to enable lazy loading of JPA entity graphs in view rendering phase.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Let us configure SpringSecurity.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;First let us create a &lt;strong&gt;SecurityUser&lt;/strong&gt; class which extends our application specific &lt;strong&gt;User&lt;/strong&gt; class and implements &lt;strong&gt;org.springframework.security.core.userdetails.UserDetails&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302340&#34;&gt;https://gist.github.com/sivaprasadreddy/9302340&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;We will implement a custom &lt;strong&gt;UserDetailsService&lt;/strong&gt; and use Spring Data JPA repositories to load User details.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302345&#34;&gt;https://gist.github.com/sivaprasadreddy/9302345&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Now create &lt;strong&gt;com.sivalabs.springapp.config.SecurityConfig.java&lt;/strong&gt; which contains SpeingSecurity related bean definitions.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302351&#34;&gt;https://gist.github.com/sivaprasadreddy/9302351&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Update &lt;strong&gt;SpringWebAppInitializer&lt;/strong&gt; which we created eariler to add &lt;strong&gt;SecurityConfig&lt;/strong&gt; configuration class.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302357&#34;&gt;https://gist.github.com/sivaprasadreddy/9302357&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;As per our SpringSecurity custom Form Login configuration, we will use the following login form in &lt;strong&gt;login.jsp&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302375&#34;&gt;https://gist.github.com/sivaprasadreddy/9302375&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Once we successfully login we can obtain the authenticated use details using **** and secure parts of the view using **** as follows:&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302382&#34;&gt;https://gist.github.com/sivaprasadreddy/9302382&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;You can find the source code at github &lt;a href=&#34;https://github.com/sivaprasadreddy/sivalabs-blog-samples-code/tree/master/springmvc-datajpa-security-demo&#34;&gt;https://github.com/sivaprasadreddy/sivalabs-blog-samples-code/tree/master/springmvc-datajpa-security-demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There are few issues while running the same application on JBoss AS 7.1. I have made few changes to run on JBossAS7.1 and published code at &lt;a href=&#34;https://github.com/sivaprasadreddy/sivalabs-blog-samples-code/tree/master/springmvc-datajpa-security-demo-jboss7&#34;&gt;https://github.com/sivaprasadreddy/sivalabs-blog-samples-code/tree/master/springmvc-datajpa-security-demo-jboss7&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Spring3&#43;JPA2&#43;JavaEE6AppServer = Confusion Over Configuration</title>
      <link>http://sivalabs.github.io/post/2012/spring3jpa2javaee6appserver-confusion-over-configuration/</link>
      <pubDate>Fri, 12 Oct 2012 11:08:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2012/spring3jpa2javaee6appserver-confusion-over-configuration/</guid>
      <description>&lt;p&gt;Spring is great, JavaEE6 is great and latest JavaEE6 Application servers are also great. This post is not a rant on Spring Vs JavaEE6, but my experience of porting a Spring3+JPA2(Hibernate) application on JBoss AS-7.1 App Server.&lt;/p&gt;

&lt;p&gt;My application requirement is very simple: Developing a couple of SOAP based webservices using Spring3.1 and JPA2(Hibernate) and host it on JBoss AS 7.1.&lt;/p&gt;

&lt;p&gt;So I started creating a multi-module maven project with one jar module containing the service implementations using Spring &amp;amp; JPA and another war module which exposes those services as SOAP based webservices. But the key part is services needs to talk to multiple databases for some of the service methods.&lt;/p&gt;

&lt;p&gt;I am aware of JPA2 integration support from Spring without persistence.xml and cool packagesToScan attribute which makes life a bit easier. I configured 2 dataSources, 2 LocalContainerEntityManagerFactoryBeans, registered 2 JpaTransactionManagers and enabled Annotation based Transaction Management Support.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;tx:annotation-driven transaction-manager=&amp;quot;txnManager1&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;tx:annotation-driven transaction-manager=&amp;quot;txnManager2&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;bean class=&amp;quot;org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;bean class=&amp;quot;org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor&amp;quot;/&amp;gt;&amp;lt;!-- This will throw error because it found multiple EntityManagerFactory beans --&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;bean id=&amp;quot;txnManager1&amp;quot; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            class=&amp;quot;org.springframework.orm.jpa.JpaTransactionManager&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;              p:entityManagerFactory-ref=&amp;quot;emf1&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;bean id=&amp;quot;txnManager2&amp;quot; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           class=&amp;quot;org.springframework.orm.jpa.JpaTransactionManager&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;              p:entityManagerFactory-ref=&amp;quot;emf2&amp;quot;/&amp;gt;             &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;bean id=&amp;quot;emf1&amp;quot; class=&amp;quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;property name=&amp;quot;persistenceUnitName&amp;quot; value=&amp;quot;Sivalabs1PU&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;property name=&amp;quot;dataSource&amp;quot; ref=&amp;quot;dataSource1&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;          &amp;lt;property name=&amp;quot;jpaVendorAdapter&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;             &amp;lt;bean id=&amp;quot;jpaAdapter&amp;quot; class=&amp;quot;org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                     p:showSql=&amp;quot;${hibernate.show_sql}&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;jpaProperties&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            &amp;lt;props&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                &amp;lt;prop key=&amp;quot;hibernate.dialect&amp;quot;&amp;gt;${hibernate.dialect}&amp;lt;/prop&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                  &amp;lt;prop key=&amp;quot;hibernate.hbm2ddl.auto&amp;quot;&amp;gt;${hibernate.hbm2ddl.auto}&amp;lt;/prop&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            &amp;lt;/props&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;packagesToScan&amp;quot; value=&amp;quot;com.sivalabs.springdemo.entities&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;property name=&amp;quot;loadTimeWeaver&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;          &amp;lt;bean class=&amp;quot;org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/bean&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;bean id=&amp;quot;emf2&amp;quot; class=&amp;quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;persistenceUnitName&amp;quot; value=&amp;quot;Sivalabs2PU&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;property name=&amp;quot;dataSource&amp;quot; ref=&amp;quot;dataSource2&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;          &amp;lt;property name=&amp;quot;jpaVendorAdapter&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;             &amp;lt;bean id=&amp;quot;jpaAdapter&amp;quot; class=&amp;quot;org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                     p:showSql=&amp;quot;${hibernate.show_sql}&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;jpaProperties&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            &amp;lt;props&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                &amp;lt;prop key=&amp;quot;hibernate.dialect&amp;quot;&amp;gt;${hibernate.dialect}&amp;lt;/prop&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                  &amp;lt;prop key=&amp;quot;hibernate.hbm2ddl.auto&amp;quot;&amp;gt;${hibernate.hbm2ddl.auto}&amp;lt;/prop&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            &amp;lt;/props&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;packagesToScan&amp;quot; value=&amp;quot;com.sivalabs.springdemo.entities&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;property name=&amp;quot;loadTimeWeaver&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;          &amp;lt;bean class=&amp;quot;org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/bean&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;bean id=&amp;quot;dataSource1&amp;quot; class=&amp;quot;org.apache.commons.dbcp.BasicDataSource&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;driverClassName&amp;quot; value=&amp;quot;${node1.jdbc.driverClassName}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;property name=&amp;quot;url&amp;quot; value=&amp;quot;${node1.jdbc.url}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;property name=&amp;quot;username&amp;quot; value=&amp;quot;${node1.jdbc.username}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;property name=&amp;quot;password&amp;quot; value=&amp;quot;${node1.jdbc.password}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;bean id=&amp;quot;dataSource2&amp;quot; class=&amp;quot;org.apache.commons.dbcp.BasicDataSource&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;driverClassName&amp;quot; value=&amp;quot;${node2.jdbc.driverClassName}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;property name=&amp;quot;url&amp;quot; value=&amp;quot;${node2.jdbc.url}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;property name=&amp;quot;username&amp;quot; value=&amp;quot;${node2.jdbc.username}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;property name=&amp;quot;password&amp;quot; value=&amp;quot;${node2.jdbc.password}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After this I realized to bind Entitymanager with the correct PersistenceUnit I need to give persistenceUnitName to LocalContainerEntityManagerFactoryBean.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;bean class=&amp;quot;org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      &amp;lt;property name=&amp;quot;persistenceUnits&amp;quot; &amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         &amp;lt;map&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;entry key=&amp;quot;unit1&amp;quot; value=&amp;quot;Sivalabs1PU&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;entry key=&amp;quot;unit2&amp;quot; value=&amp;quot;Sivalabs2PU&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         &amp;lt;/map&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;bean id=&amp;quot;emf1&amp;quot; class=&amp;quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;persistenceUnitName&amp;quot; value=&amp;quot;Sivalabs1PU&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;property name=&amp;quot;dataSource&amp;quot; ref=&amp;quot;dataSource1&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;          ....&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       ....        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/bean&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;bean id=&amp;quot;emf2&amp;quot; class=&amp;quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;persistenceUnitName&amp;quot; value=&amp;quot;Sivalabs2PU&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;property name=&amp;quot;dataSource&amp;quot; ref=&amp;quot;dataSource2&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ....&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     ....        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then in my Service Bean EntityManagers and transaction managers are glued together as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Service&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class AdminUserService implements UserService&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @PersistenceContext(unitName=&amp;quot;Sivalabs1PU&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private EntityManager sivalabs1EM;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @PersistenceContext(unitName=&amp;quot;Sivalabs2PU&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private EntityManager sivalabs2EM;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   @Override&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  @Transactional(&amp;quot;txnManager1&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  public List&amp;lt;User&amp;gt; getAllUsersFromSivalabs1DB() {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       return sivalabs1EM.createQuery(&amp;quot;from User&amp;quot;, User.class).getResultList();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Override&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  @Transactional(&amp;quot;txnManager2&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  public List&amp;lt;User&amp;gt; getAllUsersFromSivalabs2DB() {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       return sivalabs2EM.createQuery(&amp;quot;from User&amp;quot;, User.class).getResultList();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this setup now I got the Exception saying &amp;ldquo;No persistence unit with name &amp;lsquo;Sivalabs1PU&amp;rsquo; found&amp;rdquo;.  Then after some googling I created  META-INF/persistence.xml file as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;persistence&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;persistence-unit name=&amp;quot;Sivalabs1PU&amp;quot; transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;           &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/persistence-unit&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;persistence-unit name=&amp;quot;Sivalabs2PU&amp;quot;  transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;         &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/persistence-unit&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/persistence&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now the persistence unit name error got resolved and got other Exception saying &amp;ldquo;User is not mapped [from User]&amp;ldquo;. The User class is annotated with @Entity and is in &amp;ldquo;&lt;strong&gt;com.sivalabs.springdemo.entities&lt;/strong&gt;&amp;rdquo; package which I configured to &amp;ldquo;&lt;strong&gt;packagesToScan&lt;/strong&gt;&amp;rdquo; attribute. I didn&amp;rsquo;t understand why &amp;ldquo;packagesToScan&amp;rdquo; attribute is not working which is working fine without persistence.xml. So for time being I configured entity classes in persistence.xml file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;persistence&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;persistence-unit name=&amp;quot;Sivalabs1PU&amp;quot; transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;       &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;class&amp;gt;com.sivalabs.springdemo.entities.User&amp;lt;/class&amp;gt;   &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/persistence-unit&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;persistence-unit name=&amp;quot;Sivalabs2PU&amp;quot;  transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;      &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;class&amp;gt;com.sivalabs.springdemo.entities.User&amp;lt;/class&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/persistence-unit&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/persistence&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally when I ran my JUnit Test which invokes AdminUserService methods everything looks good and working fine. Then I deployed the war file on JBoss AS 7.1 Server then again got a bunch of errors.  JBoss is complaining that &amp;ldquo;Connection cannot be null when &amp;lsquo;hibernate.dialect&amp;rsquo; not set&amp;rdquo; &amp;hellip;. &amp;ldquo;[PersistenceUnit: Sivalabs1PU] Unable to build EntityManagerFactory&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;After thinking for a couple of minutes, I understood that JBoss server is trying to do what it is supposed to do with &amp;ldquo;Convention Over Configuration&amp;rdquo; rules. JBoss is trying to create EntityManagerFactory because it found META-INF/persistence.xml in classpath. But as it doesn&amp;rsquo;t contain jdbc connection details its throwing Error.&lt;/p&gt;

&lt;p&gt;Again after some googling I found we can rename persistence.xml to something else(spring-persistence.xml) and hook up this new name with Spring as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;bean id=&amp;quot;emf1&amp;quot; class=&amp;quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;persistenceUnitName&amp;quot; value=&amp;quot;Sivalabs1PU&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;property name=&amp;quot;persistenceXmlLocation&amp;quot; value=&amp;quot;classpath:META-INF/spring-persistence.xml&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;dataSource&amp;quot; ref=&amp;quot;dataSource1&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;          ....&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       ....        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/bean&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;bean id=&amp;quot;emf2&amp;quot; class=&amp;quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;persistenceUnitName&amp;quot; value=&amp;quot;Sivalabs2PU&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;property name=&amp;quot;persistenceXmlLocation&amp;quot; value=&amp;quot;classpath:META-INF/spring-persistence.xml&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;dataSource&amp;quot; ref=&amp;quot;dataSource2&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ....&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     ....        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally I got this application working on my JBoss AS 7.1 successfully(Still I don&amp;rsquo;t know how many other holes are there that I haven&amp;rsquo;t yet found).&lt;/p&gt;

&lt;p&gt;But here I didn&amp;rsquo;t understand few Spring concepts:&lt;br /&gt;
&lt;em&gt;1. When I try to give persistenceUnitName why Spring is checking for that name to be existed in persistence.xml? Anyway that persistence.xml doesn&amp;rsquo;t contain anything exception the unit-name!!&lt;/em&gt;&lt;br /&gt;
_&lt;br /&gt;
_&lt;em&gt;2. Why packagesToScan mechanism is failing when used with persistence.xml? Is it a Spring Bug?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Everything seems to be working fine except one thing is missing, a smile on my face which usually I have when working with Spring and Tomcat :-(&lt;/p&gt;

&lt;p&gt;I like Spring framework very much and I am using it since 2006 and I do enjoy while writing Spring code. That doesn&amp;rsquo;t mean I don&amp;rsquo;t like CDI, EJB3, JAX-RS :-)&lt;/p&gt;

&lt;p&gt;Anyway, with all the above exercise I feel like &lt;strong&gt;Spring3+JPA2+JavaEE6AppServer=Confusion Over Configuration&lt;/strong&gt; and it is my(an average java developer) opinion only.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Again say one more time : Spring is great, JavaEE6 is great and latest JavaEE6 Application servers are also great :-).&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>@GeneratedValue not setting up auto increment in mysql and h2 dialects</title>
      <link>http://sivalabs.github.io/post/2012/generatedvalue-not-setting-up-auto-increment-in-mysql-and-h2-dialects/</link>
      <pubDate>Thu, 26 Apr 2012 07:57:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2012/generatedvalue-not-setting-up-auto-increment-in-mysql-and-h2-dialects/</guid>
      <description>&lt;p&gt;Hi,&lt;br /&gt;
In earlier versions of Hibernate if we want to have an auto_increment primary key we can use the following:&lt;/p&gt;

&lt;p&gt;@Id @GeneratedValue(strategy=GenerationType.AUTO)&lt;br /&gt;
@Column(name=&amp;ldquo;user_id&amp;rdquo;)&lt;br /&gt;
private Integer userId;&lt;/p&gt;

&lt;p&gt;But in latest version of Hibernate(may be Hibernate4, whatever is used in JBoss AS7) this doesn&amp;rsquo;t work as expected. The generated table primary key is not auto_increment column.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To resolve this configure &lt;property name=&#34;hibernate.id.new_generator_mappings&#34; value=&#34;false&#34;&gt; in persistence.xml.&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SpringMVC &#43; Hibernate Error: No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here</title>
      <link>http://sivalabs.github.io/post/2011/springmvc-hibernate-error-no-hibernate-session-bound-to-thread-and-configuration-does-not-allow-creation-of-non-transactional-one-here/</link>
      <pubDate>Tue, 17 May 2011 07:44:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/springmvc-hibernate-error-no-hibernate-session-bound-to-thread-and-configuration-does-not-allow-creation-of-non-transactional-one-here/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SpringMVC3 Hibernate CRUD Sample Application</title>
      <link>http://sivalabs.github.io/post/2011/springmvc3-hibernate-crud-sample-application/</link>
      <pubDate>Fri, 01 Apr 2011 18:46:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/springmvc3-hibernate-crud-sample-application/</guid>
      <description>&lt;p&gt;To learn any web framework starting with a HelloWorld application is a good idea. Once we get familiarity with the framework configuration it would be better to do a CRUD(Create,Read,Update,Delete) application which covers various aspects of a web framework like Validations, Request URL Mappings, Request Parameter Binding,&lt;br /&gt;
Pre-populating forms etc.&lt;/p&gt;

&lt;p&gt;Now I am going to explain how to write a Simple CRUD application using SpringMVC3, Hibernate and MySQL.&lt;br /&gt;
Our Application is ContactsManagements where you can view or search contacts, create new contacts, edit or delete existing contacts.&lt;/p&gt;

&lt;p&gt;Step#1: Create the CONTACTS Table&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CREATE TABLE  CONTACTS &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;(&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  id int(10) unsigned NOT NULL AUTO_INCREMENT,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  name varchar(45) NOT NULL,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  address varchar(45) DEFAULT NULL,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  gender char(1) DEFAULT &#39;M&#39;,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  dob datetime DEFAULT NULL,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  email varchar(45) DEFAULT NULL,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  mobile varchar(15) DEFAULT NULL,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  phone varchar(15) DEFAULT NULL,&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  PRIMARY KEY (id)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#2: Copy the SpringMVC, Hibernate and their dependent jars into WEB-INF/lib folder.&lt;br /&gt;
If you are using Maven you can mention the following dependencies.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;dependencies&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;group&amp;gt;junit&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;artifact&amp;gt;junit&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;version&amp;gt;4.8.1&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.springframework&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;spring-web&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.0.5.RELEASE&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.springframework&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;spring-core&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.0.5.RELEASE&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;exclusions&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      &amp;lt;exclusion&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;artifact&amp;gt;commons-logging&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;group&amp;gt;commons-logging&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      &amp;lt;/exclusion&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;/exclusions&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;log4j&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;log4j&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;1.2.14&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.springframework&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;spring-tx&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.0.5.RELEASE&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;jstl&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;jstl&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;1.1.2&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;taglibs&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;standard&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;1.1.2&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.springframework&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;spring-webmvc&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.0.5.RELEASE&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.springframework&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;spring-aop&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.0.5.RELEASE&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;commons-digester&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;commons-digester&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;2.1&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;commons-collections&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;commons-collections&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.2.1&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.hibernate&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;hibernate-core&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.3.2.GA&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;javax.persistence&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;persistence-api&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;1.0&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;c3p0&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;c3p0&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;0.9.1.2&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.springframework&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;spring-orm&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.0.5.RELEASE&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.slf4j&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;slf4j-api&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;1.6.1&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.slf4j&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;slf4j-log4j12&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;1.6.1&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;cglib&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;cglib-nodep&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;2.2&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;org.hibernate&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;hibernate-annotations&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.4.0.GA&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;jboss&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;javassist&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;3.7.ga&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;group&amp;gt;mysql&amp;lt;/groupid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;artifact&amp;gt;mysql-connector-java&amp;lt;/artifactid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;version&amp;gt;5.1.14&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;type&amp;gt;jar&amp;lt;/type&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/dependencies&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#3: Configure SpringMVC&lt;/p&gt;

&lt;p&gt;a) Configure DispatcherServlet in web.xml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;servlet&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;servlet-name&amp;gt;dispatcher&amp;lt;/servlet-name&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;servlet-&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-class&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/servlet&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;servlet-mapping&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;servlet-name&amp;gt;dispatcher&amp;lt;/servlet-name&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;url-pattern&amp;gt;*.do&amp;lt;/url-pattern&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/servlet-mapping&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;listener&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;listener-&amp;gt;org.springframework.web.context.ContextLoaderListener&amp;lt;/listener-class&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/listener&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;context-param&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;&amp;lt;param-value&amp;gt;classpath:applicationContext.xml&amp;lt;/param-value&amp;gt;&amp;lt;/context-param&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;b) Configure View Resolver in WEB-INF/dispatcher-servlet.xml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;bean p:suffix=&amp;quot;.jsp&amp;quot; p:prefix=&amp;quot;/jsp/&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;c) Configure Annotation support, PropertyPlaceHolderConfigurer, ResourceBundleMessageSource in WEB-INF/classes/applicationContext.xml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;context:annotation-config&amp;gt;&amp;lt;/context:annotation-config&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;context:component-scan base-package=&amp;quot;com.sivalabs&amp;quot;&amp;gt;&amp;lt;/context:component-scan&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;mvc:annotation-driven&amp;gt; &amp;lt;/mvc:annotation-driven&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;context:property-placeholder location=&amp;quot;classpath:config.properties&amp;quot;&amp;gt;&amp;lt;/context:property-placeholder&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;bean p:basename=&amp;quot;Messages&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#4: Configure JDBC connection parameters and Hibernate properties in config.properties&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;################### JDBC Configuration ##########################&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.driverClassName=com.mysql.jdbc.Driver&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.url=jdbc:mysql://localhost:3306/sivalabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.username=root&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.password=admin&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;################### Hibernate Configuration ##########################&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;hibernate.dialect=org.hibernate.dialect.MySQLDialect&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;hibernate.show_sql=true&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;#hibernate.hbm2ddl.auto=update&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;hibernate.generate_statistics=true&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#5: Configure DataSource, SessionFactory, TransactionManagement support in WEB-INF/classes/applicationContext.xml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;bean p:driverclassname=&amp;quot;${jdbc.driverClassName}&amp;quot; p:url=&amp;quot;${jdbc.url}&amp;quot; p:password=&amp;quot;${jdbc.password}&amp;quot; p:username=&amp;quot;${jdbc.username}&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/bean&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;property ref=&amp;quot;dataSource&amp;quot; name=&amp;quot;dataSource&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;property name=&amp;quot;hibernateProperties&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;props&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;             &amp;lt;prop key=&amp;quot;hibernate.dialect&amp;quot;&amp;gt;${hibernate.dialect}&amp;lt;/prop&amp;gt;          &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;             &amp;lt;prop key=&amp;quot;hibernate.show_sql&amp;quot;&amp;gt;${hibernate.show_sql}&amp;lt;/prop&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;/props&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;property name=&amp;quot;packagesToScan&amp;quot; value=&amp;quot;com.sivalabs&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;bean p:sessionfactory-ref=&amp;quot;sessionFactory&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;tx:annotation-driven transaction-manager=&amp;quot;transactionManager&amp;quot;&amp;gt;&amp;lt;/tx:annotation-driven&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#6: Configure the Labels, error messages in WEB-INF/classes/Messages.properties&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;App.Title=SivaLabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;typeMismatch.java.util.Date={0} is Invalid Date.&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;dob=DOB&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#7: Create the Entity class Contact.java&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.contacts;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Date;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.Column;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.Entity;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.GeneratedValue;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.GenerationType;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.Id;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.Table;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.apache.commons.lang.builder.ToStringBuilder;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Entity&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Table(name=&amp;quot;CONTACTS&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class Contact&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Id&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @GeneratedValue(strategy = GenerationType.AUTO)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private int id;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Column private String name;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Column private String address; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Column private String gender; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Column private Date dob; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Column private String email;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Column private String mobile; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Column private String phone;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Override&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public String toString()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return ToStringBuilder.reflectionToString(this);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; //setters &amp;amp; getters &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#8: Create the ContactsDAO.java which performs CRUD operations on CONTACTS table.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.contacts;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.List;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.hibernate.Criteria;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.hibernate.SessionFactory;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.hibernate.criterion.Restrictions;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.factory.annotation.Autowired;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.stereotype.Repository;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.transaction.annotation.Transactional;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Repository&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Transactional&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class ContactsDAO&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Autowired&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private SessionFactory sessionFactory;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public Contact getById(int id)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return (Contact) sessionFactory.getCurrentSession().get(Contact.class, id);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @SuppressWarnings(&amp;quot;unchecked&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public List&amp;lt;Contact&amp;gt; searchContacts(String name)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  Criteria criteria = sessionFactory.getCurrentSession().createCriteria(Contact.class);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  criteria.add(Restrictions.ilike(&amp;quot;name&amp;quot;, name+&amp;quot;%&amp;quot;));&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return criteria.list();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @SuppressWarnings(&amp;quot;unchecked&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public List&amp;lt;Contact&amp;gt; getAllContacts()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  Criteria criteria = sessionFactory.getCurrentSession().createCriteria(Contact.class);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return criteria.list();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public int save(Contact contact)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return (Integer) sessionFactory.getCurrentSession().save(contact);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public void update(Contact contact)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  sessionFactory.getCurrentSession().merge(contact);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public void delete(int id)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  Contact c = getById(id);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  sessionFactory.getCurrentSession().delete(c);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#9: Create ContactFormValidator.java which performs the validations on saving/updating a contact.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.contacts;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.stereotype.Component;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.validation.Errors;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.validation.ValidationUtils;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.validation.Validator;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Component(&amp;quot;contactFormValidator&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class ContactFormValidator implements Validator&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @SuppressWarnings(&amp;quot;unchecked&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Override&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public boolean supports(Class clazz)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return Contact.class.isAssignableFrom(clazz);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Override&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public void validate(Object model, Errors errors)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  ValidationUtils.rejectIfEmptyOrWhitespace(errors, &amp;quot;name&amp;quot;,&amp;quot;required.name&amp;quot;, &amp;quot;Name is required.&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#10: Create ContactsControllers.java which processes all the CRUD requests.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.contacts;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.text.SimpleDateFormat;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Date;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.List;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.factory.annotation.Autowired;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.propertyeditors.CustomDateEditor;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.stereotype.Controller;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.validation.BindingResult;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.WebDataBinder;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.annotation.InitBinder;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.annotation.ModelAttribute;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.annotation.RequestMapping;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.annotation.RequestMethod;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.annotation.RequestParam;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.bind.support.SessionStatus;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.web.servlet.ModelAndView;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Controller&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class ContactsControllers&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Autowired&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private ContactsDAO contactsDAO;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Autowired&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private ContactFormValidator validator;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @InitBinder&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public void initBinder(WebDataBinder binder) &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  SimpleDateFormat dateFormat = new SimpleDateFormat(&amp;quot;dd-MM-yyyy&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  dateFormat.setLenient(false);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  binder.registerCustomEditor(Date.class, new CustomDateEditor(dateFormat, true));&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(&amp;quot;/searchContacts&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public ModelAndView searchContacts(@RequestParam(required= false, defaultValue=&amp;quot;&amp;quot;) String name)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  ModelAndView mav = new ModelAndView(&amp;quot;showContacts&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  List&amp;lt;Contact&amp;gt; contacts = contactsDAO.searchContacts(name.trim());&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  mav.addObject(&amp;quot;SEARCH_CONTACTS_RESULTS_KEY&amp;quot;, contacts);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return mav;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(&amp;quot;/viewAllContacts&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public ModelAndView getAllContacts()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  ModelAndView mav = new ModelAndView(&amp;quot;showContacts&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  List&amp;lt;Contact&amp;gt; contacts = contactsDAO.getAllContacts();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  mav.addObject(&amp;quot;SEARCH_CONTACTS_RESULTS_KEY&amp;quot;, contacts);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return mav;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(value=&amp;quot;/saveContact&amp;quot;, method=RequestMethod.GET)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public ModelAndView newuserForm()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  ModelAndView mav = new ModelAndView(&amp;quot;newContact&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  Contact contact = new Contact();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  mav.getModelMap().put(&amp;quot;newContact&amp;quot;, contact);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return mav;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(value=&amp;quot;/saveContact&amp;quot;, method=RequestMethod.POST)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public String create(@ModelAttribute(&amp;quot;newContact&amp;quot;)Contact contact, BindingResult result, SessionStatus status)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  validator.validate(contact, result);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  if (result.hasErrors()) &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  {    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   return &amp;quot;newContact&amp;quot;;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  contactsDAO.save(contact);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  status.setComplete();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return &amp;quot;redirect:viewAllContacts.do&amp;quot;;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(value=&amp;quot;/updateContact&amp;quot;, method=RequestMethod.GET)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public ModelAndView edit(@RequestParam(&amp;quot;id&amp;quot;)Integer id)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  ModelAndView mav = new ModelAndView(&amp;quot;editContact&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  Contact contact = contactsDAO.getById(id);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  mav.addObject(&amp;quot;editContact&amp;quot;, contact);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return mav;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(value=&amp;quot;/updateContact&amp;quot;, method=RequestMethod.POST)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public String update(@ModelAttribute(&amp;quot;editContact&amp;quot;) Contact contact, BindingResult result, SessionStatus status)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  validator.validate(contact, result);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  if (result.hasErrors()) {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   return &amp;quot;editContact&amp;quot;;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  contactsDAO.update(contact);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  status.setComplete();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return &amp;quot;redirect:viewAllContacts.do&amp;quot;;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @RequestMapping(&amp;quot;deleteContact&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public ModelAndView delete(@RequestParam(&amp;quot;id&amp;quot;)Integer id)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  ModelAndView mav = new ModelAndView(&amp;quot;redirect:viewAllContacts.do&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  contactsDAO.delete(id);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return mav;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; } &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#11: Instead of writing the JSTL tag library declerations in all the JSPs, declare them in one JSP and include that JSP in other JSPs.&lt;br /&gt;
taglib_includes.jsp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%@taglib uri=&amp;quot;http://java.sun.com/jsp/jstl/core&amp;quot; prefix=&amp;quot;c&amp;quot;%&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;%@taglib uri=&amp;quot;http://java.sun.com/jsp/jstl/fmt&amp;quot; prefix=&amp;quot;fmt&amp;quot;%&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;%@taglib uri=&amp;quot;http://www.springframework.org/tags/form&amp;quot; prefix=&amp;quot;form&amp;quot;%&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;%@taglib uri=&amp;quot;http://www.springframework.org/tags&amp;quot; prefix=&amp;quot;spring&amp;quot;%&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#12: Create the JSPs.&lt;/p&gt;

&lt;p&gt;a)showContacts.jsp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%@include file=&amp;quot;taglib_includes.jsp&amp;quot; %&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;title&amp;gt;&amp;lt;spring:message code=&amp;quot;App.Title&amp;quot;&amp;gt;&amp;lt;/spring:message&amp;gt; &amp;lt;/title&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;body style=&amp;quot;font-family: Arial; font-size:smaller;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;center&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;table bordercolor=&amp;quot;#006699&amp;quot; style=&amp;quot;border-collapse: collapse; width: 500px;&amp;quot; border=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;     &amp;lt;td&amp;gt;Enter Contact Name&amp;lt;/td&amp;gt;      &amp;lt;td&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;table bordercolor=&amp;quot;#006699&amp;quot; style=&amp;quot;border-collapse: collapse; width: 500px;&amp;quot; border=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr bgcolor=&amp;quot;lightblue&amp;quot;&amp;gt;    &amp;lt;th&amp;gt;Id&amp;lt;/th&amp;gt;    &amp;lt;th&amp;gt;Name&amp;lt;/th&amp;gt;       &amp;lt;th&amp;gt;Address&amp;lt;/th&amp;gt;     &amp;lt;th&amp;gt;Mobile&amp;lt;/th&amp;gt;    &amp;lt;th&amp;gt;&amp;lt;/th&amp;gt;   &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;c:if test=&amp;quot;${empty SEARCH_CONTACTS_RESULTS_KEY}&amp;quot;&amp;gt; &amp;lt;/c:if&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;    &amp;lt;td colspan=&amp;quot;4&amp;quot;&amp;gt;No Results found&amp;lt;/td&amp;gt;   &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;c:if test=&amp;quot;${! empty SEARCH_CONTACTS_RESULTS_KEY}&amp;quot;&amp;gt;    &amp;lt;c:foreach var=&amp;quot;contact&amp;quot; items=&amp;quot;${SEARCH_CONTACTS_RESULTS_KEY}&amp;quot;&amp;gt; &amp;lt;/c:foreach&amp;gt;&amp;lt;/c:if&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;     &amp;lt;td&amp;gt;&amp;lt;c:out value=&amp;quot;${contact.id}&amp;quot;&amp;gt;&amp;lt;/c:out&amp;gt;&amp;lt;/td&amp;gt;     &amp;lt;td&amp;gt;&amp;lt;c:out value=&amp;quot;${contact.name}&amp;quot;&amp;gt;&amp;lt;/c:out&amp;gt;&amp;lt;/td&amp;gt;     &amp;lt;td&amp;gt;&amp;lt;c:out value=&amp;quot;${contact.address}&amp;quot;&amp;gt;&amp;lt;/c:out&amp;gt; &amp;lt;/td&amp;gt;     &amp;lt;td&amp;gt;&amp;lt;c:out value=&amp;quot;${contact.mobile}&amp;quot;&amp;gt;&amp;lt;/c:out&amp;gt;&amp;lt;/td&amp;gt;     &amp;lt;td&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;a href=&amp;quot;http://www.blogger.com/updateContact.do?id=$%7Bcontact.id%7D&amp;quot;&amp;gt;Edit&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;a href=&amp;quot;javascript:deleteContact(&#39;deleteContact.do?id=$%7Bcontact.id%7D&#39;);&amp;quot;&amp;gt;Delete&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;    &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/center&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;b)newContact.jsp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%@include file=&amp;quot;taglib_includes.jsp&amp;quot; %&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;title&amp;gt;&amp;lt;spring:message code=&amp;quot;App.Title&amp;quot;&amp;gt;&amp;lt;/spring:message&amp;gt; &amp;lt;/title&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;body style=&amp;quot;font-family: Arial; font-size:smaller;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;table bordercolor=&amp;quot;#006699&amp;quot; style=&amp;quot;border-collapse: collapse; width: 750px;&amp;quot; align=&amp;quot;center&amp;quot; height=&amp;quot;500&amp;quot; bgcolor=&amp;quot;lightblue&amp;quot; border=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;   &amp;lt;td align=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;h3&amp;gt;Edit Contact Form&amp;lt;/h3&amp;gt;&amp;lt;/td&amp;gt;  &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr align=&amp;quot;center&amp;quot; valign=&amp;quot;top&amp;quot;&amp;gt;     &amp;lt;td align=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:form action=&amp;quot;saveContact.do&amp;quot; commandname=&amp;quot;newContact&amp;quot; method=&amp;quot;post&amp;quot;&amp;gt;&amp;lt;/form:form&amp;gt;&amp;lt;table bordercolor=&amp;quot;#006699&amp;quot; cellpadding=&amp;quot;2&amp;quot; style=&amp;quot;border-collapse: collapse; width: 500px;&amp;quot; cellspacing=&amp;quot;2&amp;quot; border=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Name&amp;lt;/td&amp;gt;       &amp;lt;td width=&amp;quot;150&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:input path=&amp;quot;name&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;name&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;DOB&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;dob&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;dob&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Gender&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:select path=&amp;quot;gender&amp;quot;&amp;gt;&amp;lt;form:option value=&amp;quot;M&amp;quot; label=&amp;quot;Male&amp;quot;&amp;gt;&amp;lt;form:option value=&amp;quot;F&amp;quot; label=&amp;quot;Female&amp;quot;&amp;gt;&amp;lt;/form:option&amp;gt;&amp;lt;/form:option&amp;gt;&amp;lt;/form:select&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt; &amp;lt;/td&amp;gt;            &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Address&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;address&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;address&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Email&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;email&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;email&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Mobile&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;mobile&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;mobile&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td colspan=&amp;quot;3&amp;quot; align=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;a)editContact.jsp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%@include file=&amp;quot;taglib_includes.jsp&amp;quot; %&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;title&amp;gt;&amp;lt;spring:message code=&amp;quot;App.Title&amp;quot;&amp;gt;&amp;lt;/spring:message&amp;gt; &amp;lt;/title&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;body style=&amp;quot;font-family: Arial; font-size:smaller;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;table bordercolor=&amp;quot;#006699&amp;quot; style=&amp;quot;border-collapse: collapse; width: 750px;&amp;quot; align=&amp;quot;center&amp;quot; height=&amp;quot;500&amp;quot; bgcolor=&amp;quot;lightblue&amp;quot; border=&amp;quot;1&amp;quot;&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;   &amp;lt;td align=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;h3&amp;gt;Edit Contact Form&amp;lt;/h3&amp;gt;&amp;lt;/td&amp;gt;  &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr align=&amp;quot;center&amp;quot; valign=&amp;quot;top&amp;quot;&amp;gt;     &amp;lt;td align=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:form action=&amp;quot;updateContact.do&amp;quot; commandname=&amp;quot;editContact&amp;quot; method=&amp;quot;post&amp;quot;&amp;gt;&amp;lt;/form:form&amp;gt;&amp;lt;table bordercolor=&amp;quot;#006699&amp;quot; cellpadding=&amp;quot;2&amp;quot; style=&amp;quot;border-collapse: collapse; width: 500px;&amp;quot; cellspacing=&amp;quot;2&amp;quot; border=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;tbody&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Id&amp;lt;/td&amp;gt;       &amp;lt;td width=&amp;quot;150&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:input path=&amp;quot;id&amp;quot; readonly=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;id&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Name&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:input path=&amp;quot;name&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;name&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;DOB&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;dob&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;dob&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Gender&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:select path=&amp;quot;gender&amp;quot;&amp;gt;&amp;lt;form:option value=&amp;quot;M&amp;quot; label=&amp;quot;Male&amp;quot;&amp;gt;&amp;lt;form:option value=&amp;quot;F&amp;quot; label=&amp;quot;Female&amp;quot;&amp;gt;&amp;lt;/form:option&amp;gt;&amp;lt;/form:option&amp;gt;&amp;lt;/form:select&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt; &amp;lt;/td&amp;gt;            &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Address&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;address&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;address&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Email&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;email&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;email&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr&amp;gt;       &amp;lt;td width=&amp;quot;100&amp;quot; align=&amp;quot;right&amp;quot;&amp;gt;Mobile&amp;lt;/td&amp;gt;       &amp;lt;td&amp;gt;&amp;lt;form:input path=&amp;quot;mobile&amp;quot;&amp;gt;&amp;lt;/form:input&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;td align=&amp;quot;left&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;form:errors cssstyle=&amp;quot;color:red&amp;quot; path=&amp;quot;mobile&amp;quot;&amp;gt;&amp;lt;/form:errors&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;tr valign=&amp;quot;bottom&amp;quot;&amp;gt;       &amp;lt;td colspan=&amp;quot;3&amp;quot; align=&amp;quot;center&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/td&amp;gt;      &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/td&amp;gt;       &amp;lt;/tr&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/tbody&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#13: Write the javascript file js/contacts.js containing the utility methods&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function go(url)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; window.location = url;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;function deleteContact(url)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; var isOK = confirm(&amp;quot;Are you sure to delete?&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; if(isOK)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  go(url);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#14: The welcome file index.jsp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;response.sendRedirect(&amp;quot;viewAllContacts.do&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;%&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Step#15: Start the server and point your browser URL to &lt;a href=&#34;http://localhost:8080/SpringMVCHibernate&#34;&gt;http://localhost:8080/SpringMVCHibernate&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can download the source code at&lt;br /&gt;
&lt;a href=&#34;https://sites.google.com/site/sivalabworks/sampleappdownloads/SpringMVCHibernate.zip?attredirects=0&amp;amp;d=1&#34;&gt;SpringMVCHibernate.zip&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Spring&#43;Hibernate Application with zero XML</title>
      <link>http://sivalabs.github.io/post/2011/springhibernate-application-with-zero-xml/</link>
      <pubDate>Thu, 17 Feb 2011 17:00:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/springhibernate-application-with-zero-xml/</guid>
      <description>&lt;p&gt;Spring framework came up with Annotation support since 2.5 version which eases the development.&lt;br /&gt;
Whether Annotation based approach better or XML approach is better is depends on the project and their personal preference.&lt;/p&gt;

&lt;p&gt;Let us see how we can write a Simple Application using Spring and Hibernate using Annotations, no xml at all.&lt;/p&gt;

&lt;p&gt;The configuration for JDBC datasource and Hibernate properties:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;application.properties&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;################### JDBC Configuration ##########################&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.driverClassName=org.hsqldb.jdbcDriver&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.url=jdbc:hsqldb:file:db/SivaLabsDB;shutdown=true&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.username=sa&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;jdbc.password=&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;################### Hibernate Configuration ##########################&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;hibernate.dialect=org.hibernate.dialect.HSQLDialect&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;hibernate.show_sql=true&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;hibernate.hbm2ddl.auto=update&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;hibernate.generate_statistics=true&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can instantiate ApplicationContext from a java file having @Configuration annotation.&lt;/p&gt;

&lt;p&gt;AppConfig.java&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.springmvc.config;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.factory.config.PropertyPlaceholderConfigurer;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.annotation.Bean;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.annotation.Configuration;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.annotation.Import;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.core.io.ClassPathResource;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;/**&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; * @author SivaLabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; *&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; */&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Import({RepositoryConfig.class})&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Configuration&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class AppConfig&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    //&amp;lt;context:property-placeholder location=&amp;quot;classpath:application.properties&amp;quot;&amp;gt;&amp;lt;/context:property-placeholder&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Bean&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public PropertyPlaceholderConfigurer getPropertyPlaceholderConfigurer()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        PropertyPlaceholderConfigurer ppc = new PropertyPlaceholderConfigurer();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ppc.setLocation(new ClassPathResource(&amp;quot;application.properties&amp;quot;));&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ppc.setIgnoreUnresolvablePlaceholders(true);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return ppc;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here @Import({RepositoryConfig.class}) means xml version of &lt;strong&gt;&lt;import resource=&#34;applicationContext-dao.xml&#34;&gt;&lt;/import&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.springmvc.config;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.HashMap;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Map;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Properties;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.sql.DataSource;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.hibernate.SessionFactory;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.factory.annotation.Autowired;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.factory.annotation.Value;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.annotation.Bean;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.annotation.Configuration;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.jdbc.datasource.DriverManagerDataSource;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.orm.hibernate3.HibernateTemplate;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.orm.hibernate3.HibernateTransactionManager;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.transaction.annotation.AnnotationTransactionAttributeSource;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.transaction.interceptor.TransactionAttributeSource;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.transaction.interceptor.TransactionInterceptor;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;/**&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; * @author SivaLabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; *&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; */&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Configuration&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class RepositoryConfig&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    //${jdbc.driverClassName}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Value(&amp;quot;${jdbc.driverClassName}&amp;quot;)     private String driverClassName;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Value(&amp;quot;${jdbc.url}&amp;quot;)                 private String url;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Value(&amp;quot;${jdbc.username}&amp;quot;)             private String username;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Value(&amp;quot;${jdbc.password}&amp;quot;)             private String password;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Value(&amp;quot;${hibernate.dialect}&amp;quot;)         private String hibernateDialect;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Value(&amp;quot;${hibernate.show_sql}&amp;quot;)     private String hibernateShowSql;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Value(&amp;quot;${hibernate.hbm2ddl.auto}&amp;quot;) private String hibernateHbm2ddlAuto;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Bean()    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public DataSource getDataSource()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        DriverManagerDataSource ds = new DriverManagerDataSource();        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ds.setDriverClassName(driverClassName);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ds.setUrl(url);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ds.setUsername(username);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ds.setPassword(password);        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return ds;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Bean&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Autowired &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public HibernateTransactionManager transactionManager(SessionFactory sessionFactory)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        HibernateTransactionManager htm = new HibernateTransactionManager();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        htm.setSessionFactory(sessionFactory);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return htm;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Bean&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Autowired&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public HibernateTemplate getHibernateTemplate(SessionFactory sessionFactory)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        HibernateTemplate hibernateTemplate = new HibernateTemplate(sessionFactory);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return hibernateTemplate;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Bean&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public AnnotationSessionFactoryBean getSessionFactory()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        AnnotationSessionFactoryBean asfb = new AnnotationSessionFactoryBean();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        asfb.setDataSource(getDataSource());&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        asfb.setHibernateProperties(getHibernateProperties());        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        asfb.setPackagesToScan(new String[]{&amp;quot;com.sivalabs&amp;quot;});&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return asfb;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Bean&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public Properties getHibernateProperties()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        Properties properties = new Properties();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        properties.put(&amp;quot;hibernate.dialect&amp;quot;, hibernateDialect);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        properties.put(&amp;quot;hibernate.show_sql&amp;quot;, hibernateShowSql);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        properties.put(&amp;quot;hibernate.hbm2ddl.auto&amp;quot;, hibernateHbm2ddlAuto);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return properties;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create an Entity User as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.springmvc.entities;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.Entity;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.GeneratedValue;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.GenerationType;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.persistence.Id;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;/**&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; * @author SivaLabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; *&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; */&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Entity&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class User&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Id&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @GeneratedValue(strategy = GenerationType.AUTO)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private Integer id;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private String name;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private String address;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public User()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public User(Integer id, String name, String address)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.id = id;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.name = name;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.address = address;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Override&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public String toString()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return &amp;quot;User [address=&amp;quot; + address + &amp;quot;, id=&amp;quot; + id + &amp;quot;, name=&amp;quot; + name+ &amp;quot;]&amp;quot;;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public Integer getId()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return id;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void setId(Integer id)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.id = id;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public String getName()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return name;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void setName(String name)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.name = name;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public String getAddress()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return address;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void setAddress(String address)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.address = address;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create UserRepository to perform DB operations using Hibernate.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.springmvc.repositories;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.List;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.factory.annotation.Autowired;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.orm.hibernate3.HibernateTemplate;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.stereotype.Repository;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.transaction.annotation.Transactional;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import com.sivalabs.springmvc.entities.User;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;/**&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; * @author SivaLabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; *&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;*/&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Transactional&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Repository&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class UserRepository&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Autowired&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private HibernateTemplate hibernateTemplate;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public List&amp;lt;User&amp;gt; getAllUsers()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return this.hibernateTemplate.loadAll(User.class);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public Integer createUser(User user)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        User mergeUser = this.hibernateTemplate.merge(user);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return mergeUser.getId();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create a UserService class which is responsible for performing User operations.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.springmvc.services;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.List;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.beans.factory.annotation.Autowired;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.stereotype.Service;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import com.sivalabs.springmvc.entities.User;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import com.sivalabs.springmvc.repositories.UserRepository;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;/**&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; * @author SivaLabs&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; *&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; */&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@Service&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class UserService&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @Autowired&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private UserRepository userRepository;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public List&amp;lt;User&amp;gt; getAllUsers()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return this.userRepository.getAllUsers();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public Integer createUser(User user)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return this.userRepository.createUser(user);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let us create ApplicationContext from AppConfig.java and test the functionality.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.test;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.List;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.ApplicationContext;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.annotation.AnnotationConfigApplicationContext;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.springframework.context.support.ClassPathXmlApplicationContext;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import com.sivalabs.springmvc.entities.User;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import com.sivalabs.springmvc.services.UserService;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class ContainerTest&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public static void main(String[] args)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ctx.scan(&amp;quot;com.sivalabs&amp;quot;);//This will load the configured components UserService, UserRepository, &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ctx.refresh();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        System.out.println(ctx);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        UserService userService = ctx.getBean(&amp;quot;userService&amp;quot;, UserService.class);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        List&amp;lt;User&amp;gt; allUser = userService.getAllUsers();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        for (User u : allUser)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            System.out.println(u);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        User user = new User(null, &amp;quot;K.siva reddy&amp;quot;, &amp;quot;hyderabad&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        Integer id = userService.createUser(user);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        System.out.println(&amp;quot;Newly created User Id=&amp;quot;+id);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        allUser = userService.getAllUsers();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        for (User u : allUser)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            System.out.println(u);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;See how application development is much more easier now with Annotations.&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ClassNotFoundException: org.hibernate.hql.ast.HqlToken Problem with Hibernate3 and WebLogic Server10</title>
      <link>http://sivalabs.github.io/post/2009/classnotfoundexception-org-hibernate-hql-ast-hqltoken-problem-with-hibernate3-and-weblogic-server10/</link>
      <pubDate>Tue, 05 May 2009 04:02:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2009/classnotfoundexception-org-hibernate-hql-ast-hqltoken-problem-with-hibernate3-and-weblogic-server10/</guid>
      <description>&lt;p&gt;Hi,&lt;br /&gt;
Recently i tried to develop an application using Spring and Hibernate. I deployed the application on Tomcat, JBoss servers and it is working fine.&lt;/p&gt;

&lt;p&gt;But when i tried to deploy it on WebLogic Server 10, i got into strange errors.&lt;br /&gt;
When i execute session.find(&amp;ldquo;from Account where id=?&amp;rdquo;), it is saying ClassNotFoundException: org.hibernate.hql.ast.HqlToken.&lt;/p&gt;

&lt;p&gt;When i googled for the solution i found the following :&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://forum.springsource.org/showthread.php?t=36860&amp;amp;highlight=HQLToken+classnotfound&#34;&gt;this&lt;/a&gt;, &lt;a href=&#34;http://sachin-more.blogspot.com/2008/08/orghibernatequeryexception.html&#34;&gt;this&lt;/a&gt; and some more.&lt;/p&gt;

&lt;p&gt;But all are saying that WebLogic server is using some earlier version of ANTLR jar file causing this error.&lt;/p&gt;

&lt;p&gt;But when the Open Source Application servers like JBoss have taken care of these issues, why don&amp;rsquo;t the commercial application server takes care of these kind of issues. Also I surprised when i know that this is a known issue with weblogic server from 8.x version and it is not yet fixed.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>