<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jpa on SivaLabs</title>
    <link>http://sivalabs.github.io/tags/jpa/</link>
    <description>Recent content in Jpa on SivaLabs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Mar 2014 06:31:00 +0000</lastBuildDate>
    <atom:link href="http://sivalabs.github.io/tags/jpa/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>SpringMVC4 &#43; Spring Data JPA &#43; SpringSecurity configuration using JavaConfig</title>
      <link>http://sivalabs.github.io/post/2014/springmvc4-spring-data-jpa-springsecurity-configuration-using-javaconfig/</link>
      <pubDate>Sun, 02 Mar 2014 06:31:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2014/springmvc4-spring-data-jpa-springsecurity-configuration-using-javaconfig/</guid>
      <description>&lt;p&gt;In this article we will see how to configure and integrate SpringMVC4, Spring Data JPA with Hibernate and SpringSecurity using JavaConfig.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First let&amp;rsquo;s configure all the necessary dependencies in &lt;strong&gt;pom.xml&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302291&#34;&gt;https://gist.github.com/sivaprasadreddy/9302291&lt;/a&gt; /]&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure database connection properties and email settings in &lt;strong&gt;application.properties&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302302&#34;&gt;https://gist.github.com/sivaprasadreddy/9302302&lt;/a&gt; /]&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure common Service Layer beans such as &lt;strong&gt;PropertySourcesPlaceholderConfigurer&lt;/strong&gt; and **JavaMailSender **etc in &lt;strong&gt;com.sivalabs.springapp.config.AppConfig.java&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302313&#34;&gt;https://gist.github.com/sivaprasadreddy/9302313&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Observe that we have excluded the package &amp;ldquo;&lt;strong&gt;com.sivalabs.springapp.web.&lt;/strong&gt;*&amp;rdquo; from component scanning using new **REGEX excludeFilter **type.
If we don&amp;rsquo;t exclude web related packages and tries to run JUnit test for service layer beans we will encounter the following Exception:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;java.lang.IllegalArgumentException: A ServletContext is required to configure default servlet handling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Also note that we have enabled Caching using &lt;strong&gt;@EnableCaching&lt;/strong&gt;, so we should declare **CacheManager **bean.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure Persistence Layer beans in &lt;strong&gt;com.sivalabs.springapp.config.PersistenceConfig.java&lt;/strong&gt; as follows:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302322&#34;&gt;https://gist.github.com/sivaprasadreddy/9302322&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Here we have configured DataSource and JPA EntityManagerFactory bean using Hibernate implementation.
Also we have configured DataSourceInitializer bean to initialize and populate our tables with seed data. We can enable/disable executing this &lt;strong&gt;db.sql&lt;/strong&gt; script by changing init-db property value in application.properties.
And finally we have enabled Spring Data JPA repositories scanning using &lt;strong&gt;@EnableJpaRepositories&lt;/strong&gt; to scan &amp;ldquo;&lt;strong&gt;com.sivalabs.springapp.repositories&lt;/strong&gt;&amp;rdquo; package for JPA repository interfaces.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Now let us configure Web related beans in &lt;strong&gt;com.sivalabs.springapp.web.config.WebMvcConfig.java&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302326&#34;&gt;https://gist.github.com/sivaprasadreddy/9302326&lt;/a&gt; /]&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Configure DispatcherService using &lt;strong&gt;AbstractAnnotationConfigDispatcherServletInitializer&lt;/strong&gt; convinient class.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302337&#34;&gt;https://gist.github.com/sivaprasadreddy/9302337&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Here few things to note are we configured &lt;strong&gt;AppConfig.class&lt;/strong&gt; as RootConfig classes and &lt;strong&gt;WebMvcConfig.class&lt;/strong&gt; as ServletConfigClasses which is similar to how we configure in &lt;strong&gt;web.xml&lt;/strong&gt; using ContextLoaderListener and DispatcherServlet&amp;rsquo;s contextConfigLocation .
Also we have registered &lt;strong&gt;OpenEntityManagerInViewFilter&lt;/strong&gt; to enable lazy loading of JPA entity graphs in view rendering phase.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Let us configure SpringSecurity.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;First let us create a &lt;strong&gt;SecurityUser&lt;/strong&gt; class which extends our application specific &lt;strong&gt;User&lt;/strong&gt; class and implements &lt;strong&gt;org.springframework.security.core.userdetails.UserDetails&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302340&#34;&gt;https://gist.github.com/sivaprasadreddy/9302340&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;We will implement a custom &lt;strong&gt;UserDetailsService&lt;/strong&gt; and use Spring Data JPA repositories to load User details.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302345&#34;&gt;https://gist.github.com/sivaprasadreddy/9302345&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Now create &lt;strong&gt;com.sivalabs.springapp.config.SecurityConfig.java&lt;/strong&gt; which contains SpeingSecurity related bean definitions.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302351&#34;&gt;https://gist.github.com/sivaprasadreddy/9302351&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Update &lt;strong&gt;SpringWebAppInitializer&lt;/strong&gt; which we created eariler to add &lt;strong&gt;SecurityConfig&lt;/strong&gt; configuration class.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302357&#34;&gt;https://gist.github.com/sivaprasadreddy/9302357&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;As per our SpringSecurity custom Form Login configuration, we will use the following login form in &lt;strong&gt;login.jsp&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302375&#34;&gt;https://gist.github.com/sivaprasadreddy/9302375&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;Once we successfully login we can obtain the authenticated use details using **** and secure parts of the view using **** as follows:&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/9302382&#34;&gt;https://gist.github.com/sivaprasadreddy/9302382&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;You can find the source code at github &lt;a href=&#34;https://github.com/sivaprasadreddy/sivalabs-blog-samples-code/tree/master/springmvc-datajpa-security-demo&#34;&gt;https://github.com/sivaprasadreddy/sivalabs-blog-samples-code/tree/master/springmvc-datajpa-security-demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There are few issues while running the same application on JBoss AS 7.1. I have made few changes to run on JBossAS7.1 and published code at &lt;a href=&#34;https://github.com/sivaprasadreddy/sivalabs-blog-samples-code/tree/master/springmvc-datajpa-security-demo-jboss7&#34;&gt;https://github.com/sivaprasadreddy/sivalabs-blog-samples-code/tree/master/springmvc-datajpa-security-demo-jboss7&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>