<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SivaLabs</title>
    <link>http://sivalabs.github.io/</link>
    <description>Recent content on SivaLabs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Feb 2016 07:00:00 +0530</lastBuildDate>
    <atom:link href="http://sivalabs.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Creating Custom SpringBoot Starter for Twitter4j</title>
      <link>http://sivalabs.github.io/creating-custom-springboot-starter-twitter4j</link>
      <pubDate>Mon, 15 Feb 2016 07:00:00 +0530</pubDate>
      
      <guid>http://sivalabs.github.io/creating-custom-springboot-starter-twitter4j</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;SpringBoot provides lot of starter modules to get up and running quickly.
SpringBoot&amp;#8217;s auto-configure mechanism takes care of configuring SpringBeans on our behalf based on various criteria.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In addition to the springboot starters that comes out-of-the-box provided by Core Spring Team, we can also create our own starter modules.
In this post we will look into how to create a custom SpringBoot starter.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To demonstrate it we are going to create &lt;strong&gt;twitter4j-spring-boot-starter&lt;/strong&gt; which will auto-configure Twitter4J beans.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To accomplish this, we are going to create:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;twitter4j-spring-boot-autoconfigure&lt;/strong&gt; module which contains Twitter4J AutoConfiguration bean definitions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;twitter4j-spring-boot-starter&lt;/strong&gt; module which pulls in &lt;strong&gt;twitter4j-spring-boot-autoconfigure&lt;/strong&gt; and &lt;strong&gt;twitter4j-core&lt;/strong&gt; dependencies&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sample application which uses &lt;strong&gt;twitter4j-spring-boot-starter&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_create_parent_module_spring_boot_starter_twitter4j&#34;&gt;Create Parent Module spring-boot-starter-twitter4j&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;First we are going to create a parent pom type module to define dependency versions and sub-modules.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;project&lt;/span&gt; &lt;span style=&#34;color: #7D9029&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot;&lt;/span&gt;
	&lt;span style=&#34;color: #7D9029&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;
	&lt;span style=&#34;color: #7D9029&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;http://maven.apache.org/POM/4.0.0&lt;/span&gt;
&lt;span style=&#34;color: #BA2121&#34;&gt;						http://maven.apache.org/maven-v4_0_0.xsd&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.sivalabs&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-twitter4j&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;pom&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;spring-boot-starter-twitter4j&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;twitter4j.version&amp;gt;&lt;/span&gt;4.0.3&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/twitter4j.version&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;spring-boot.version&amp;gt;&lt;/span&gt;1.3.2.RELEASE&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/spring-boot.version&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;modules&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;twitter4j-spring-boot-autoconfigure&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/module&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;twitter4j-spring-boot-starter&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/module&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;module&amp;gt;&lt;/span&gt;twitter4j-spring-boot-sample&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/module&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/modules&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependencyManagement&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-dependencies&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${spring-boot.version}&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;pom&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;import&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;

			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.twitter4j&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;twitter4j-core&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${twitter4j.version}&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependencyManagement&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this &lt;strong&gt;pom.xml&lt;/strong&gt; we are defining the SpringBoot and Twitter4j versions in &lt;strong&gt;&amp;lt;dependencyManagement&amp;gt;&lt;/strong&gt; section so that we don&amp;#8217;t need to specify versions all over the places.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_create_twitter4j_spring_boot_autoconfigure_module&#34;&gt;Create twitter4j-spring-boot-autoconfigure module&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Create a child module with name &lt;strong&gt;twitter4j-spring-boot-autoconfigure&lt;/strong&gt; in our parent maven module &lt;strong&gt;spring-boot-starter-twitter4j&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Add the maven dependencies such as spring-boot, spring-boot-autoconfigure, twitter4j-core and junit as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;project&lt;/span&gt; &lt;span style=&#34;color: #7D9029&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #7D9029&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;
	&lt;span style=&#34;color: #7D9029&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;http://maven.apache.org/POM/4.0.0&lt;/span&gt;
&lt;span style=&#34;color: #BA2121&#34;&gt;						http://maven.apache.org/maven-v4_0_0.xsd&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.sivalabs&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;twitter4j-spring-boot-autoconfigure&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;jar&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.sivalabs&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-twitter4j&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-autoconfigure&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-configuration-processor&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;optional&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/optional&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;junit&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;junit&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.twitter4j&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;twitter4j-core&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;optional&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/optional&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note that we have specified &lt;strong&gt;twitter4j-core&lt;/strong&gt; as optional dependency because &lt;strong&gt;twitter4j-core&lt;/strong&gt; should be added to the project
 only when &lt;strong&gt;twitter4j-spring-boot-starter&lt;/strong&gt; is added to the project.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_create_twitter4jproperties_to_hold_the_twitter4j_config_parameters&#34;&gt;Create Twitter4jProperties to hold the Twitter4J config parameters&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Create &lt;strong&gt;Twitter4jProperties.java&lt;/strong&gt; to hold the Twitter4J OAuth config parameters&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;package&lt;/span&gt; com&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;sivalabs&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;spring&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;boot&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;autoconfigure&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.boot.context.properties.ConfigurationProperties&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.boot.context.properties.NestedConfigurationProperty&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #AA22FF&#34;&gt;@ConfigurationProperties&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;prefix&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; Twitter4jProperties&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;TWITTER4J_PREFIX&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Twitter4jProperties&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;final&lt;/span&gt; String TWITTER4J_PREFIX &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;twitter4j&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;private&lt;/span&gt; Boolean debug &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

	&lt;span style=&#34;color: #AA22FF&#34;&gt;@NestedConfigurationProperty&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;private&lt;/span&gt; OAuth oauth &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;OAuth&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;();&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; Boolean &lt;span style=&#34;color: #0000FF&#34;&gt;getDebug&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; debug&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
	&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;setDebug&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;Boolean debug&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;debug&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; debug&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
	&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; OAuth &lt;span style=&#34;color: #0000FF&#34;&gt;getOauth&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; oauth&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
	&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;setOauth&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;OAuth oauth&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;oauth&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; oauth&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
	&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;OAuth&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;

		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;private&lt;/span&gt; String consumerKey&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;private&lt;/span&gt; String consumerSecret&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;private&lt;/span&gt; String accessToken&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;private&lt;/span&gt; String accessTokenSecret&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color: #0000FF&#34;&gt;getConsumerKey&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; consumerKey&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
		&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;setConsumerKey&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;String consumerKey&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;consumerKey&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; consumerKey&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
		&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color: #0000FF&#34;&gt;getConsumerSecret&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; consumerSecret&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
		&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;setConsumerSecret&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;String consumerSecret&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;consumerSecret&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; consumerSecret&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
		&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color: #0000FF&#34;&gt;getAccessToken&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; accessToken&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
		&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;setAccessToken&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;String accessToken&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;accessToken&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; accessToken&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
		&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; String &lt;span style=&#34;color: #0000FF&#34;&gt;getAccessTokenSecret&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; accessTokenSecret&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
		&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;setAccessTokenSecret&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;String accessTokenSecret&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;accessTokenSecret&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; accessTokenSecret&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
		&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
	&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;With this configuration object we can configure the twitter4j properties in &lt;strong&gt;application.properties&lt;/strong&gt; as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;properties&#34;&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;twitter4j.debug&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;true&lt;/span&gt;
&lt;span style=&#34;color: #7D9029&#34;&gt;twitter4j.oauth.consumer-key&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;your-consumer-key-here&lt;/span&gt;
&lt;span style=&#34;color: #7D9029&#34;&gt;twitter4j.oauth.consumer-secret&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;your-consumer-secret-here&lt;/span&gt;
&lt;span style=&#34;color: #7D9029&#34;&gt;twitter4j.oauth.access-token&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;your-access-token-here&lt;/span&gt;
&lt;span style=&#34;color: #7D9029&#34;&gt;twitter4j.oauth.access-token-secret&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;your-access-token-secret-here&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_create_twitter4jautoconfiguration_to_auto_configure_twitter4j&#34;&gt;Create Twitter4jAutoConfiguration to auto-configure Twitter4J&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Here comes the key part of our starter. &lt;strong&gt;Twitter4jAutoConfiguration&lt;/strong&gt; configuration class contains the bean definitions that will be automatically configured based on some criteria.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;What is that criteria?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;If &lt;strong&gt;twitter4j.TwitterFactory.class&lt;/strong&gt; is on classpath&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If &lt;strong&gt;TwitterFactory&lt;/strong&gt; bean is not already defined explicitly&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;So, the &lt;strong&gt;Twitter4jAutoConfiguration&lt;/strong&gt; goes like this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;package&lt;/span&gt; com&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;sivalabs&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;spring&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;boot&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;autoconfigure&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.apache.commons.logging.Log&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.apache.commons.logging.LogFactory&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.boot.autoconfigure.condition.ConditionalOnClass&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.boot.context.properties.EnableConfigurationProperties&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.context.annotation.Bean&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.context.annotation.Configuration&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;twitter4j.Twitter&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;twitter4j.TwitterFactory&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;twitter4j.conf.ConfigurationBuilder&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #AA22FF&#34;&gt;@Configuration&lt;/span&gt;
&lt;span style=&#34;color: #AA22FF&#34;&gt;@ConditionalOnClass&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;({&lt;/span&gt; TwitterFactory&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;,&lt;/span&gt; Twitter&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;})&lt;/span&gt;
&lt;span style=&#34;color: #AA22FF&#34;&gt;@EnableConfigurationProperties&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;Twitter4jProperties&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;Twitter4jAutoConfiguration&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;static&lt;/span&gt; Log log &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; LogFactory&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getLog&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;Twitter4jAutoConfiguration&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;);&lt;/span&gt;

	&lt;span style=&#34;color: #AA22FF&#34;&gt;@Autowired&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;private&lt;/span&gt; Twitter4jProperties properties&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

	&lt;span style=&#34;color: #AA22FF&#34;&gt;@Bean&lt;/span&gt;
	&lt;span style=&#34;color: #AA22FF&#34;&gt;@ConditionalOnMissingBean&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; TwitterFactory &lt;span style=&#34;color: #0000FF&#34;&gt;twitterFactory&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(){&lt;/span&gt;

		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;properties&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getOauth&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getConsumerKey&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;null&lt;/span&gt;
			&lt;span style=&#34;color: #666666&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;properties&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getOauth&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getConsumerSecret&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;null&lt;/span&gt;
			&lt;span style=&#34;color: #666666&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;properties&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getOauth&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getAccessToken&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;null&lt;/span&gt;
			&lt;span style=&#34;color: #666666&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;properties&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getOauth&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getAccessTokenSecret&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt;
		&lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
			log&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;error&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;Twitter4j properties not configured properly. Please check twitter4j.* properties settings in configuration file.&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;);&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;RuntimeException&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;Twitter4j properties not configured properly. Please check twitter4j.* properties settings in configuration file.&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;);&lt;/span&gt;
		&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;

		ConfigurationBuilder cb &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;ConfigurationBuilder&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;();&lt;/span&gt;
		cb&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;setDebugEnabled&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;properties&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getDebug&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;())&lt;/span&gt;
		  &lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;setOAuthConsumerKey&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;properties&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getOauth&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getConsumerKey&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;())&lt;/span&gt;
		  &lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;setOAuthConsumerSecret&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;properties&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getOauth&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getConsumerSecret&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;())&lt;/span&gt;
		  &lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;setOAuthAccessToken&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;properties&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getOauth&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getAccessToken&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;())&lt;/span&gt;
		  &lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;setOAuthAccessTokenSecret&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;properties&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getOauth&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getAccessTokenSecret&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;());&lt;/span&gt;
		TwitterFactory tf &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;TwitterFactory&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;cb&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;build&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;());&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; tf&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
	&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;

	&lt;span style=&#34;color: #AA22FF&#34;&gt;@Bean&lt;/span&gt;
	&lt;span style=&#34;color: #AA22FF&#34;&gt;@ConditionalOnMissingBean&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; Twitter &lt;span style=&#34;color: #0000FF&#34;&gt;twitter&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;TwitterFactory twitterFactory&lt;span style=&#34;color: #666666&#34;&gt;){&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; twitterFactory&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getInstance&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;();&lt;/span&gt;
	&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We have used &lt;strong&gt;@ConditionalOnClass({ TwitterFactory.class, Twitter.class })&lt;/strong&gt; to specify
that this auto configuration should take place only when &lt;strong&gt;TwitterFactory.class, Twitter.class&lt;/strong&gt; classes are present.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We have also used &lt;strong&gt;@ConditionalOnMissingBean&lt;/strong&gt; on bean definition methods to specify consider this bean definition only
if &lt;strong&gt;TwitterFactory/Twitter&lt;/strong&gt; beans are not already defined explicitly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Also note that we have annotated with &lt;strong&gt;@EnableConfigurationProperties(Twitter4jProperties.class)&lt;/strong&gt; to enable support for ConfigurationProperties and injected &lt;strong&gt;Twitter4jProperties&lt;/strong&gt; bean.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now we need to configure our custom &lt;strong&gt;Twitter4jAutoConfiguration&lt;/strong&gt; in &lt;strong&gt;src/main/resources/META-INF/spring.factories&lt;/strong&gt; file as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;org&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;springframework&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;boot&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;autoconfigure&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;EnableAutoConfiguration&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt;com&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;sivalabs&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;spring&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;boot&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;autoconfigure&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;Twitter4jAutoConfiguration&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_create_twitter4j_spring_boot_starter_module&#34;&gt;Create twitter4j-spring-boot-starter module&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Create a child module with name &lt;strong&gt;twitter4j-spring-boot-starter&lt;/strong&gt; in our parent maven module &lt;strong&gt;spring-boot-starter-twitter4j&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;project&lt;/span&gt; &lt;span style=&#34;color: #7D9029&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot;&lt;/span&gt;
	&lt;span style=&#34;color: #7D9029&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;
	&lt;span style=&#34;color: #7D9029&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;http://maven.apache.org/POM/4.0.0&lt;/span&gt;
&lt;span style=&#34;color: #BA2121&#34;&gt;						http://maven.apache.org/maven-v4_0_0.xsd&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.sivalabs&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;twitter4j-spring-boot-starter&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;jar&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.sivalabs&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-twitter4j&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;


	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.sivalabs&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;twitter4j-spring-boot-autoconfigure&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${project.version}&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;

		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.twitter4j&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;twitter4j-core&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Note that in this maven module we are actually pulling in &lt;strong&gt;twitter4j-core&lt;/strong&gt; dependency.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We don&amp;#8217;t need to add any code in this module, but optionally we can specify what are the dependencies we are going to provide through this starter in
&lt;strong&gt;src/main/resources/META-INF/spring.provides&lt;/strong&gt; file as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;provides: twitter4j-core&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;That&amp;#8217;s all for our starter. Let us create a sample using our brand new starter &lt;strong&gt;twitter4j-spring-boot-starter&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_create_twitter4j_spring_boot_sample_sample_application&#34;&gt;Create twitter4j-spring-boot-sample sample application&lt;/h3&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Let us create a simple SpringBoot application and add our &lt;strong&gt;twitter4j-spring-boot-starter&lt;/strong&gt; dependency.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color: #BC7A00&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;project&lt;/span&gt; &lt;span style=&#34;color: #7D9029&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot;&lt;/span&gt;
	&lt;span style=&#34;color: #7D9029&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;
	&lt;span style=&#34;color: #7D9029&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color: #BA2121&#34;&gt;&amp;quot;http://maven.apache.org/POM/4.0.0&lt;/span&gt;
&lt;span style=&#34;color: #BA2121&#34;&gt;						http://maven.apache.org/maven-v4_0_0.xsd&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;modelVersion&amp;gt;&lt;/span&gt;4.0.0&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/modelVersion&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.sivalabs&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;twitter4j-spring-boot-sample&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;packaging&amp;gt;&lt;/span&gt;jar&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/packaging&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;parent&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-parent&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.3.2.RELEASE&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/parent&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;properties&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;project.build.sourceEncoding&amp;gt;&lt;/span&gt;UTF-8&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/project.build.sourceEncoding&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;java.version&amp;gt;&lt;/span&gt;1.8&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/java.version&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/properties&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;build&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;plugins&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;plugin&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
				&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-maven-plugin&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/plugin&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/plugins&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/build&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependencies&amp;gt;&lt;/span&gt;

		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;com.sivalabs&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;twitter4j-spring-boot-starter&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.0-SNAPSHOT&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-test&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/dependencies&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Create the entry-point class &lt;strong&gt;SpringbootTwitter4jDemoApplication&lt;/strong&gt; as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;package&lt;/span&gt; com&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;sivalabs&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;demo&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.boot.SpringApplication&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #AA22FF&#34;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;SpringbootTwitter4jDemoApplication&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;String&lt;span style=&#34;color: #666666&#34;&gt;[]&lt;/span&gt; args&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
		SpringApplication&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;run&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;SpringbootTwitter4jDemoApplication&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;,&lt;/span&gt; args&lt;span style=&#34;color: #666666&#34;&gt;);&lt;/span&gt;
	&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Create &lt;strong&gt;TweetService&lt;/strong&gt; as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;package&lt;/span&gt; com&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;sivalabs&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;demo&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;java.util.ArrayList&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;java.util.List&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.stereotype.Service&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;twitter4j.ResponseList&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;twitter4j.Status&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;twitter4j.Twitter&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;twitter4j.TwitterException&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #AA22FF&#34;&gt;@Service&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;TweetService&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;

	&lt;span style=&#34;color: #AA22FF&#34;&gt;@Autowired&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;private&lt;/span&gt; Twitter twitter&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; List&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;getLatestTweets&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(){&lt;/span&gt;
		List&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; tweets &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;new&lt;/span&gt; ArrayList&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
			ResponseList&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;Status&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; homeTimeline &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; twitter&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getHomeTimeline&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;();&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;Status status &lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt; homeTimeline&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
				tweets&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;status&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getText&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;());&lt;/span&gt;
			&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
		&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;TwitterException e&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
			&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;throw&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;RuntimeException&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;e&lt;span style=&#34;color: #666666&#34;&gt;);&lt;/span&gt;
		&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;return&lt;/span&gt; tweets&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
	&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now create a Test to verify our Twitter4j AutoConfigutation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Before that make sure you have set your twitter4j oauth configuration parameter to your actual values.
You can get them from &lt;a href=&#34;https://apps.twitter.com/&#34; class=&#34;bare&#34;&gt;https://apps.twitter.com/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;listingblock&#34;&gt;
&lt;div class=&#34;content&#34;&gt;
&lt;pre class=&#34;pygments highlight&#34;&gt;&lt;code data-lang=&#34;java&#34;&gt;&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;package&lt;/span&gt; com&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;sivalabs&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;demo&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;java.util.List&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.junit.Test&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.junit.runner.RunWith&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.boot.test.SpringApplicationConfiguration&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;org.springframework.test.context.junit4.SpringJUnit4ClassRunner&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;twitter4j.TwitterException&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color: #AA22FF&#34;&gt;@RunWith&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;SpringJUnit4ClassRunner&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #AA22FF&#34;&gt;@SpringApplicationConfiguration&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;SpringbootTwitter4jDemoApplication&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color: #0000FF; font-weight: bold&#34;&gt;SpringbootTwitter4jDemoApplicationTest&lt;/span&gt;  &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;


	&lt;span style=&#34;color: #AA22FF&#34;&gt;@Autowired&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;private&lt;/span&gt; TweetService tweetService&lt;span style=&#34;color: #666666&#34;&gt;;&lt;/span&gt;

	&lt;span style=&#34;color: #AA22FF&#34;&gt;@Test&lt;/span&gt;
	&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #B00040&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color: #0000FF&#34;&gt;testGetTweets&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;throws&lt;/span&gt; TwitterException &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
		List&lt;span style=&#34;color: #666666&#34;&gt;&amp;lt;&lt;/span&gt;String&lt;span style=&#34;color: #666666&#34;&gt;&amp;gt;&lt;/span&gt; tweets &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; tweetService&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;getLatestTweets&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;();&lt;/span&gt;
		&lt;span style=&#34;color: #008000; font-weight: bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;String tweet &lt;span style=&#34;color: #666666&#34;&gt;:&lt;/span&gt; tweets&lt;span style=&#34;color: #666666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
			System&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;err&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color: #7D9029&#34;&gt;println&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;(&lt;/span&gt;tweet&lt;span style=&#34;color: #666666&#34;&gt;);&lt;/span&gt;
		&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
	&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now you should be able to see the latest tweets on your console output.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find the code on GitHub &lt;a href=&#34;https://github.com/sivaprasadreddy/twitter4j-spring-boot-starter&#34; class=&#34;bare&#34;&gt;https://github.com/sivaprasadreddy/twitter4j-spring-boot-starter&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Welcome to my new blog</title>
      <link>http://sivalabs.github.io/welcome-to-my-new-blog</link>
      <pubDate>Sat, 23 Jan 2016 08:36:54 -0700</pubDate>
      
      <guid>http://sivalabs.github.io/welcome-to-my-new-blog</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;My name is Siva and by profession I am a Software Developer primarily working on Java platform.
I used to blog about the technology stuff that I learned at &lt;em&gt;www.sivalabs.in&lt;/em&gt;.
I wanted to move to Hugo blogging platform because of its rich features,
and here I am with my new blog &lt;a href=&#34;http://sivalabs.github.io&#34;&gt;http://sivalabs.github.io&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Going forward you can find various Java related things, my thoughts on technology/life and simple tips also.&lt;/p&gt;

&lt;p&gt;Stay tuned :-)&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;1 &lt;/span&gt;&lt;span style=&#34;color: #000080; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #000080; font-weight: bold&#34;&gt;class&lt;/span&gt; HelloWorld
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;2 &lt;/span&gt;{
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;3 &lt;/span&gt;    &lt;span style=&#34;color: #000080; font-weight: bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color: #000080; font-weight: bold&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color: #000080; font-weight: bold&#34;&gt;void&lt;/span&gt; main(String[] args)
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;4 &lt;/span&gt;    {
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;5 &lt;/span&gt;&lt;span style=&#34;background-color: #ffffcc&#34;&gt;      System.&lt;span style=&#34;color: #FF0000&#34;&gt;out&lt;/span&gt;.&lt;span style=&#34;color: #FF0000&#34;&gt;println&lt;/span&gt;(&lt;span style=&#34;color: #0000FF&#34;&gt;&amp;quot;Welcome to my new blog&amp;quot;&lt;/span&gt;);
&lt;/span&gt;&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;6 &lt;/span&gt;    }
&lt;span style=&#34;background-color: #f0f0f0; padding: 0 5px 0 5px&#34;&gt;7 &lt;/span&gt;}
&lt;/pre&gt;&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>My Development Environment Setup on Linux</title>
      <link>http://sivalabs.github.io/my-development-environment-setup-on-linux</link>
      <pubDate>Thu, 07 Jan 2016 10:00:00 +0530</pubDate>
      
      <guid>http://sivalabs.github.io/my-development-environment-setup-on-linux</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;As I mentioned in my previous post &lt;a href=&#34;http://sivalabs.github.io/thinking-of-moving-from-windows-to-linux/&#34;&gt;Thinking of moving from Windows to Linux?&lt;/a&gt;
I am moving from Windows to Linux. Setting up my development environment is a bit tedious because I have to hunt down the applications
and execute various commands to setup. So I thought of make a note of them in a post so that it will be easier for me next time.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am using &lt;strong&gt;Ubuntu/LinuxMint&lt;/strong&gt; system so I am using &lt;strong&gt;apt-get&lt;/strong&gt; to install, if you are using &lt;strong&gt;Fedora/CentOS&lt;/strong&gt; you can use &lt;strong&gt;yum/dnf&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;The very first thing I do after installing Linux is updating the system and in case I am working on VirtualBox VM installing VirtualBox Guest Additions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get update&lt;/code&gt;&lt;br&gt;
&lt;code&gt;sudo apt-get install virtualbox-guest-dkms virtualbox-guest-x11&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Setting up Java Development Environment&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Some Linux distros come with OpenJDK by default. You may want to remove &lt;strong&gt;OpenJDK&lt;/strong&gt; first and install &lt;strong&gt;Oracle JDK&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get purge openjdk-*&lt;/code&gt;&lt;br&gt;
&lt;code&gt;sudo add-apt-repository ppa:webupd8team/java&lt;/code&gt;&lt;br&gt;
&lt;code&gt;sudo apt-get update&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To install Java 7 &lt;code&gt;sudo apt-get install oracle-java7-installer&lt;/code&gt;&lt;br&gt;
To install Java 8 &lt;code&gt;sudo apt-get install oracle-java8-installer&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you want to set &lt;strong&gt;JAVA_HOME&lt;/strong&gt; environment variable for a particular user then you can add JAVA_HOME in &lt;strong&gt;~/.bash_profile&lt;/strong&gt;
or if you want to setup for all the users globally then you can add it to &lt;strong&gt;/etc/profile&lt;/strong&gt; file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; vi ~/.bash_profile&lt;/code&gt; or &lt;code&gt;vi /etc/profile&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Append the following to the file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;export JAVA_HOME=/usr/lib/jvm/java-8-oracle&lt;/code&gt;&lt;br&gt;
&lt;code&gt;export PATH=$PATH:$JAVA_HOME/bin&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Reload the configuration updates&lt;br&gt;
&lt;code&gt;&amp;gt; source ~/.bash_profile&lt;/code&gt; or &lt;code&gt;source /etc/profile&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After installing JDK you may want to download your favorite IDE from the following locations:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Eclipse &lt;a href=&#34;http://www.eclipse.org/downloads/&#34; class=&#34;bare&#34;&gt;http://www.eclipse.org/downloads/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;STS &lt;a href=&#34;https://spring.io/tools/sts/all&#34; class=&#34;bare&#34;&gt;https://spring.io/tools/sts/all&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JBoss Developer Studio &lt;a href=&#34;http://tools.jboss.org/downloads/devstudio/index.html&#34; class=&#34;bare&#34;&gt;http://tools.jboss.org/downloads/devstudio/index.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;NetbeansIDE &lt;a href=&#34;https://netbeans.org/downloads/&#34; class=&#34;bare&#34;&gt;https://netbeans.org/downloads/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Intellij IDEA &lt;a href=&#34;https://www.jetbrains.com/idea/download/&#34; class=&#34;bare&#34;&gt;https://www.jetbrains.com/idea/download/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Most of the times I work with either &lt;strong&gt;Tomcat&lt;/strong&gt; or &lt;strong&gt;JBoss/Wildfly&lt;/strong&gt; servers.&lt;br&gt;
You cand ownload them from the following locations:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Tomcat &lt;a href=&#34;https://tomcat.apache.org/download-80.cgi&#34; class=&#34;bare&#34;&gt;https://tomcat.apache.org/download-80.cgi&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wildfly &lt;a href=&#34;http://wildfly.org/downloads/&#34; class=&#34;bare&#34;&gt;http://wildfly.org/downloads/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;To install build tools like &lt;strong&gt;Ant&lt;/strong&gt; or &lt;strong&gt;Maven&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; sudo apt-get install ant&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; sudo apt-get install maven&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;We can install various softwares like &lt;strong&gt;Groovy&lt;/strong&gt;, &lt;strong&gt;Grails&lt;/strong&gt;, &lt;strong&gt;Gradle&lt;/strong&gt; etc you can use  &lt;a href=&#34;http://sdkman.io/&#34;&gt;&lt;strong&gt;SDKMan&lt;/strong&gt;&lt;/a&gt;
which was previously known as &lt;strong&gt;GVM&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; curl -s &lt;a href=&#34;http://get.sdkman.io&#34; class=&#34;bare&#34;&gt;http://get.sdkman.io&lt;/a&gt; | bash&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; source &#34;$HOME/.sdkman/bin/sdkman-init.sh&#34;&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; sdk version&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; sdk install groovy&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; sdk install grails&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; sdk install gradle&lt;/code&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Install MySQL server&lt;/strong&gt;
You can install MySQL server and MySQL Workbench from Ubuntu Software Center.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But if you prefer commandline installation&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; sudo apt-get install mysql-server&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; sudo apt-get install mysql-workbench&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Installing NodeJS&lt;/strong&gt;
Installing NodeJS become a little bit complicated because it is going through some changes(nodejs, nodejs-legacy, io.js etc).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can install latest NodeJS using following commands:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; sudo apt-get install curl&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; curl -sL &lt;a href=&#34;https://deb.nodesource.com/setup_0.12&#34; class=&#34;bare&#34;&gt;https://deb.nodesource.com/setup_0.12&lt;/a&gt; | sudo bash -&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; sudo apt-get install nodejs&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;For further details refer &lt;a href=&#34;https://github.com/nodejs/node-v0.x-archive/wiki/Installing-Node.js-via-package-manager&#34; class=&#34;bare&#34;&gt;https://github.com/nodejs/node-v0.x-archive/wiki/Installing-Node.js-via-package-manager&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Install yeoman and generators&lt;/strong&gt;
 &lt;a href=&#34;http://yeoman.io/&#34;&gt;Yeoman&lt;/a&gt; makes it easy to develop front-end applications by automating various tasks using bower, grunt or gulp.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Install yeoman&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;sudo npm install -g yo bower grunt-cli gulp&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Install various generators&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; sudo npm install -g generator-webapp&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; sudo npm install -g generator-angular&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; sudo npm install -g generator-jhipster&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; sudo npm install -g generator-meanjs&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; sudo npm install -g cordova ionic&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Installing Ruby and RubyOnRails&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You may be using &lt;strong&gt;Ruby&lt;/strong&gt; or tools that depends on Ruby like &lt;strong&gt;OpenShift&lt;/strong&gt; commandline tools, &lt;strong&gt;Jekyll&lt;/strong&gt; etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can find the very detailed instructions on how to install Ruby/RubyOnRails at &lt;a href=&#34;https://gorails.com/setup/ubuntu/15.04&#34; class=&#34;bare&#34;&gt;https://gorails.com/setup/ubuntu/15.04&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Just for the sake of quick reference I am repeating the steps here:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; sudo apt-get update&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; cd&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; git clone git://github.com/sstephenson/rbenv.git .rbenv&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; echo &#39;export PATH=&#34;$HOME/.rbenv/bin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; echo &#39;eval &#34;$(rbenv init -)&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; exec $SHELL&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; echo &#39;export PATH=&#34;$HOME/.rbenv/plugins/ruby-build/bin:$PATH&#34;&#39; &amp;gt;&amp;gt; ~/.bashrc&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; exec $SHELL&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; git clone &lt;a href=&#34;https://github.com/sstephenson/rbenv-gem-rehash.git&#34; class=&#34;bare&#34;&gt;https://github.com/sstephenson/rbenv-gem-rehash.git&lt;/a&gt; ~/.rbenv/plugins/rbenv-gem-rehash&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; rbenv install 2.2.3&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; rbenv global 2.2.3&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; ruby -v&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; echo &#34;gem: --no-ri --no-rdoc&#34; &amp;gt; ~/.gemrc&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; gem install bundler&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; gem install rails -v 4.2.4&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Installing Jekyll&lt;/strong&gt;
&lt;a href=&#34;https://jekyllrb.com&#34;&gt;Jekyll&lt;/a&gt; is a static site generator which you can use to generate your site and host it on github.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; gem install jekyll&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Test drive Jekyll&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; jekyll new myblog&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; cd myblog&lt;/code&gt;&lt;br&gt;
&lt;code&gt;&amp;gt; jekyll serve&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Hope these installation instructions helps!!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Note: All the images belong to their respective owners.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>CentOS 7 Installation on Oracle Virtualbox</title>
      <link>http://sivalabs.github.io/centos-7-installation-on-oracle-virtualbox</link>
      <pubDate>Thu, 07 Jan 2016 09:00:00 +0530</pubDate>
      
      <guid>http://sivalabs.github.io/centos-7-installation-on-oracle-virtualbox</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I wanted to explore CentOS 7 Linux, so I installed it on my Oracle VirtualBox.
Installation went smoothly ,but I had a hard time to install Virtualbox Guest Additions to get full screen.
I thought of sharing the steps I performed so that it may be helpful for others.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After installing CentOS 7, before installing Virtualbox Guest Additions first thing we need to do is update system.
&lt;strong&gt;sudo yum update&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;When I run this command I got the error &#34;&lt;strong&gt;cannot find a valid baseurl for repo&lt;/strong&gt;&#34;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After googling for sometime I figured that &lt;strong&gt;the network card is not enabled by default&lt;/strong&gt; and I need to enable
the baseUrl in some configuration file.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;1) Edit &lt;strong&gt;&lt;em&gt;/etc/sysconfig/network-scripts/ifcfg-eth0&lt;/em&gt;&lt;/strong&gt; file and change &lt;strong&gt;ONBOOT=no&lt;/strong&gt; to &lt;strong&gt;ONBOOT=yes&lt;/strong&gt;&lt;br&gt;
Instead of &lt;strong&gt;eth0&lt;/strong&gt; you may have a different file name. To know the right one, run the command &lt;strong&gt;ifconfig -a&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;2) Edited the file &lt;strong&gt;&lt;em&gt;/etc/yum.repos.d/CentOS-Base.repo&lt;/em&gt;&lt;/strong&gt; and uncomment &lt;strong&gt;baseurl&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;[base]&lt;br&gt;
name=CentOS-$releasever - Base&lt;br&gt;
mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;amp;arch=$basearch&amp;amp;repo=os &lt;br&gt;
&lt;strong&gt;&lt;em&gt;baseurl=http://mirror.centos.org/centos/$releasever/os/$basearch/&lt;/em&gt;&lt;/strong&gt; &lt;br&gt;
gpgcheck=1 &lt;br&gt;
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Source: &lt;a href=&#34;http://unix.stackexchange.com/questions/22924/how-can-i-fix-cannot-find-a-valid-baseurl-for-repo-errors-on-centos&#34; class=&#34;bare&#34;&gt;http://unix.stackexchange.com/questions/22924/how-can-i-fix-cannot-find-a-valid-baseurl-for-repo-errors-on-centos&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;3) Install VirtualBox Guest Additions&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;sudo yum update&lt;/code&gt; &lt;br&gt;
&lt;code&gt;sudo yum groupinstall &#34;Development Tools&#34;&lt;/code&gt;&lt;br&gt;
&lt;code&gt;sudo yum install kernel-devel&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In Oracle Virtual Box menu, &lt;strong&gt;Devices &amp;#8594; Insert Guest Additions CD Image &amp;#8594; Run&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Source: &lt;a href=&#34;http://itekblog.com/centos-7-virtualbox-guest-additions-installation-centos-minimal/&#34; class=&#34;bare&#34;&gt;http://itekblog.com/centos-7-virtualbox-guest-additions-installation-centos-minimal/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How to SSH into VirtualBox Linux OS?</title>
      <link>http://sivalabs.github.io/how-to-ssh-into-virtualbox-linux-os</link>
      <pubDate>Thu, 07 Jan 2016 09:00:00 +0530</pubDate>
      
      <guid>http://sivalabs.github.io/how-to-ssh-into-virtualbox-linux-os</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;While learning some of the Linux commands we may want to use SSH commands to login into a remote Linux system
and we may not have a dedicated Linux system to play with.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;In this post I will explain how I am using my Linux OS installed on VirtualBox to SSH from Windows OS.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Install &lt;strong&gt;openssh-server&lt;/strong&gt; on Linux OS in VirtualBox&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install openssh-server&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;On some Linux distros (ex: Fedora) the openssh server won&amp;#8217;t start automatically.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can enable it to start automatically using the following command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;systemctl enable sshd.service&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now you can restart the VM or start the service in the current session itself using&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;systemctl start sshd.service&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Shutdown your Linux VM if it is already running.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Select Linux VM in Virtualbox and go to &lt;strong&gt;Settings&lt;/strong&gt; &amp;#8594; &lt;strong&gt;Network&lt;/strong&gt;.&lt;br&gt;
In &lt;strong&gt;Adapter 1&lt;/strong&gt; tab &lt;strong&gt;Enable Network Adapter&lt;/strong&gt; is selected.&lt;br&gt;
Go to &lt;strong&gt;Adapter 2&lt;/strong&gt; tab and check &lt;strong&gt;Enable Network Adapter&lt;/strong&gt;.&lt;br&gt;
For &lt;strong&gt;Attached To&lt;/strong&gt; option select &lt;strong&gt;Host-only Adapter&lt;/strong&gt; and click OK.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Start your VirtualBox Linux VM
Open Terminal and run &lt;strong&gt;ifconfig&lt;/strong&gt; command&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;eth1 Link encap:Ethernet HWaddr 08:00:27:7e:ea:89&lt;br&gt;
inet addr:&lt;strong&gt;192.168.56.101&lt;/strong&gt; Bcast:192.168.56.255 Mask:255.255.255.0&lt;br&gt;
inet6 addr: fe80::a00:27ff:fe7e:ea89/64 Scope:Link&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now from you Windows OS you can use Putty to connect to your Linux OS usinng SSH as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;code&gt;ssh username@192.168.56.101&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Enjoy :-)&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>My Linux Journey Begins</title>
      <link>http://sivalabs.github.io/my-linux-journey-begins</link>
      <pubDate>Thu, 07 Jan 2016 08:00:00 +0530</pubDate>
      
      <guid>http://sivalabs.github.io/my-linux-journey-begins</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Like many people I started working with computers on Windows XP operating system. Even after starting my career as a
Java developer I have been working on Windows for all my development activities.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Initially I didn&amp;#8217;t get a chance(need) to work on Unix/Linux because we didn&amp;#8217;t have access to any of production systems
which are using Linux. After few years we got a new client for whom we need to do deployment also in QA/UAT environments
which are all Linux based. Then one guy who was doing all these deployment activities shared few documents, shell scripts
with all the instructions regarding how to deploy the apps, stop/start the containers etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;My very first expressions is &#34;Whaaaat?? you do all these deployment activities using these cryptic commands running in this
black terminal??? No GUI??&#34;. They smiled and said &#34;No, in Linux you have to do all these using these commands only.&#34;
Ok, fine, no problem. I get familiar with few commands like copy, rm, ps, kill, chmod etc which are just enough
to get the things done. I never bothered to learn Linux really.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;But recently I got to work on Linux more and more, so I thought it is good to get some good hands on experience with Linux.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After little bit of googling I found Ubuntu and LinuxMint are good desktop linux distros for Linux newbies like me.
But before settling with one Linux distro I tried the following Linux distros on Oracle Virtualbox.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Ubuntu&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;LinuxMint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fedora&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CentOS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OpenSUSE&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bodhi&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ElementaryOS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PeachOSI&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pinguy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Zorin&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am sure there are plenty of other linux desktop distros to explore. But among the above mentioned distros I settled with
LinuxMint. You can find lot of blogs to show how to install Linux distro in Virtualbox and also how to install in
dual boot mode.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Following links were very helpful for me:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://itsfoss.com/guide-install-linux-mint-16-dual-boot-windows/&#34; class=&#34;bare&#34;&gt;http://itsfoss.com/guide-install-linux-mint-16-dual-boot-windows/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://itsfoss.com/install-ubuntu-1404-dual-boot-mode-windows-8-81-uefi/&#34; class=&#34;bare&#34;&gt;http://itsfoss.com/install-ubuntu-1404-dual-boot-mode-windows-8-81-uefi/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Now, I would like to note down my learning about Linux here for quick reference.
Expect some small Linux tips on this blog going forward :-)&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Thinking of moving from Windows to Linux?</title>
      <link>http://sivalabs.github.io/thinking-of-moving-from-windows-to-linux</link>
      <pubDate>Thu, 07 Jan 2016 07:00:00 +0530</pubDate>
      
      <guid>http://sivalabs.github.io/thinking-of-moving-from-windows-to-linux</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I have been using Windows operating system from the beginning. When I first started using computer Windows XP was
the latest operating system and it was amazing. After few years I started my career as a Java developer
and in my office also I have been using Windows only.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;After few years Windows Vista got released and I suffered with it for few months and then Microsoft released Windows 7
which is the best Windows operating system IMO. And then they released Windows 8 which I don&amp;#8217;t like much.
Recently they released Windows 10 and I have upgraded from Windows 8.1 to Windows 10.
Windows 10 is certainly better than Windows 8 but it still sucks compared to Windows 7.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I think the main reason for the popularity of Windows operating systems is the familiarity of the same look
and feel of their all operating systems and they changed it (in a horrible way).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Few years ago I got to learn a bit about Linux in order to deploy my application on remote deployment servers
and I used to get it done using few comments and I never really bothered to learn Linux.
A year ago one of my friend suggested to look at Ubuntu which is a Linux OS with a nice Desktop Environment (DE).
I installed Ubuntu on VirtualBox and played with it couple of days and left it because it was too slow on my VirtualBox.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_why_i_want_to_learn_and_use_linux_as_my_desktop_os&#34;&gt;Why I want to learn and use Linux as my desktop OS?&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;These days I am spending good amount of time deploying apps on remote Linux servers, so I need to learn more about Linux.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I don&amp;#8217;t like Windows 8/8.1/10 OS mobile style desktop UI. I want my good old familiar Windows 7 style GUI.
I came to know there are some Linux distros which looks like Windows 7.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I am really bored working on same Java technologies like Spring, JPA, JavaEE etc for almost 8 years
and I wanted to tinker with something new and interesting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is free, no viruses and customizability etc.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Once I decided to use Linux as my desktop OS, I started looking for the better Desktop Linux distros for beginners like me
and I found that following are better among the hundreds of Linux distros.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.ubuntu.com&#34;&gt;Ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.linuxmint.com&#34;&gt;Linux Mint&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://getfedora.org&#34;&gt;Fedora&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.centos.org&#34;&gt;CentOS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://elementary.io&#34;&gt;ElementaryOS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://pinguyos.com&#34;&gt;PinguyOS&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.opensuse.org&#34;&gt;OpenSUSE&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://zorinos.com&#34;&gt;Zorin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;and many more..&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I have installed all of them on my VirtualBox to see which one is best. After trying all of them I settled on Linux Mint.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt; is the most popular desktop Linux distro but I didn&amp;#8217;t like its Unity Desktop Environment very much.
But there are various other variation of Desktop Environments like GNOME, MATE which looks better, IMHO.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;Fedora&lt;/strong&gt; is Redhat&amp;#8217;s play ground for Redhat Enterprise Linux (RHEL) and &lt;strong&gt;CentOS&lt;/strong&gt; is a kind of open source version of RHEL
built by community. Both Fedora and CentOS looks good but they are ass friendly as Ubuntu based distros for beginners.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;ElementaryOS&lt;/strong&gt; is the most beautiful OS among all the distros I have tried. It is a very light weight distro
with fantastic look and minimal applications installed. If you are a casual user who uses your computer just for
internet browsing, watching videos, play music, write some documentation then it is the best choice.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;PinguyOS&lt;/strong&gt;, which is a Ubuntu derivative, is a perfect distor for those who want everything to be pre-installed.
It has most of the commonly used applications installed already. But it is too heavy and slow also.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I have tried &lt;strong&gt;OpenSUSE&lt;/strong&gt;, &lt;strong&gt;Zorin&lt;/strong&gt;, &lt;strong&gt;Deepin&lt;/strong&gt;, &lt;strong&gt;Bodhi&lt;/strong&gt;, &lt;strong&gt;Manjaro&lt;/strong&gt; etc also and they are good.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;And finally, my favorite is &lt;strong&gt;Linux Mint&lt;/strong&gt;. Linux Mint is a Ubuntu derivative but with its own Desktop Environment
called Cinnamon. Linux Mint also comes with other Desktop Environments like MATE, XFCE etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Linux Mint Cinnamon GUI looks almost like Windows 7 and the kind of customizations it provides is awesome.
I liked Linux Mint very much among all the distros I tried and finally installed it on my laptop using it as my primary OS.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_don_t_i_need_windows_os_anymore&#34;&gt;Don&amp;#8217;t I need Windows OS anymore?&lt;/h3&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Even though there are plenty of Linux Desktop Environments with different GUI styles with good looks,
I feel they are not even close to Windows 7 GUI.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Linux distros comes with lot of free applications and you can find thousands of free apps on the app stores,
but there are few applications that runs only on Windows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Microsoft Office&lt;/strong&gt;: I know about LibreOffice and it is good, but honestly I feel it is not going to be a replacement
for MS Office.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No official &lt;strong&gt;OneDrive&lt;/strong&gt; client, no &lt;strong&gt;RSA Secure Token ID&lt;/strong&gt; support, no &lt;strong&gt;Photoshop&lt;/strong&gt;, gaming support is not as good as
Windows and few more things like that.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;I am not a Photoshop user, I am not a gaming person and I am not really heavy user of MS Office.
So I can live with some limitations.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;By using Linux OS I don&amp;#8217;t have to worry too much about viruses (I know Linux also can get viruses but not as much as Windows),
thousands of free apps and it is free :-)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&lt;strong&gt;The best part of using Linux OS is I am understanding little bit more about how operating systems work.&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>http://sivalabs.github.io/contact</link>
      <pubDate>Fri, 01 Jan 2016 19:20:04 -0700</pubDate>
      
      <guid>http://sivalabs.github.io/contact</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Hi,
I am a Software developer working on Java platform since 2005.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;My primary skills include:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Java&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spring&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JavaEE 7&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MyBatis&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSF/PrimeFaces&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AngularJS&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;If you are looking for Freelancing Java developers please contact me at &lt;strong&gt;sivaprasadreddy.k@gmail.com&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;You can also reach me at&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Gmail: &lt;a href=&#34;mailto:sivaprasadreddy.k@gmail.com&#34;&gt;sivaprasadreddy.k@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Twitter: &lt;a href=&#34;https://twitter.com/sivalabs&#34; class=&#34;bare&#34;&gt;https://twitter.com/sivalabs&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GitHub: &lt;a href=&#34;https://github.com/sivaprasadreddy&#34; class=&#34;bare&#34;&gt;https://github.com/sivaprasadreddy&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Core Java Training</title>
      <link>http://sivalabs.github.io/core-java</link>
      <pubDate>Fri, 01 Jan 2016 19:20:04 -0700</pubDate>
      
      <guid>http://sivalabs.github.io/core-java</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;This Core Java training aims at the beginners who want to learn Java programming starting from scratch.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please reach me at &lt;a href=&#34;mailto:sivaprasadreddy.k@gmail.com&#34;&gt;sivaprasadreddy.k@gmail.com&lt;/a&gt; for further details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect2&#34;&gt;
&lt;h3 id=&#34;_core_java_course_topics&#34;&gt;Core Java Course Topics:&lt;/h3&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Java Programming Fundamentals&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introduction to Java Programming&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OOPS concepts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What are JDK, JVM, JRE?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Java Basics&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;DataTypes, Operators, Statements&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Classes, Interfaces, Objects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Abstract, Static, final etc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;public, private, protected modifiers, Access specifiers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inheritance&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;package, import&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enum, Annotations&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Control Structures&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;if-else, while, for, switch etc&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Exception Handling&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;try-catch-finally&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;checked-vs-unchecked exceptions&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Java Collections framework&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;List, Set, Map etc&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sorting, Filtering&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Searching&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Java Generics&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Parameterized Collections&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Java lang/util packages, File I/O&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;String, StringTokenizer, Date&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Regular Expressions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;File Reader/Writer, Input/Output Streams etc&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Multi Threading&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Thread, Runnable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Synchronization&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Database Programming with JDBC&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Connecting to MySQL Database&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Performing Read, Write, Update, Delete operations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Transaction Management&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Introduction to Java 8 features&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Lambdas&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Streams&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DateTime API&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Servlets&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introduction to Web application development and Servlets&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Servlet Life Cycle&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HttpServlet Request, Response, Session, ServletContext&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deployment descriptor web.xml&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Servlet Listeners and Filters&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;JSP&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introduction to MVC and JSP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSP implicit Objects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scriptlets&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSTL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Custom Tags&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please reach me at &lt;a href=&#34;mailto:sivaprasadreddy.k@gmail.com&#34;&gt;sivaprasadreddy.k@gmail.com&lt;/a&gt; for further details.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>JavaEE Training</title>
      <link>http://sivalabs.github.io/java-ee</link>
      <pubDate>Fri, 01 Jan 2016 19:20:04 -0700</pubDate>
      
      <guid>http://sivalabs.github.io/java-ee</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please reach me at &lt;a href=&#34;mailto:sivaprasadreddy.k@gmail.com&#34;&gt;sivaprasadreddy.k@gmail.com&lt;/a&gt; for further details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_java_ee7_training_course_topics&#34;&gt;Java EE7 Training Course Topics:&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Overview of JavaEE&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introduction to JavaEE Platform&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Overview on Key Specifications&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;JPA&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introduction to ORM concepts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Entity modeling&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Entity Relationships&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EntityManagerFactory, EntityManager, PersistenceContext&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Criteria Queries, JPQL, Named Queries, Native Queries&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Transaction Management&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;EJB&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introduction to EJB&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Types of EJBs: Stateless, Stateful, MessageDriven, Singleton&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Life Cycle of EJBs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Timers&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Transaction Management&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;CDI&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Dependency Injection&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bean Discovery Modes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Injection Points, Qualifiers, Alternatives&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Producer, Disposer, LifeCycle callbacks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interceptors, Decorators&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bean Scopes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stereotypes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Events&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Bean Validation&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introduction to Bean Validation API&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Built-in Constraints&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creating Custom Constraints&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Validation Groups&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;JSF&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introduction to Component Oriented UI development using JSF&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JSF Request Life Cycle&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Standard UI components, JSF Ajax features&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Converters, Validations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ManagedBeans, Scopes, Navigation&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;RESTful WebServices(JAX-RS)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introduction to REST concepts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mapping REST operations to HTTP methods&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Client API&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Filters and Interceptors&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mapping Exceptions&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SOAP WebServices(JAX-WS)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introduction to JAX-WS, WSDL&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Developing SOAP web services&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generating WebServices Client&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;JMS&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introduction Asynchronous processing using JMS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Queues, Topics&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Types of JMS Messages&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sending and receiving messages&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;JSON Processing&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Object Model API to convert Object to JSON and vice-versa&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Streaming API&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Concurrency Utils&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Managed Threads&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Asynchronous Tasks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Schedule Tasks&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;WebSockets&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Overview of WebSockets&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Server Endpoint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Client Endpoint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;JavaScript WebSocket Client&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Batch Processing&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Chunk-Oriented Processing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Batchlet Processing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Listeners&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Job Sequence&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please reach me at &lt;a href=&#34;mailto:sivaprasadreddy.k@gmail.com&#34;&gt;sivaprasadreddy.k@gmail.com&lt;/a&gt; for further details.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>My Books</title>
      <link>http://sivalabs.github.io/mybooks</link>
      <pubDate>Fri, 01 Jan 2016 19:20:04 -0700</pubDate>
      
      <guid>http://sivalabs.github.io/mybooks</guid>
      <description>&lt;div class=&#34;sect3&#34;&gt;
&lt;h4 id=&#34;_i_am_the_author_of_the_following_books&#34;&gt;I am the author of the following books.&lt;/h4&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&amp;#160;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;title&#34;&gt;&lt;strong&gt;Java Persistence with MyBatis 3&lt;/strong&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://www.packtpub.com/application-development/java-persistence-mybatis-3&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://sivalabs.github.io/images/books/MyBatis.jpg&#34; alt=&#34;MyBatis&#34; width=&#34;200&#34; height=&#34;240&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;&amp;#160;&amp;#160;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;div class=&#34;title&#34;&gt;&lt;strong&gt;PrimeFaces Beginners Guide&lt;/strong&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class=&#34;image&#34;&gt;&lt;a class=&#34;image&#34; href=&#34;https://www.packtpub.com/web-development/primefaces-beginners-guide&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;http://sivalabs.github.io/images/books/PFBG.jpg&#34; alt=&#34;PrimeFaces&#34; width=&#34;200&#34; height=&#34;240&#34;&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Spring Training</title>
      <link>http://sivalabs.github.io/spring</link>
      <pubDate>Fri, 01 Jan 2016 19:20:04 -0700</pubDate>
      
      <guid>http://sivalabs.github.io/spring</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please reach me at &lt;a href=&#34;mailto:sivaprasadreddy.k@gmail.com&#34;&gt;sivaprasadreddy.k@gmail.com&lt;/a&gt; for further details.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;sect1&#34;&gt;
&lt;h2 id=&#34;_spring_training_course_topics&#34;&gt;Spring Training Course Topics:&lt;/h2&gt;
&lt;div class=&#34;sectionbody&#34;&gt;
&lt;div class=&#34;olist arabic&#34;&gt;
&lt;ol class=&#34;arabic&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Introduction to Spring Framework&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Spring Framework Overview&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Introducing Inversion Of Control (IOC)/Dependency Injection(DI)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Why do we need Spring framework?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spring Vs JavaEE7&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spring Portfolio Projects (Spring Security, Spring Data, Spring Integration, Spring Batch etc)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Getting Started with Spring&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Crash course on Maven&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creating HelloWorld Spring application using Eclipse/Netbean &amp;amp; Maven&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Testing HelloWorld Spring application using JUnit&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Dependency Injection using Spring&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Configuring beans using XML&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using Setter, Constructor injection&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Injecting Primitives, Enums, Collections, Properties&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AutoWiring Dependencies&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bean Scopes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Life Cycle of Spring Bean&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuring Beans using Annotations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Classpath Scanning for Spring Beans&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuring Beans using JavaConfig&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Advanced Dependency Injection&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Defining beans using multiple XMLs/JavaConfig Classes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Loading Properties using PropertyPlaceholderConfigurer, PropertyOverrideConfigurer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Internationalization using MessageSource&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Customizing beans using a BeanPostProcessor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Customizing configuration metadata with a BeanFactoryPostProcessor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Environment and Profiles&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spring Expression Language (SpEL)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Event Handling using Spring&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Introducing Spring AOP&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;What is AOP?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Practical usages of AOP&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Introducing AOP terms: Pointcut, JoinPoint, Aspect, Advice, Weaving&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Types of Advices&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuring Spring Aspects using XML/Annotations&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data Access using Spring JDBC&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Data Access using JDBC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pain points of using JDBC directly&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spring JDBC Template&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Performing CRUD operations using JdbcTemplate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Batch operations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Embedded Database Support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Transaction Management&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Programmatic Transaction Management&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Declarative Transaction Management using XML and Annotation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Transaction propagation types&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data Access using Spring ORM using JPA/Hibernate&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introducing ORMs and JPA/Hibernate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How Spring ORM simplifies working with ORMs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuring JPA/Hibernate beans using XML and Annotations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Performing CRUD operations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Transaction Management&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Introducing Spring Data JPA&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Developing Web applications using SpringMVC&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introducing SpringMVC features&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuring DispatcherServlet using web.xml and Java based configuration&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Web Request Life Cycle&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creating Controllers using Annotations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;RequestMapping and Parameter Binding&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Customizing WebDataBinder initialization&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Assisting Controllers with the @ControllerAdvice annotation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multipart FileUploading&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Intercepting requests with a HandlerInterceptor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Handling exceptions HandlerExceptionResolver, @ExceptionHandler&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creating JSP views using Spring Form Taglibs&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Building RESTful Web Services using SpringMVC&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introducing RESTful WebServices&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SpringMVC support for building RESTful WebServices&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mapping the request body with the @RequestBody annotation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mapping the response body with the @ResponseBody annotation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Creating REST Controllers with the @RestController annotation&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using HttpEntity&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consuming RESTful services using RestTemplate&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Spring Security&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;ulist&#34;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Introduction to Spring Security features&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Configuring SpringSecurity using XML and JavaConfig&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Custom Login form and Logout&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jdbc based Authentication Provider&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Role based View rendering using Spring Security Taglib&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Please reach me at &lt;a href=&#34;mailto:sivaprasadreddy.k@gmail.com&#34;&gt;sivaprasadreddy.k@gmail.com&lt;/a&gt; for further details.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Trainings</title>
      <link>http://sivalabs.github.io/trainings</link>
      <pubDate>Fri, 01 Jan 2016 19:20:04 -0700</pubDate>
      
      <guid>http://sivalabs.github.io/trainings</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;
&lt;p&gt;Trainings&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>