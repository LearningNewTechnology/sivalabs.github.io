<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jsf on SivaLabs</title>
    <link>http://sivalabs.github.io/categories/jsf/</link>
    <description>Recent content in Jsf on SivaLabs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Nov 2013 09:32:00 +0000</lastBuildDate>
    <atom:link href="http://sivalabs.github.io/categories/jsf/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PrimeFaces Beginner&#39;s Guide book published</title>
      <link>http://sivalabs.github.io/post/2013/primefaces-beginners-guide-book-published/</link>
      <pubDate>Thu, 28 Nov 2013 09:32:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2013/primefaces-beginners-guide-book-published/</guid>
      <description>&lt;p&gt;I am glad to announce that my second book PrimeFaces Beginner&amp;rsquo;s Guide is published.&lt;/p&gt;

&lt;p&gt;As many of us know PrimeFaces is leading JSF component library for JSF based web applications. This PrimeFaces Beginner&amp;rsquo;s Guide book targets the Java developers with basic knowledge on JSF and jQuery and covers most of the commonly used PrimeFaces components.&lt;/p&gt;

&lt;blockquote&gt;Good news is that PrimeFaces Beginner&#39;s Guide book covers the latest **PrimeFaces 4.0** version features such as **Client Side Validations (CSV) framework**, **Dialog Framework**, **Search Expressions**, **Sticky Component** and many other enhancement as well.&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;http://www.packtpub.com/primefaces-beginners-guide/book&#34;&gt;&lt;img src=&#34;http://www.packtpub.com/sites/default/files/0698OS.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The book contains the following 13 chapters covering various PrimeFaces components:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter 1&lt;/strong&gt;, &lt;strong&gt;Introduction to PrimeFaces&lt;/strong&gt;, introduces PrimeFaces, along with details on how to install and configure it by creating a simple Hello World application. This chapter also provides an overview of various PrimeFaces features, such as AJAX support, Partial Page Rendering (PPR), and explains Poll and Remote Command components, which come in very handy at times.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter 2&lt;/strong&gt;, &lt;strong&gt;Introducing Sample Application TechBuzz&lt;/strong&gt;, provides an overview of the sample application TechBuzz, which we are going to build incrementally throughout the book, and explains what PrimeFaces components will be used for various requirements. This chapter also provides an overall picture on setting up the development environment with all the required software, such as JDK, IDE, database, and so on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter 3&lt;/strong&gt;, &lt;strong&gt;Using PrimeFaces Common Utility Components&lt;/strong&gt;, introduces various ommonly used utility components provided by PrimeFaces, such as Growl, Tooltip, BlockUI, NotificationBar, and so on. This chapter also explains new features introduced in PrimeFaces 4.0, such as Fragment, Sticky, Search Expression Framework, and Dialog Framework.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter 4&lt;/strong&gt;, &lt;strong&gt;Introducing PrimeFaces Client Side Validation Framework&lt;/strong&gt;, covers PrimeFaces Client Side Validations (CSV) Framework in detail, explaining how to configure and enable client-side validations, integrating the CSV framework with the Bean Validation API, and extending the CSV framework to support custom JSF Validators/-Converters and custom Bean Validation Annotations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter 5&lt;/strong&gt;, &lt;strong&gt;Introducing Text Input Components&lt;/strong&gt;, covers various input text components such as InputText, InputTextArea, Password, InputMask, Inplace Editor, and Rich Text Editor. This chapter also explains the AutoComplete component in detail, explaining how to use it with POJO support, multiple item selection, and so on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter 6&lt;/strong&gt;, &lt;strong&gt;Working with Selection Input Components&lt;/strong&gt;, covers several PrimeFaces selection components, including SelectOneMenu, SelectManyMenu, SelectOneRadio, SelectManyCheckbox, PickList, Multi SelectListbox, and so on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter 7&lt;/strong&gt;, &lt;strong&gt;Introducing Advanced Input Components&lt;/strong&gt;, explains how to work with advanced input components, such as Calendar, Rating, Spinner, and Slider. Readers will also learn about uploading and downloading files using FileUpload and FileDownload components. This chapter also explains how to prevent span and bots using CAPTCHA validation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter 8&lt;/strong&gt;, &lt;strong&gt;Working with Data Components&lt;/strong&gt;, covers various data components, such as DataList, DataGrid, and explains DataTable features in depth, including pagination, sorting, filtering, row/cell editing, and so on. Readers will also learn about exporting DataTable data to Excel, PDF, and XML using the DataExporter component.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter 9&lt;/strong&gt;, &lt;strong&gt;Introducing Advanced Data Visualization Components&lt;/strong&gt;, introduces advanced data visualization components, such as Carousel, TagCloud, and Schedule. Readers will also learn about displaying data in a Tree structure using Tree and TreeTable components.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter 10&lt;/strong&gt;, &lt;strong&gt;Working with Layout Components&lt;/strong&gt;, explains how to create simple and complex layouts using Panel, PanelGrid, AccordionPanel, TabView, and Layout components, and describes various customization options. This chapter also covers creating workflow-style forms using the Wizard component and Portal-like Layouts using the Dashboard component.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter 11&lt;/strong&gt;, &lt;strong&gt;Introducing Navigation Components&lt;/strong&gt;, explains creating different styles of menus using various navigation components, such as Menu, SlideMenu, TieredMenu, Menubar, MegaMenu, TabMenu, and Breadcrumb.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter 12&lt;/strong&gt;,** Drawing Charts**, covers how to visualize data in a graphical format using a variety of chart formats, such as Line, Bar, Pie, and Donut charts. This chapter also introduces how to render charts created by the JFreeChart API.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chapter 13&lt;/strong&gt;, &lt;strong&gt;Using PrimeFaces Themes&lt;/strong&gt;, introduces how to use built-in themes provided by PrimeFaces and how to create custom themes using the online ThemeRoller tool. Readers will also learn about how to dynamically change themes using the ThemeSwitcher component. This chapter also gives a brief overview of various PrimeFaces sibling projects, such as PrimeFaces Extensions, PrimeUI, PrimeFaces Mobile, and PrimeFaces Push.&lt;/p&gt;

&lt;p&gt;The book contains loads of code examples along with decent explanation so that reader will get hands-on experience on most of the commonly used components.&lt;/p&gt;

&lt;p&gt;I would like to thank Packt Publishers for giving me an opportunity to write &lt;strong&gt;PrimeFaces Beginners Guide&lt;/strong&gt; book. Especially I would like to thank Joanne Fitzpatrick, Kranti Berde, Ritika Dewani for their continuous support throughout writing process.&lt;/p&gt;

&lt;p&gt;Also I would like to thank the reviewers &lt;strong&gt;Thomas Andraschko&lt;/strong&gt;, &lt;strong&gt;Mauricio Fenoglio&lt;/strong&gt;, &lt;strong&gt;Sudheer Jonna&lt;/strong&gt; and &lt;strong&gt;Nilesh Namdeo&lt;/strong&gt; Mali for their great support in catching up mistakes/typos and provided lot of ideas for improving the quality of content. In fact I learned a lot from the reviewers comments :-)&lt;/p&gt;

&lt;p&gt;I would like to say special thanks to **Çağatay Çivici **(I consider his name as synonym for PASSION) for providing such a great framework to Java community.&lt;/p&gt;

&lt;p&gt;I hope readers will enjoy reading this book :-)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PrimeFaces3 Tutorial : Form Validation Using BeanValidation API(JSR-303)</title>
      <link>http://sivalabs.github.io/post/2012/primefaces3-tutorial-form-validation-using-beanvalidation-apijsr-303/</link>
      <pubDate>Thu, 02 Feb 2012 04:40:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2012/primefaces3-tutorial-form-validation-using-beanvalidation-apijsr-303/</guid>
      <description>&lt;p&gt;JSF2 has in-built support for form validations using Bean Validation API(JSR-303).&lt;br /&gt;
In my previous article &lt;a href=&#34;http://sivalabs.blogspot.in/2012/01/primefaces-3-tutorial-introduction-form.html&#34;&gt;PrimeFaces 3 Tutorial : Introduction &amp;amp; Form Validation &lt;/a&gt;, I have explained how to validate forms using JSF tags inside JSF xhtml pages.&lt;br /&gt;
Now Let us see how we can validate the forms using HibernateValidator which is reference implementation of JSR-303.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Integrating JSR-303 with JSF2 doesn&amp;rsquo;t have anything to do with PrimeFaces 3.&lt;br /&gt;
But I am planning to write a series of articles on PrimeFaces and JSR-303 integration is a part of it.&lt;br /&gt;
Please bear with me. :-)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#1:&lt;/strong&gt; Add hibernate-validator dependency in pom.xml.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;groupId&amp;gt;javax.validation&amp;lt;/groupId&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;artifactId&amp;gt;validation-api&amp;lt;/artifactId&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;version&amp;gt;1.0.0.GA&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;groupId&amp;gt;org.hibernate&amp;lt;/groupId&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;artifactId&amp;gt;hibernate-validator&amp;lt;/artifactId&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;version&amp;gt;4.0.0.GA&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here actually we don&amp;rsquo;t need to specify validation-api.jar dependency explicitely. hibernate-validator.jar dependency will pull the validation-api.jar as its dependency.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#2:&lt;/strong&gt;&lt;br /&gt;
Now let us specify the validation constraints for our Registration Form using Annotations on RegistrationForm.java bean.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.pfdemo.mb.ui;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.ArrayList;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Date;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.List;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class RegistrationForm&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private Integer userId;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @NotEmpty(message=&amp;quot;UserName is required&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Size(min=5, max=15, message=&amp;quot;UsesrName should be of length from 5 to 15 chars&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private String userName;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @NotEmpty(message=&amp;quot;Password is required&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Size(min=5, max=15, message=&amp;quot;UsesrName should be of length from 5 to 15 chars&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private String password;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @NotEmpty(message=&amp;quot;FirstName is required&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Size(min=5, max=15, message=&amp;quot;UsesrName should be of length from 5 to 15 chars&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private String firstName;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private String lastName;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Pattern(regexp=&amp;quot;[a-zA-Z0-9]+@[a-zA-Z]+.[a-zA-Z]{2,3}&amp;quot;, message=&amp;quot;Invalid EmailId&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private String email;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private String phone;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private Date dob;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private String gender;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private List&amp;lt;String&amp;gt; interests = new ArrayList&amp;lt;String&amp;gt;();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private boolean subscribeToNewsLetter;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; //setters/getters&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Step#3:&lt;/strong&gt;&lt;br /&gt;
Now you don&amp;rsquo;t need to mention about validation constrains in JSF xhtml pages anymore. And you don&amp;rsquo;t need to configure anything explicitly to tell JSF to validate RegistrationForm.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Transitional//EN&amp;quot; &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;quot;&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;html xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      xmlns:h=&amp;quot;http://java.sun.com/jsf/html&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      xmlns:f=&amp;quot;http://java.sun.com/jsf/core&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      xmlns:ui=&amp;quot;http://java.sun.com/jsf/facelets&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      xmlns:p=&amp;quot;http://primefaces.org/ui&amp;quot;&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;h:head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/h:head&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;h:body&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;h2&amp;gt;Registration Form&amp;lt;/h2&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;h:form&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;p:fieldset legend=&amp;quot;Registration Form&amp;quot; widgetVar=&amp;quot;regWidget&amp;quot; style=&amp;quot;width: 600px;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;h:panelGrid columns=&amp;quot;3&amp;quot; width=&amp;quot;550&amp;quot; border=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;UserName&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:inputText value=&amp;quot;#{registrationBean.registrationForm.userName}&amp;quot; id=&amp;quot;userName&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;userName&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;Password&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:password value=&amp;quot;#{registrationBean.registrationForm.password}&amp;quot; id=&amp;quot;password&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;password&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;FirstName&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:inputText value=&amp;quot;#{registrationBean.registrationForm.firstName}&amp;quot; id=&amp;quot;firstName&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;firstName&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;LastName&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:inputText value=&amp;quot;#{registrationBean.registrationForm.lastName}&amp;quot; id=&amp;quot;lastName&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;lastName&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;Email&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:inputText value=&amp;quot;#{registrationBean.registrationForm.email}&amp;quot; id=&amp;quot;email&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;email&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;Phone&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:inputText value=&amp;quot;#{registrationBean.registrationForm.phone}&amp;quot; id=&amp;quot;phone&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;phone&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;DOB&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:calendar value=&amp;quot;#{registrationBean.registrationForm.dob}&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       id=&amp;quot;dob&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       converterMessage=&amp;quot;Invalid Date&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       pattern=&amp;quot;dd-MM-yyyy&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/p:calendar&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;dob&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;Gender&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:selectOneRadio id=&amp;quot;gender&amp;quot; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;          value=&amp;quot;#{registrationBean.registrationForm.gender}&amp;quot; &amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;f:selectItems value=&amp;quot;#{registrationBean.genders}&amp;quot; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         var=&amp;quot;gOp&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         itemLabel=&amp;quot;#{gOp}&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         itemValue=&amp;quot;#{gOp}&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/h:selectOneRadio&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;gender&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;Interests&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:selectManyCheckbox id=&amp;quot;interests&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           value=&amp;quot;#{registrationBean.registrationForm.interests}&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           layout=&amp;quot;pageDirection&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;f:selectItems value=&amp;quot;#{registrationBean.interests}&amp;quot; var=&amp;quot;intrOp&amp;quot;&amp;gt;&amp;lt;/f:selectItems&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/p:selectManyCheckbox&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;interests&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:commandButton value=&amp;quot;Register&amp;quot; action=&amp;quot;#{registrationBean.register}&amp;quot; ajax=&amp;quot;false&amp;quot;&amp;gt;&amp;lt;/p:commandButton&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/h:panelGrid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/p:fieldset&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/h:form&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/h:body&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With these changes your Registration Form will be working same as using JSF validation tags.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&#34;http://sivalabs.blogspot.in/2012/01/primefaces-3-tutorial-introduction-form.html&#34;&gt;http://sivalabs.blogspot.in/2012/01/primefaces-3-tutorial-introduction-form.html&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://docs.jboss.org/hibernate/validator/4.1/reference/en-US/html_single/&#34;&gt;http://docs.jboss.org/hibernate/validator/4.1/reference/en-US/html_single/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PrimeFaces 3 Tutorial : Introduction &amp; Form Validation</title>
      <link>http://sivalabs.github.io/post/2012/primefaces-3-tutorial-introduction-form-validation/</link>
      <pubDate>Tue, 31 Jan 2012 02:53:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2012/primefaces-3-tutorial-introduction-form-validation/</guid>
      <description>&lt;p&gt;PrimeFaces is a component library for JSF and has huge component support.&lt;br /&gt;
Working with PrimeFaces is very much easy because there is a single jar, no mandatory other dependencies, no mandatory configuration is required.&lt;/p&gt;

&lt;p&gt;Ok, in this tutorial I am going to explain how to create a Maven based PrimeFaces project and create a simple registration for and validate the form.&lt;br /&gt;
I am using JDK1.6.26 and Tomcat 7.0.32.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#1&lt;/strong&gt;&lt;br /&gt;
Create Maven Project and add the following repositories, dependencies in pom.xml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;dependencies&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;groupId&amp;gt;com.sun.faces&amp;lt;/groupId&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;artifactId&amp;gt;jsf-api&amp;lt;/artifactId&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;version&amp;gt;2.1.6&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;groupId&amp;gt;com.sun.faces&amp;lt;/groupId&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;artifactId&amp;gt;jsf-impl&amp;lt;/artifactId&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;version&amp;gt;2.1.6&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;groupId&amp;gt;org.primefaces&amp;lt;/groupId&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;artifactId&amp;gt;primefaces&amp;lt;/artifactId&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;version&amp;gt;3.0&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;groupId&amp;gt;org.primefaces.themes&amp;lt;/groupId&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;artifactId&amp;gt;bluesky&amp;lt;/artifactId&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;version&amp;gt;1.0.2&amp;lt;/version&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/dependency&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/dependencies&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;repositories&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;repository&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;id&amp;gt;maven2-repository.dev.java.net&amp;lt;/id&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;name&amp;gt;Java.net Repository for Maven&amp;lt;/name&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;url&amp;gt;http://download.java.net/maven/2&amp;lt;/url&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/repository&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;repository&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;id&amp;gt;prime-repo&amp;lt;/id&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;name&amp;gt;Prime Repo&amp;lt;/name&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;url&amp;gt;http://repository.primefaces.org&amp;lt;/url&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/repository&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/repositories&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;build&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;finalName&amp;gt;primefaces-demo&amp;lt;/finalName&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/build&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Step#2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Configure JSF2&amp;rsquo;s FacesServlet configurtion in web.xml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;servlet&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;servlet-name&amp;gt;FacesServlet&amp;lt;/servlet-name&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;servlet-class&amp;gt;javax.faces.webapp.FacesServlet&amp;lt;/servlet-class&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/servlet&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;servlet-mapping&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;servlet-name&amp;gt;FacesServlet&amp;lt;/servlet-name&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;url-pattern&amp;gt;/faces/*&amp;lt;/url-pattern&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/servlet-mapping&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;servlet-mapping&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;servlet-name&amp;gt;FacesServlet&amp;lt;/servlet-name&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;url-pattern&amp;gt;*.xhtml&amp;lt;/url-pattern&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/servlet-mapping&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;context-param&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;param-name&amp;gt;javax.faces.STATE_SAVING_METHOD&amp;lt;/param-name&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;param-value&amp;gt;client&amp;lt;/param-value&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/context-param&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;!--Blusky theme for PrimeFaces --&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;context-param&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;param-name&amp;gt;primefaces.THEME&amp;lt;/param-name&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;param-value&amp;gt;bluesky&amp;lt;/param-value&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/context-param&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Step#3&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create RegistrationForm bean.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.pfdemo.mb.ui;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.ArrayList;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Date;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.List;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class RegistrationForm&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private Integer userId;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private String userName;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private String password;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private String firstName;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private String lastName;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private String email;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private String phone;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private Date dob;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private String gender;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private List&amp;lt;String&amp;gt; interests = new ArrayList&amp;lt;String&amp;gt;();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private boolean subscribeToNewsLetter;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; //setters/getters&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create RegistrationBean which is a Managed Bean.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.sivalabs.pfdemo.mb;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.ArrayList;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.List;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.faces.bean.ManagedBean;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.faces.bean.RequestScoped;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import com.sivalabs.pfdemo.mb.ui.RegistrationForm;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@ManagedBean&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@RequestScoped&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class RegistrationBean&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private RegistrationForm registrationForm = null;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private List&amp;lt;String&amp;gt; interests = null;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; private List&amp;lt;String&amp;gt; genders = null;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public RegistrationBean()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  this.interests = new ArrayList&amp;lt;String&amp;gt;();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  this.interests.add(&amp;quot;Sports&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  this.interests.add(&amp;quot;Gadgets&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  this.interests.add(&amp;quot;Politics&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  this.interests.add(&amp;quot;Technology&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  this.genders = new ArrayList&amp;lt;String&amp;gt;();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  this.genders.add(&amp;quot;Male&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  this.genders.add(&amp;quot;Female&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public String register()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  System.out.println(&amp;quot;register.....&amp;quot;);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  //store data in DB&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  System.out.println(this.registrationForm);&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return &amp;quot;welcome&amp;quot;;//go to welcome.xhtml&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public RegistrationForm getRegistrationForm()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  if(this.registrationForm == null){&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   this.registrationForm = new RegistrationForm();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return registrationForm;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public void setRegistrationForm(RegistrationForm registrationForm)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  this.registrationForm = registrationForm;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public List&amp;lt;String&amp;gt; getInterests()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return interests;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public void setInterests(List&amp;lt;String&amp;gt; interests)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  this.interests = interests;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public List&amp;lt;String&amp;gt; getGenders()&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  return genders;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; public void setGenders(List&amp;lt;String&amp;gt; genders)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  this.genders = genders;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Step#4:&lt;/strong&gt; Create registration.xhtml JSF page.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html PUBLIC &amp;quot;-//W3C//DTD XHTML 1.0 Transitional//EN&amp;quot; &amp;quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;quot;&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;html xmlns=&amp;quot;http://www.w3.org/1999/xhtml&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      xmlns:h=&amp;quot;http://java.sun.com/jsf/html&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      xmlns:f=&amp;quot;http://java.sun.com/jsf/core&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      xmlns:ui=&amp;quot;http://java.sun.com/jsf/facelets&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      xmlns:p=&amp;quot;http://primefaces.org/ui&amp;quot;&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;h:head&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/h:head&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;h:body&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;h2&amp;gt;Registration Form&amp;lt;/h2&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;h:form&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;p:fieldset legend=&amp;quot;Registration Form&amp;quot; widgetVar=&amp;quot;regWidget&amp;quot; style=&amp;quot;width: 600px;&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;h:panelGrid columns=&amp;quot;3&amp;quot; width=&amp;quot;550&amp;quot; border=&amp;quot;0&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;UserName&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:inputText value=&amp;quot;#{registrationBean.registrationForm.userName}&amp;quot; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       id=&amp;quot;userName&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        required=&amp;quot;true&amp;quot; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        requiredMessage=&amp;quot;UserName is required&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        validatorMessage=&amp;quot;UsesrName should be of length from 5 to 15 chars&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;f:validateLength minimum=&amp;quot;5&amp;quot; maximum=&amp;quot;15&amp;quot; for=&amp;quot;userName&amp;quot;&amp;gt;&amp;lt;/f:validateLength&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/p:inputText&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;userName&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;Password&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:password value=&amp;quot;#{registrationBean.registrationForm.password}&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       id=&amp;quot;password&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       required=&amp;quot;true&amp;quot; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       requiredMessage=&amp;quot;Password is required&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       validatorMessage=&amp;quot;Password should be of length from 5 to 15 chars&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      &amp;lt;f:validateLength minimum=&amp;quot;5&amp;quot; maximum=&amp;quot;15&amp;quot; for=&amp;quot;password&amp;quot;&amp;gt;&amp;lt;/f:validateLength&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/p:password&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;password&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;FirstName&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:inputText value=&amp;quot;#{registrationBean.registrationForm.firstName}&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       id=&amp;quot;firstName&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       required=&amp;quot;true&amp;quot; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       requiredMessage=&amp;quot;FirstName is required&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       validatorMessage=&amp;quot;FirstName should be of length from 5 to 15 chars&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      &amp;lt;f:validateLength minimum=&amp;quot;5&amp;quot; maximum=&amp;quot;15&amp;quot; for=&amp;quot;firstName&amp;quot;&amp;gt;&amp;lt;/f:validateLength&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/p:inputText&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;firstName&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;LastName&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:inputText value=&amp;quot;#{registrationBean.registrationForm.lastName}&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       id=&amp;quot;lastName&amp;quot;&amp;gt;&amp;lt;/p:inputText&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;lastName&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;Email&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:inputText value=&amp;quot;#{registrationBean.registrationForm.email}&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       id=&amp;quot;email&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       validatorMessage=&amp;quot;Invalid Email&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;f:validateRegex pattern=&amp;quot;[a-zA-Z0-9]+@[a-zA-Z]+.[a-zA-Z]{2,3}&amp;quot;&amp;gt;&amp;lt;/f:validateRegex&amp;gt;   &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/p:inputText&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;email&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;Phone&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:inputText value=&amp;quot;#{registrationBean.registrationForm.phone}&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       id=&amp;quot;phone&amp;quot;&amp;gt;&amp;lt;/p:inputText&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;phone&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;DOB&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:calendar value=&amp;quot;#{registrationBean.registrationForm.dob}&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       id=&amp;quot;dob&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       converterMessage=&amp;quot;Invalid Date&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       pattern=&amp;quot;dd-MM-yyyy&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/p:calendar&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;dob&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;Gender&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:selectOneRadio id=&amp;quot;gender&amp;quot; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;          value=&amp;quot;#{registrationBean.registrationForm.gender}&amp;quot; &amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;f:selectItems value=&amp;quot;#{registrationBean.genders}&amp;quot; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         var=&amp;quot;gOp&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         itemLabel=&amp;quot;#{gOp}&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         itemValue=&amp;quot;#{gOp}&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/h:selectOneRadio&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;gender&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;h:outputLabel value=&amp;quot;Interests&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:selectManyCheckbox id=&amp;quot;interests&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           value=&amp;quot;#{registrationBean.registrationForm.interests}&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           layout=&amp;quot;pageDirection&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;f:selectItems value=&amp;quot;#{registrationBean.interests}&amp;quot; var=&amp;quot;intrOp&amp;quot;&amp;gt;&amp;lt;/f:selectItems&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/p:selectManyCheckbox&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:message for=&amp;quot;interests&amp;quot; /&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:commandButton value=&amp;quot;Register&amp;quot; action=&amp;quot;#{registrationBean.register}&amp;quot; ajax=&amp;quot;false&amp;quot;&amp;gt;&amp;lt;/p:commandButton&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/h:panelGrid&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;/p:fieldset&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;/h:form&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/h:body&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/html&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Step#5:&lt;/strong&gt;&lt;br /&gt;
Now go to &lt;a href=&#34;http://localhost:8080/primfaces-demo/registration.xhtml&#34;&gt;http://localhost:8080/primfaces-demo/registration.xhtml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here key things to note are:&lt;/strong&gt;&lt;br /&gt;
1. We need to add primefaces taglib using xmlns:p=&amp;ldquo;&lt;a href=&#34;http://primefaces.org/ui&amp;quot;&#34;&gt;http://primefaces.org/ui&amp;quot;&lt;/a&gt;&lt;br /&gt;
2. PrimeFaces Command Button/Links bydefault use Ajax submit. So to do non-ajax submit we should use ajax=&amp;ldquo;false&amp;rdquo;.&lt;br /&gt;
3. To enable autocompletion for &lt;p:&gt; tags, right click on project &amp;ndash;&amp;gt; Properties &amp;ndash;&amp;gt; ProjectFacests &amp;ndash;&amp;gt; Select Java Server Faces 2.0 checkbox and Apply.&lt;/p&gt;

&lt;p&gt;In the next article &lt;a href=&#34;http://sivalabs.blogspot.in/2012/02/primefaces3-tutorial-form-validation.html&#34;&gt;PrimeFaces3 Tutorial : Form Validation Using BeanValidation API(JSR-303)&lt;/a&gt;I have explained how to validate the forms using JSR-303 Bean Validation API.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PrimeFaces QuickStart Tutorial-Part1</title>
      <link>http://sivalabs.github.io/post/2011/primefaces-quickstart-tutorial-part1/</link>
      <pubDate>Wed, 02 Feb 2011 01:27:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/primefaces-quickstart-tutorial-part1/</guid>
      <description>&lt;p&gt;PrimeFaces is an open source component library for JSF 2.0 with morethan 100 rich components. PrimeFaces is far better than many other JSF component libraries because of the following reasons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Rich set of UI components (DataTable, AutoComplete, HtmlEditor, Charts etc).&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;No extra xml configuration is required and there is no required dependencies.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Built-in Ajax based on standard JSF 2.0 Ajax APIs.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Skinning Framework with 25+ built-in themes.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Awesome documentation with code examples.&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let us build a sample application using PrimeFaces with the following features:&lt;br /&gt;
1. A Login screen which accepts username and password and authenticate the user.&lt;br /&gt;
2. Upon successful login user will be shown a User Search screen. Users can search for users by their name.The search results will be displayed in a DataTable with pagination, sorting and filtering support.&lt;br /&gt;
3. Upon clicking on a row the user details will be displayed in a form.&lt;/p&gt;

&lt;p&gt;First download JSF 2 jars from &lt;a href=&#34;http://javaserverfaces.java.net/download.html&#34;&gt;http://javaserverfaces.java.net/download.html&lt;/a&gt;&lt;br /&gt;
Place the jsf-api-2.0.3.jar, jsf-impl-2.0.3.jar and jstl-1.0.2.jar jars in WEB-INF/lib folder.&lt;br /&gt;
Download PrimeFaces from &lt;a href=&#34;http://www.primefaces.org/downloads.html&#34;&gt;http://www.primefaces.org/downloads.html&lt;/a&gt;.&lt;br /&gt;
Place primefaces-2.2.RC2.jar in WEB-INF/lib folder.&lt;/p&gt;

&lt;p&gt;Configure FacesServlet in web.xml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;web-app version=&amp;quot;2.5&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    xmlns=&amp;quot;http://java.sun.com/xml/ns/javaee&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    xsi:schemaLocation=&amp;quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&amp;quot; &amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;welcome-file-list&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;welcome-file&amp;gt;index.jsp&amp;lt;/welcome-file&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/welcome-file-list&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;servlet&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;servlet-name&amp;gt;Faces Servlet&amp;lt;/servlet-name&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;servlet-&amp;gt;javax.faces.webapp.FacesServlet&amp;lt;/servlet-class&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/servlet&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;servlet-mapping&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;servlet-name&amp;gt;Faces Servlet&amp;lt;/servlet-name&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;url-pattern&amp;gt;*.jsf&amp;lt;/url-pattern&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/servlet-mapping&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/web-app&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create faces-config.xml in WEB-INF folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;faces-config xmlns=&amp;quot;http://java.sun.com/xml/ns/javaee&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    xsi:schemaLocation=&amp;quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_2_0.xsd&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    version=&amp;quot;2.0&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/faces-config&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Welcome page index.jsp just forwards to login screen.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;jsp:forward page=&amp;quot;login.jsf&amp;quot;&amp;gt;&amp;lt;/jsp:forward&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create login.xhtml page.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;html xmlns=&amp;quot;http://www.w3c.org/1999/xhtml&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;xmlns:f=&amp;quot;http://java.sun.com/jsf/core&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    xmlns:h=&amp;quot;http://java.sun.com/jsf/html&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    xmlns:p=&amp;quot;http://primefaces.prime.com.tr/ui&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;h:head&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;link href=&amp;quot;themes/bluesky/skin.css&amp;quot; type=&amp;quot;text/css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;&amp;lt;/link&amp;gt;&amp;lt;/h:head&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;h:body&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/h:body&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;center&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;p:panel header=&amp;quot;Login Form&amp;quot;&amp;gt;        &amp;lt;h:form&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            &amp;lt;h:panelgr cellpadding=&amp;quot;2&amp;quot; columns=&amp;quot;2&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                &amp;lt;h:outputlabel value=&amp;quot;UserName&amp;quot; for=&amp;quot;#{userManagedBean.username}&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                &amp;lt;h:inputtext value=&amp;quot;#{userManagedBean.username}&amp;quot; label=&amp;quot;UserName&amp;quot;&amp;gt;&amp;lt;/h:inputtext&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                &amp;lt;h:outputlabel value=&amp;quot;Password&amp;quot; for=&amp;quot;#{userManagedBean.password}&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                &amp;lt;h:inputsecret value=&amp;quot;#{userManagedBean.password}&amp;quot;&amp;gt;&amp;lt;/h:inputsecret&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                &amp;lt;h:commandbutton action=&amp;quot;#{userManagedBean.login}&amp;quot; type=&amp;quot;submit&amp;quot; value=&amp;quot;Login&amp;quot;&amp;gt;&amp;lt;/h:commandbutton&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            &amp;lt;/h:outputlabel&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;/h:outputlabel&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/h:panelgrid&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;div&amp;gt;&amp;lt;h:messages&amp;gt;&amp;lt;/h:messages&amp;gt;&amp;lt;/div&amp;gt;    &amp;lt;/h:form&amp;gt;&amp;lt;/p:panel&amp;gt;&amp;lt;/center&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/html&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can get the blusky theme from PrimeFaces bundle.&lt;/p&gt;

&lt;p&gt;Create home.xhtml which contains UserSearchForm, Results dataTable and UserDetails Panel.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;html xmlns=&amp;quot;http://www.w3c.org/1999/xhtml&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   xmlns:f=&amp;quot;http://java.sun.com/jsf/core&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   xmlns:h=&amp;quot;http://java.sun.com/jsf/html&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   xmlns:p=&amp;quot;http://primefaces.prime.com.tr/ui&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;h:head&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;link type=&amp;quot;text/css&amp;quot; rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;themes/bluesky/skin.css&amp;quot; /&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/h:head&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;h:body&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;center&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;h:form&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;p:panel header=&amp;quot;Users Search Form&amp;quot; style=&amp;quot;width: 700;&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;h:form&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;h:panelGrid columns=&amp;quot;3&amp;quot; cellpadding=&amp;quot;2&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:outputLabel for=&amp;quot;#{userManagedBean.searchUser}&amp;quot; value=&amp;quot;UserName&amp;quot;/&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:inputText value=&amp;quot;#{userManagedBean.searchUser}&amp;quot; label=&amp;quot;UserName&amp;quot;&amp;gt;&amp;lt;/h:inputText&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:commandButton type=&amp;quot;submit&amp;quot; value=&amp;quot;Search&amp;quot; action=&amp;quot;#{userManagedBean.searchUser}&amp;quot;&amp;gt;&amp;lt;/h:commandButton&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;/h:panelGrid&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;/h:form&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;/p:panel&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;p:dataTable var=&amp;quot;user&amp;quot; value=&amp;quot;#{userManagedBean.searchUsersResults}&amp;quot; 
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           selection=&amp;quot;#{userManagedBean.selectedUser}&amp;quot; selectionMode=&amp;quot;single&amp;quot; 
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           dynamic=&amp;quot;true&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           onRowSelectUpdate=&amp;quot;userUpdateForm&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           onRowUnselectUpdate=&amp;quot;userUpdateForm&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           rowSelectListener=&amp;quot;#{userManagedBean.onUserSelect}&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            rowUnselectListener=&amp;quot;#{userManagedBean.onUserUnselect}&amp;quot;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           paginator=&amp;quot;true&amp;quot; rows=&amp;quot;5&amp;quot; style=&amp;quot;width: 700&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;p:column sortBy=&amp;quot;#{user.userId}&amp;quot; filterBy=&amp;quot;#{user.userId}&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;f:facet name=&amp;quot;header&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:outputText value=&amp;quot;Id&amp;quot; /&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;/f:facet&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:outputText value=&amp;quot;#{user.userId}&amp;quot; /&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;/p:column&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;p:column sortBy=&amp;quot;#{user.username}&amp;quot; filterBy=&amp;quot;#{user.username}&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;f:facet name=&amp;quot;header&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:outputText value=&amp;quot;Name&amp;quot; /&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;/f:facet&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:outputText value=&amp;quot;#{user.username}&amp;quot; /&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;/p:column&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;p:column sortBy=&amp;quot;#{user.emailId}&amp;quot; filterBy=&amp;quot;#{user.emailId}&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;f:facet name=&amp;quot;header&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:outputText value=&amp;quot;Email&amp;quot; /&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;/f:facet&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:outputText value=&amp;quot;#{user.emailId}&amp;quot; /&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;/p:column&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;p:column parser=&amp;quot;date&amp;quot; sortBy=&amp;quot;#{user.dob}&amp;quot; filterBy=&amp;quot;#{user.dob}&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;f:facet name=&amp;quot;header&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:outputText value=&amp;quot;DOB&amp;quot; /&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;/f:facet&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:outputText value=&amp;quot;#{user.dob}&amp;quot; &amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                   &amp;lt;f:convertDateTime pattern=&amp;quot;MM/dd/yyyy&amp;quot; /&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;/h:outputText&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;/p:column&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;/p:dataTable&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;p:panel id=&amp;quot;userDetailsPanelId&amp;quot; header=&amp;quot;Users Details&amp;quot; style=&amp;quot;width: 700;&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;h:panelGrid columns=&amp;quot;2&amp;quot; cellpadding=&amp;quot;2&amp;quot; id=&amp;quot;userUpdateForm&amp;quot; border=&amp;quot;0&amp;quot; &amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:outputLabel for=&amp;quot;#{userManagedBean.selectedUser.userId}&amp;quot; value=&amp;quot;UserId&amp;quot;/&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:inputText value=&amp;quot;#{userManagedBean.selectedUser.userId}&amp;quot; style=&amp;quot;width: 100;&amp;quot; readonly=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;/h:inputText&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:outputLabel for=&amp;quot;#{userManagedBean.selectedUser.username}&amp;quot; value=&amp;quot;Username&amp;quot;/&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:inputText value=&amp;quot;#{userManagedBean.selectedUser.username}&amp;quot; readonly=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;/h:inputText&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:outputLabel for=&amp;quot;#{userManagedBean.selectedUser.emailId}&amp;quot; value=&amp;quot;EmailId&amp;quot;/&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:inputText value=&amp;quot;#{userManagedBean.selectedUser.emailId}&amp;quot; readonly=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;/h:inputText&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:outputLabel for=&amp;quot;#{userManagedBean.selectedUser.gender}&amp;quot; value=&amp;quot;Gender&amp;quot;/&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:inputText value=&amp;quot;#{userManagedBean.selectedUser.gender}&amp;quot; readonly=&amp;quot;true&amp;quot;&amp;gt;&amp;lt;/h:inputText&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:outputLabel for=&amp;quot;#{userManagedBean.selectedUser.dob}&amp;quot; value=&amp;quot;DOB&amp;quot;/&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;h:inputText value=&amp;quot;#{userManagedBean.selectedUser.dob}&amp;quot; readonly=&amp;quot;true&amp;quot;&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                   &amp;lt;f:convertDateTime pattern=&amp;quot;MM/dd/yyyy&amp;quot; /&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               &amp;lt;/h:inputText&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;               
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;/h:panelGrid&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;/p:panel&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;/h:form&amp;gt;       
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;/center&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/h:body&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/html&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create User.java domain class.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.primefaces.sample;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Date;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class User
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private Integer userId;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private String username;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private String emailId;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private String phone;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private Date dob;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private String gender;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private String address;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public User()
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {}
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public User(Integer userId, String username, String emailId, String phone,
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            Date dob, String gender, String address)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.userId = userId;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.username = username;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.emailId = emailId;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.phone = phone;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.dob = dob;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.gender = gender;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.address = address;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    //setter and getters    
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create UserService.java which acts as a mock database table.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.primefaces.sample;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.ArrayList;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Collection;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Date;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.HashMap;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Map;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Set;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class UserService
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private static final Map&amp;lt;Integer, User&amp;gt; USERS_TABLE = new HashMap&amp;lt;Integer, User&amp;gt;();
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    static
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(1, new User(1, &amp;quot;Administrator&amp;quot;, &amp;quot;admin@gmail.com&amp;quot;, &amp;quot;9000510456&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(2, new User(2, &amp;quot;Guest&amp;quot;, &amp;quot;guest@gmail.com&amp;quot;, &amp;quot;9247469543&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(3, new User(3, &amp;quot;John&amp;quot;, &amp;quot;John@gmail.com&amp;quot;, &amp;quot;9000510456&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(4, new User(4, &amp;quot;Paul&amp;quot;, &amp;quot;Paul@gmail.com&amp;quot;, &amp;quot;9247469543&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(5, new User(5, &amp;quot;raju&amp;quot;, &amp;quot;raju@gmail.com&amp;quot;, &amp;quot;9000510456&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(6, new User(6, &amp;quot;raghav&amp;quot;, &amp;quot;raghav@gmail.com&amp;quot;, &amp;quot;9247469543&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(7, new User(7, &amp;quot;caren&amp;quot;, &amp;quot;caren@gmail.com&amp;quot;, &amp;quot;9000510456&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(8, new User(8, &amp;quot;Mike&amp;quot;, &amp;quot;Mike@gmail.com&amp;quot;, &amp;quot;9247469543&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(9, new User(9, &amp;quot;Steve&amp;quot;, &amp;quot;Steve@gmail.com&amp;quot;, &amp;quot;9000510456&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(10, new User(10, &amp;quot;Polhman&amp;quot;, &amp;quot;Polhman@gmail.com&amp;quot;, &amp;quot;9247469543&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(11, new User(11, &amp;quot;Rogermoor&amp;quot;, &amp;quot;Rogermoor@gmail.com&amp;quot;, &amp;quot;9000510456&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(12, new User(12, &amp;quot;Robinhood&amp;quot;, &amp;quot;Robinhood@gmail.com&amp;quot;, &amp;quot;9247469543&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(13, new User(13, &amp;quot;Sean&amp;quot;, &amp;quot;Sean@gmail.com&amp;quot;, &amp;quot;9000510456&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(14, new User(14, &amp;quot;Gabriel&amp;quot;, &amp;quot;Gabriel@gmail.com&amp;quot;, &amp;quot;9247469543&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(15, new User(15, &amp;quot;raman&amp;quot;, &amp;quot;raman@gmail.com&amp;quot;, &amp;quot;9000510456&amp;quot;, new Date(), &amp;quot;M&amp;quot;, &amp;quot;Hyderabad&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public Integer create(User user)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        if(user == null)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            throw new RuntimeException(&amp;quot;Unable to create User. User object is null.&amp;quot;);
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        Integer userId = this.getMaxUserId();
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        user.setUserId(userId);
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(userId, user);
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return userId;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void delete(User user)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        if(user == null)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            throw new RuntimeException(&amp;quot;Unable to delete User. User object is null.&amp;quot;);
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.remove(user.getUserId());
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public Collection&amp;lt;User&amp;gt; getAllUsers()
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return USERS_TABLE.values();
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public User getUser(Integer userId)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return USERS_TABLE.get(userId);
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public Collection&amp;lt;User&amp;gt; searchUsers(String username)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        String searchCriteria = (username == null)? &amp;quot;&amp;quot;:username.toLowerCase().trim();
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        Collection&amp;lt;User&amp;gt; users = USERS_TABLE.values();
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        Collection&amp;lt;User&amp;gt; searchResults = new ArrayList&amp;lt;User&amp;gt;();
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        for (User user : users)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            if(user.getUsername() != null &amp;amp;&amp;amp; user.getUsername().toLowerCase().trim().startsWith(searchCriteria))
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                searchResults.add(user);
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return searchResults;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void update(User user)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        if(user == null || !USERS_TABLE.containsKey(user.getUserId()))
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            throw new RuntimeException(&amp;quot;Unable to update User. User object is null or User Id [&amp;quot;+user.getUserId()+&amp;quot;] is invalid.&amp;quot; );
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        USERS_TABLE.put(user.getUserId(), user);
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    protected Integer getMaxUserId()
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        Set&amp;lt;Integer&amp;gt; keys = USERS_TABLE.keySet();
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        Integer maxId = 1;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        for (Integer key : keys)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            if(key &amp;gt; maxId)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                maxId = key;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return maxId;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create UserManagedBean.java&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;package com.primefaces.sample;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import java.util.Collection;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.faces.application.FacesMessage;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.faces.bean.ApplicationScoped;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.faces.bean.ManagedBean;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import javax.faces.context.FacesContext;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.primefaces.event.SelectEvent;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;import org.primefaces.event.UnselectEvent;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@ManagedBean
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;@ApplicationScoped
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class UserManagedBean
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    UserService userService = new UserService();
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private String username;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private String password;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private String searchUser;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private Collection&amp;lt;User&amp;gt; searchUsersResults;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private User selectedUser;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public String getUsername()
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return username;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void setUsername(String username)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.username = username;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public String getPassword()
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return password;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void setPassword(String password)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.password = password;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public User getSelectedUser()
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        if(selectedUser == null){
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            selectedUser = new User();
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return selectedUser;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void setSelectedUser(User selectedUser)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.selectedUser = selectedUser;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public Collection&amp;lt;User&amp;gt; getSearchUsersResults()
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return searchUsersResults;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void setSearchUsersResults(Collection&amp;lt;User&amp;gt; searchUsersResults)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.searchUsersResults = searchUsersResults;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public String getSearchUser()
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return searchUser;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void setSearchUser(String searchUser)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.searchUser = searchUser;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public String login()
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        if(&amp;quot;test&amp;quot;.equalsIgnoreCase(getUsername()) &amp;amp;&amp;amp; &amp;quot;test&amp;quot;.equals(getPassword()))
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            return &amp;quot;home&amp;quot;;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        else
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            FacesContext context = FacesContext.getCurrentInstance();
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            context.addMessage(&amp;quot;username&amp;quot;, new FacesMessage(&amp;quot;Invalid UserName and Password&amp;quot;));
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            return &amp;quot;login&amp;quot;;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public String searchUser()
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        String username = (this.searchUser == null)? &amp;quot;&amp;quot;:this.searchUser.trim();        
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        this.searchUsersResults = userService.searchUsers(username);
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        System.out.println(searchUsersResults);
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return &amp;quot;home&amp;quot;;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public String updateUser()
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        userService.update(this.selectedUser);
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        return &amp;quot;home&amp;quot;;
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void onUserSelect(SelectEvent event)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {        
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    public void onUserUnselect(UnselectEvent event)
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    {
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    }
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}
&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That all we need to do. You can run the application and see the rich user interface with blusky theme.&lt;/p&gt;

&lt;p&gt;By default we don&amp;rsquo;t get automcomplete for PrimeFaces tag  in Eclipse. To enable AutoComplete,&lt;br /&gt;
Go to Window&amp;ndash;&amp;gt;Preferences&amp;ndash;&amp;gt;General&amp;ndash;&amp;gt;ContentTypes&lt;br /&gt;
Select JSP and add .xhtml as file association.&lt;/p&gt;

&lt;p&gt;You can download the sample as an Eclipse project &lt;a href=&#34;https://sites.google.com/site/sivalabworks/sampleappdownloads/PrimeFaces.zip?attredirects=0&amp;amp;d=1&#34;&gt;Here&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JSF can be used for several purposes.</title>
      <link>http://sivalabs.github.io/post/2011/jsf-can-be-used-for-several-purposes/</link>
      <pubDate>Thu, 06 Jan 2011 04:36:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/jsf-can-be-used-for-several-purposes/</guid>
      <description>&lt;p&gt;Recently I got a wonderful opportunity to work with JSF and I couldn&amp;rsquo;t stop myself sharing my feelings on JSF with everyone.&lt;br /&gt;
By god&amp;rsquo;s grace till last month i didn&amp;rsquo;t a chance to work on JSF in my career. But recently i have to work on a project developed in JSF 1.x.&lt;/p&gt;

&lt;p&gt;After spending few days on JSF technology I realized that JSF is not only a web framework and we can use it for several purposes.&lt;/p&gt;

&lt;p&gt;Below is just a small list:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To test the patience and mental strength of a developer.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;If you are a team lead/manager and you want to take revenge on a team member you can allot him to work on a JSF project.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;If your client is not satisfied with your company services and ending the relationship with the organization and you are working on the last project for that client. You can use JSF for that project and deliver a useless, unmaintainable junk and waste a lot of clients money in terms of billing.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;If anybody wants to move out of java or entirely from IT and is postponing that decision then allot him to work on a JSF project. He will move to new career with in 1 week.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;In future if we want to show how to write stateful component oriented junk we can keep some JSF projects and show them for reference.&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I know there are some JSF fans across the world and they might scold me for this post.&lt;br /&gt;
If you want to shout at me please shout at me in Error 500: &amp;ldquo;{2}&amp;rdquo; Conversion Error setting value &amp;ldquo;{0}&amp;rdquo; for &amp;ldquo;{1}&amp;rdquo; format because this is what JSF barks for whatever wrong thing happens in this world.&lt;/p&gt;

&lt;p&gt;GOD, Save the java community from JSF.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>