<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jboss on SivaLabs</title>
    <link>http://sivalabs.github.io/categories/jboss/</link>
    <description>Recent content in Jboss on SivaLabs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 May 2013 11:40:00 +0000</lastBuildDate>
    <atom:link href="http://sivalabs.github.io/categories/jboss/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Deploying BroadleafCommerce 2.0 on JBoss AS 7</title>
      <link>http://sivalabs.github.io/post/2013/deploying-broadleafcommerce-20-on-jboss/</link>
      <pubDate>Mon, 27 May 2013 11:40:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2013/deploying-broadleafcommerce-20-on-jboss/</guid>
      <description>&lt;p&gt;First 2 steps are not really related to Broadleaf specific, but mentioned to make it easy to follow(copy/paste) the steps.&lt;/p&gt;

&lt;p&gt;**Step#1: Configure DataSources in JBoss AS. **
**
**&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;datasource jta=&amp;quot;true&amp;quot; jndi-name=&amp;quot;java:jboss/datasources/BroadleafDS&amp;quot; pool-name=&amp;quot;BroadleafDS_Pool&amp;quot; enabled=&amp;quot;true&amp;quot; use-java-context=&amp;quot;true&amp;quot; use-ccm=&amp;quot;true&amp;quot;&amp;gt;
 &amp;lt;connection-url&amp;gt;jdbc:mysql://localhost:3306/broadleaf&amp;lt;/connection-url&amp;gt;
 &amp;lt;driver&amp;gt;mysql&amp;lt;/driver&amp;gt;
 &amp;lt;security&amp;gt;
  &amp;lt;user-name&amp;gt;root&amp;lt;/user-name&amp;gt;
  &amp;lt;password&amp;gt;admin&amp;lt;/password&amp;gt;
 &amp;lt;/security&amp;gt;
 &amp;lt;timeout&amp;gt;
  &amp;lt;idle-timeout-minutes&amp;gt;0&amp;lt;/idle-timeout-minutes&amp;gt;
  &amp;lt;query-timeout&amp;gt;600&amp;lt;/query-timeout&amp;gt;
 &amp;lt;/timeout&amp;gt;
&amp;lt;/datasource&amp;gt;
&amp;lt;datasource jta=&amp;quot;true&amp;quot; jndi-name=&amp;quot;java:jboss/datasources/BroadleafSecureDS&amp;quot; pool-name=&amp;quot;BroadleafSecureDS_Pool&amp;quot; enabled=&amp;quot;true&amp;quot; use-java-context=&amp;quot;true&amp;quot; use-ccm=&amp;quot;true&amp;quot;&amp;gt;
 &amp;lt;connection-url&amp;gt;jdbc:mysql://localhost:3306/broadleaf&amp;lt;/connection-url&amp;gt;
 &amp;lt;driver&amp;gt;mysql&amp;lt;/driver&amp;gt;
 &amp;lt;security&amp;gt;
  &amp;lt;user-name&amp;gt;root&amp;lt;/user-name&amp;gt;
  &amp;lt;password&amp;gt;admin&amp;lt;/password&amp;gt;
 &amp;lt;/security&amp;gt;
 &amp;lt;timeout&amp;gt;
  &amp;lt;idle-timeout-minutes&amp;gt;0&amp;lt;/idle-timeout-minutes&amp;gt;
  &amp;lt;query-timeout&amp;gt;600&amp;lt;/query-timeout&amp;gt;
 &amp;lt;/timeout&amp;gt;
&amp;lt;/datasource&amp;gt;
&amp;lt;datasource jta=&amp;quot;true&amp;quot; jndi-name=&amp;quot;java:jboss/datasources/BroadleafCmsDS&amp;quot; pool-name=&amp;quot;BroadleafCmsDS_Pool&amp;quot; enabled=&amp;quot;true&amp;quot; use-java-context=&amp;quot;true&amp;quot; use-ccm=&amp;quot;true&amp;quot;&amp;gt;
 &amp;lt;connection-url&amp;gt;jdbc:mysql://localhost:3306/broadleaf&amp;lt;/connection-url&amp;gt;
 &amp;lt;driver&amp;gt;mysql&amp;lt;/driver&amp;gt;
 &amp;lt;security&amp;gt;
  &amp;lt;user-name&amp;gt;root&amp;lt;/user-name&amp;gt;
  &amp;lt;password&amp;gt;admin&amp;lt;/password&amp;gt;
 &amp;lt;/security&amp;gt;
 &amp;lt;timeout&amp;gt;
  &amp;lt;idle-timeout-minutes&amp;gt;0&amp;lt;/idle-timeout-minutes&amp;gt;
  &amp;lt;query-timeout&amp;gt;600&amp;lt;/query-timeout&amp;gt;
 &amp;lt;/timeout&amp;gt;
&amp;lt;/datasource&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;**Step#2: Update &lt;em&gt;core/src/main/resources/META-INF/persistence.xml&lt;/em&gt; as follows to use DataSources configured in JBossAS7. **&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;persistence xmlns=&amp;quot;http://java.sun.com/xml/ns/persistence&amp;quot;
             xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
             xsi:schemaLocation=&amp;quot;http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd&amp;quot;
             version=&amp;quot;2.0&amp;quot;&amp;gt;

    &amp;lt;persistence-unit name=&amp;quot;blPU&amp;quot; transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;
        &amp;lt;non-jta-data-source&amp;gt;java:jboss/datasources/BroadleafDS&amp;lt;/non-jta-data-source&amp;gt;
        &amp;lt;exclude-unlisted-classes/&amp;gt;
    &amp;lt;/persistence-unit&amp;gt;

    &amp;lt;persistence-unit name=&amp;quot;blSecurePU&amp;quot; transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;
        &amp;lt;non-jta-data-source&amp;gt;java:jboss/datasources/BroadleafSecureDS&amp;lt;/non-jta-data-source&amp;gt;
        &amp;lt;exclude-unlisted-classes/&amp;gt;
    &amp;lt;/persistence-unit&amp;gt;

    &amp;lt;persistence-unit name=&amp;quot;blCMSStorage&amp;quot; transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;
        &amp;lt;non-jta-data-source&amp;gt;java:jboss/datasources/BroadleafCmsDS&amp;lt;/non-jta-data-source&amp;gt;
        &amp;lt;exclude-unlisted-classes/&amp;gt;
    &amp;lt;/persistence-unit&amp;gt;
&amp;lt;/persistence&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;**Step#3: Update site/src/main/webapp/WEB-INF/applicationContext.xml as follows: **&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;bean id=&amp;quot;blMergedDataSources&amp;quot; class=&amp;quot;org.springframework.beans.factory.config.MapFactoryBean&amp;quot;&amp;gt;
 &amp;lt;property name=&amp;quot;sourceMap&amp;quot;&amp;gt;
  &amp;lt;map&amp;gt;
   &amp;lt;entry key=&amp;quot;java:jboss/datasources/BroadleafDS&amp;quot; value-ref=&amp;quot;webDS&amp;quot;/&amp;gt;
   &amp;lt;entry key=&amp;quot;java:jboss/datasources/BroadleafSecureDS&amp;quot; value-ref=&amp;quot;webSecureDS&amp;quot;/&amp;gt;
   &amp;lt;entry key=&amp;quot;java:jboss/datasources/BroadleafCmsDS&amp;quot; value-ref=&amp;quot;webStorageDS&amp;quot;/&amp;gt;
  &amp;lt;/map&amp;gt;
 &amp;lt;/property&amp;gt;
&amp;lt;/bean&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now if you deploy the app you will get the following error:&lt;/p&gt;

&lt;p&gt;ERROR Error creating bean with name &amp;lsquo;blMergedDataSources&amp;rsquo; defined in resource loaded from byte array: Cannot resolve reference to bean &amp;lsquo;webDS&amp;rsquo; while setting bean property &amp;lsquo;sourceMap&amp;rsquo; with key [TypedStringValue: value [java:jboss/datasources/BroadleafDS], target type [null]]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &amp;lsquo;webDS&amp;rsquo;: Post-processing of the FactoryBean&amp;rsquo;s object failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: org.broadleafcommerce.profile.core.service.CustomerAddressService [Xlint:invalidAbsoluteTypeName]&lt;/p&gt;

&lt;p&gt;** Step#4: Create &lt;em&gt;jboss-deployment-structure.xml&lt;/em&gt; in site/src/main/webapp/WEB-INF/ folder. **
**
**&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;jboss-deployment-structure xmlns=&amp;quot;urn:jboss:deployment-structure:1.0&amp;quot;&amp;gt;
   &amp;lt;deployment&amp;gt;
      &amp;lt;dependencies&amp;gt;
         &amp;lt;module name=&amp;quot;org.jboss.ironjacamar.jdbcadapters&amp;quot; /&amp;gt;
      &amp;lt;/dependencies&amp;gt;
      &amp;lt;exclusions&amp;gt;
            &amp;lt;module name=&amp;quot;org.apache.commons.logging&amp;quot;/&amp;gt;
            &amp;lt;module name=&amp;quot;org.apache.log4j&amp;quot;/&amp;gt;
            &amp;lt;module name=&amp;quot;org.jboss.logging&amp;quot;/&amp;gt;
            &amp;lt;module name=&amp;quot;org.jboss.logmanager&amp;quot;/&amp;gt;
            &amp;lt;module name=&amp;quot;org.jboss.logmanager.log4j&amp;quot;/&amp;gt;
            &amp;lt;module name=&amp;quot;org.slf4j&amp;quot;/&amp;gt;
      &amp;lt;/exclusions&amp;gt;
   &amp;lt;/deployment&amp;gt;
&amp;lt;/jboss-deployment-structure&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now if you try to deploy the app you will get the following error because JBossAS7 comes with Hibernate4 and application is using some hibernate3 features.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; @CollectionOfElements
 @JoinTable(name = &amp;quot;BLC_CATEGORY_IMAGE&amp;quot;, joinColumns = @JoinColumn(name = &amp;quot;CATEGORY_ID&amp;quot;))
 @MapKey(columns = { @Column(name = &amp;quot;NAME&amp;quot;, length = 5, nullable = false) })
 @Column(name = &amp;quot;URL&amp;quot;)
 @Cache(usage = CacheConcurrencyStrategy.READ_WRITE, region=&amp;quot;blStandardElements&amp;quot;)
 @BatchSize(size = 50)
 @Deprecated
 protected Map&amp;lt;String, String&amp;gt; categoryImages = new HashMap&amp;lt;String, String&amp;gt;(10);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;org.hibernate.MappingException: Could not determine type for: java.util.Map, at table: BLC_CATEGORY, for columns: [org.hibernate.mapping.Column(URL)] &lt;/p&gt;

&lt;p&gt;So let us install hibernate3 module in JBossAS7 and use it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#5: Install Hibernate 3 module in JBoss AS 7. &lt;/strong&gt;
**
**Copy the following jars(you can get these from site.war file) into &lt;em&gt;jboss-as-7.1.1.FINAL/modules/org/hibernate/3/&lt;/em&gt; folder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;antlr-2.7.6.jar&lt;/strong&gt;
&lt;strong&gt; commons-collections-3.2.1.jar&lt;/strong&gt;
&lt;strong&gt; dom4j-1.6.1.jar&lt;/strong&gt;
&lt;strong&gt; hibernate-commons-annotations-3.2.0.Final.jar&lt;/strong&gt;
&lt;strong&gt; hibernate-core-3.6.10.Final.jar&lt;/strong&gt;
&lt;strong&gt; hibernate-entitymanager-3.6.10.Final.jar&lt;/strong&gt;
&lt;strong&gt; javassist-3.16.1-GA.jar&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create &lt;strong&gt;module.xml&lt;/strong&gt; in &lt;em&gt;jboss-as-7.1.1.FINAL/modules/org/hibernate/3/&lt;/em&gt; folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;module xmlns=&amp;quot;urn:jboss:module:1.0&amp;quot; name=&amp;quot;org.hibernate&amp;quot; slot=&amp;quot;3&amp;quot;&amp;gt;
    &amp;lt;resources&amp;gt;
        &amp;lt;resource-root path=&amp;quot;hibernate-core-3.6.10.Final.jar&amp;quot;/&amp;gt;  
        &amp;lt;resource-root path=&amp;quot;javassist-3.16.1-GA.jar&amp;quot;/&amp;gt;
        &amp;lt;resource-root path=&amp;quot;antlr-2.7.6.jar&amp;quot;/&amp;gt;  
        &amp;lt;resource-root path=&amp;quot;commons-collections-3.2.1.jar&amp;quot;/&amp;gt;  
        &amp;lt;resource-root path=&amp;quot;dom4j-1.6.1.jar&amp;quot;/&amp;gt;  
        &amp;lt;!-- Insert other Hibernate 3 jars to be used here --&amp;gt;
  &amp;lt;resource-root path=&amp;quot;hibernate-commons-annotations-3.2.0.Final.jar&amp;quot;/&amp;gt;
  &amp;lt;resource-root path=&amp;quot;hibernate-entitymanager-3.6.10.Final.jar&amp;quot;/&amp;gt;
    &amp;lt;/resources&amp;gt;
    &amp;lt;dependencies&amp;gt;
        &amp;lt;module name=&amp;quot;org.jboss.as.jpa.hibernate&amp;quot; slot=&amp;quot;3&amp;quot;/&amp;gt;
        &amp;lt;module name=&amp;quot;asm.asm&amp;quot;/&amp;gt;
        &amp;lt;module name=&amp;quot;javax.api&amp;quot;/&amp;gt;
        &amp;lt;module name=&amp;quot;javax.persistence.api&amp;quot;/&amp;gt;
        &amp;lt;module name=&amp;quot;javax.transaction.api&amp;quot;/&amp;gt;
        &amp;lt;module name=&amp;quot;javax.validation.api&amp;quot;/&amp;gt;
        &amp;lt;!-- &amp;lt;module name=&amp;quot;org.apache.ant&amp;quot;/&amp;gt; --&amp;gt;
        &amp;lt;module name=&amp;quot;org.infinispan&amp;quot; optional=&amp;quot;true&amp;quot;/&amp;gt;
        &amp;lt;module name=&amp;quot;org.javassist&amp;quot;/&amp;gt;
        &amp;lt;module name=&amp;quot;org.slf4j&amp;quot;/&amp;gt;
    &amp;lt;/dependencies&amp;gt;
&amp;lt;/module&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;**Step#6: Tell JBoss to use hibernate 3 module. Update core/src/main/resources/META-INF/persistence.xml **&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;persistence xmlns=&amp;quot;http://java.sun.com/xml/ns/persistence&amp;quot;
             xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;
             xsi:schemaLocation=&amp;quot;http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd&amp;quot;
             version=&amp;quot;2.0&amp;quot;&amp;gt;
 &amp;lt;persistence-unit name=&amp;quot;blPU&amp;quot; transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;
        &amp;lt;non-jta-data-source&amp;gt;java:jboss/datasources/BroadleafDS&amp;lt;/non-jta-data-source&amp;gt;
        &amp;lt;exclude-unlisted-classes/&amp;gt;
        &amp;lt;properties&amp;gt;
         &amp;lt;property name=&amp;quot;jboss.as.jpa.providerModule&amp;quot; value=&amp;quot;org.hibernate:3&amp;quot; /&amp;gt;
         &amp;lt;property name=&amp;quot;jboss.as.jpa.managed&amp;quot; value=&amp;quot;false&amp;quot; /&amp;gt;
        &amp;lt;/properties&amp;gt;
    &amp;lt;/persistence-unit&amp;gt;

    &amp;lt;persistence-unit name=&amp;quot;blSecurePU&amp;quot; transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;
        &amp;lt;non-jta-data-source&amp;gt;java:jboss/datasources/BroadleafSecureDS&amp;lt;/non-jta-data-source&amp;gt;
        &amp;lt;exclude-unlisted-classes/&amp;gt;
        &amp;lt;properties&amp;gt;
         &amp;lt;property name=&amp;quot;jboss.as.jpa.providerModule&amp;quot; value=&amp;quot;org.hibernate:3&amp;quot; /&amp;gt;
         &amp;lt;property name=&amp;quot;jboss.as.jpa.managed&amp;quot; value=&amp;quot;false&amp;quot; /&amp;gt;
        &amp;lt;/properties&amp;gt;
    &amp;lt;/persistence-unit&amp;gt;

    &amp;lt;persistence-unit name=&amp;quot;blCMSStorage&amp;quot; transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;
        &amp;lt;non-jta-data-source&amp;gt;java:jboss/datasources/BroadleafCmsDS&amp;lt;/non-jta-data-source&amp;gt;
        &amp;lt;exclude-unlisted-classes/&amp;gt;
        &amp;lt;properties&amp;gt;
         &amp;lt;property name=&amp;quot;jboss.as.jpa.providerModule&amp;quot; value=&amp;quot;org.hibernate:3&amp;quot; /&amp;gt;
         &amp;lt;property name=&amp;quot;jboss.as.jpa.managed&amp;quot; value=&amp;quot;false&amp;quot; /&amp;gt;
        &amp;lt;/properties&amp;gt;
    &amp;lt;/persistence-unit&amp;gt;
&amp;lt;/persistence&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Enjoy :-)&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Spring3&#43;JPA2&#43;JavaEE6AppServer = Confusion Over Configuration</title>
      <link>http://sivalabs.github.io/post/2012/spring3jpa2javaee6appserver-confusion-over-configuration/</link>
      <pubDate>Fri, 12 Oct 2012 11:08:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2012/spring3jpa2javaee6appserver-confusion-over-configuration/</guid>
      <description>&lt;p&gt;Spring is great, JavaEE6 is great and latest JavaEE6 Application servers are also great. This post is not a rant on Spring Vs JavaEE6, but my experience of porting a Spring3+JPA2(Hibernate) application on JBoss AS-7.1 App Server.&lt;/p&gt;

&lt;p&gt;My application requirement is very simple: Developing a couple of SOAP based webservices using Spring3.1 and JPA2(Hibernate) and host it on JBoss AS 7.1.&lt;/p&gt;

&lt;p&gt;So I started creating a multi-module maven project with one jar module containing the service implementations using Spring &amp;amp; JPA and another war module which exposes those services as SOAP based webservices. But the key part is services needs to talk to multiple databases for some of the service methods.&lt;/p&gt;

&lt;p&gt;I am aware of JPA2 integration support from Spring without persistence.xml and cool packagesToScan attribute which makes life a bit easier. I configured 2 dataSources, 2 LocalContainerEntityManagerFactoryBeans, registered 2 JpaTransactionManagers and enabled Annotation based Transaction Management Support.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;tx:annotation-driven transaction-manager=&amp;quot;txnManager1&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;tx:annotation-driven transaction-manager=&amp;quot;txnManager2&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;bean class=&amp;quot;org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;bean class=&amp;quot;org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor&amp;quot;/&amp;gt;&amp;lt;!-- This will throw error because it found multiple EntityManagerFactory beans --&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;bean id=&amp;quot;txnManager1&amp;quot; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            class=&amp;quot;org.springframework.orm.jpa.JpaTransactionManager&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;              p:entityManagerFactory-ref=&amp;quot;emf1&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;bean id=&amp;quot;txnManager2&amp;quot; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           class=&amp;quot;org.springframework.orm.jpa.JpaTransactionManager&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;              p:entityManagerFactory-ref=&amp;quot;emf2&amp;quot;/&amp;gt;             &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;bean id=&amp;quot;emf1&amp;quot; class=&amp;quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;property name=&amp;quot;persistenceUnitName&amp;quot; value=&amp;quot;Sivalabs1PU&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;property name=&amp;quot;dataSource&amp;quot; ref=&amp;quot;dataSource1&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;          &amp;lt;property name=&amp;quot;jpaVendorAdapter&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;             &amp;lt;bean id=&amp;quot;jpaAdapter&amp;quot; class=&amp;quot;org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                     p:showSql=&amp;quot;${hibernate.show_sql}&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;jpaProperties&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            &amp;lt;props&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                &amp;lt;prop key=&amp;quot;hibernate.dialect&amp;quot;&amp;gt;${hibernate.dialect}&amp;lt;/prop&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                  &amp;lt;prop key=&amp;quot;hibernate.hbm2ddl.auto&amp;quot;&amp;gt;${hibernate.hbm2ddl.auto}&amp;lt;/prop&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            &amp;lt;/props&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;packagesToScan&amp;quot; value=&amp;quot;com.sivalabs.springdemo.entities&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;property name=&amp;quot;loadTimeWeaver&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;          &amp;lt;bean class=&amp;quot;org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/bean&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;bean id=&amp;quot;emf2&amp;quot; class=&amp;quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;persistenceUnitName&amp;quot; value=&amp;quot;Sivalabs2PU&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;property name=&amp;quot;dataSource&amp;quot; ref=&amp;quot;dataSource2&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;          &amp;lt;property name=&amp;quot;jpaVendorAdapter&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;             &amp;lt;bean id=&amp;quot;jpaAdapter&amp;quot; class=&amp;quot;org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter&amp;quot;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                     p:showSql=&amp;quot;${hibernate.show_sql}&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;jpaProperties&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            &amp;lt;props&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                &amp;lt;prop key=&amp;quot;hibernate.dialect&amp;quot;&amp;gt;${hibernate.dialect}&amp;lt;/prop&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;                  &amp;lt;prop key=&amp;quot;hibernate.hbm2ddl.auto&amp;quot;&amp;gt;${hibernate.hbm2ddl.auto}&amp;lt;/prop&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;            &amp;lt;/props&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;packagesToScan&amp;quot; value=&amp;quot;com.sivalabs.springdemo.entities&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;property name=&amp;quot;loadTimeWeaver&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;          &amp;lt;bean class=&amp;quot;org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/bean&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;bean id=&amp;quot;dataSource1&amp;quot; class=&amp;quot;org.apache.commons.dbcp.BasicDataSource&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;driverClassName&amp;quot; value=&amp;quot;${node1.jdbc.driverClassName}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;property name=&amp;quot;url&amp;quot; value=&amp;quot;${node1.jdbc.url}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;property name=&amp;quot;username&amp;quot; value=&amp;quot;${node1.jdbc.username}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;property name=&amp;quot;password&amp;quot; value=&amp;quot;${node1.jdbc.password}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;bean id=&amp;quot;dataSource2&amp;quot; class=&amp;quot;org.apache.commons.dbcp.BasicDataSource&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;driverClassName&amp;quot; value=&amp;quot;${node2.jdbc.driverClassName}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;property name=&amp;quot;url&amp;quot; value=&amp;quot;${node2.jdbc.url}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;property name=&amp;quot;username&amp;quot; value=&amp;quot;${node2.jdbc.username}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;property name=&amp;quot;password&amp;quot; value=&amp;quot;${node2.jdbc.password}&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After this I realized to bind Entitymanager with the correct PersistenceUnit I need to give persistenceUnitName to LocalContainerEntityManagerFactoryBean.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;bean class=&amp;quot;org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;      &amp;lt;property name=&amp;quot;persistenceUnits&amp;quot; &amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         &amp;lt;map&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;entry key=&amp;quot;unit1&amp;quot; value=&amp;quot;Sivalabs1PU&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;entry key=&amp;quot;unit2&amp;quot; value=&amp;quot;Sivalabs2PU&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;         &amp;lt;/map&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;bean id=&amp;quot;emf1&amp;quot; class=&amp;quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;persistenceUnitName&amp;quot; value=&amp;quot;Sivalabs1PU&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;property name=&amp;quot;dataSource&amp;quot; ref=&amp;quot;dataSource1&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;          ....&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       ....        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/bean&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;bean id=&amp;quot;emf2&amp;quot; class=&amp;quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;persistenceUnitName&amp;quot; value=&amp;quot;Sivalabs2PU&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;           &amp;lt;property name=&amp;quot;dataSource&amp;quot; ref=&amp;quot;dataSource2&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ....&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     ....        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then in my Service Bean EntityManagers and transaction managers are glued together as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Service&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;public class AdminUserService implements UserService&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;{&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    @PersistenceContext(unitName=&amp;quot;Sivalabs1PU&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private EntityManager sivalabs1EM;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @PersistenceContext(unitName=&amp;quot;Sivalabs2PU&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    private EntityManager sivalabs2EM;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   @Override&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  @Transactional(&amp;quot;txnManager1&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  public List&amp;lt;User&amp;gt; getAllUsersFromSivalabs1DB() {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       return sivalabs1EM.createQuery(&amp;quot;from User&amp;quot;, User.class).getResultList();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt; @Override&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  @Transactional(&amp;quot;txnManager2&amp;quot;)&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  public List&amp;lt;User&amp;gt; getAllUsersFromSivalabs2DB() {&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       return sivalabs2EM.createQuery(&amp;quot;from User&amp;quot;, User.class).getResultList();&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   }&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;  &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;}&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this setup now I got the Exception saying &amp;ldquo;No persistence unit with name &amp;lsquo;Sivalabs1PU&amp;rsquo; found&amp;rdquo;.  Then after some googling I created  META-INF/persistence.xml file as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;persistence&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;persistence-unit name=&amp;quot;Sivalabs1PU&amp;quot; transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;           &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/persistence-unit&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;persistence-unit name=&amp;quot;Sivalabs2PU&amp;quot;  transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;         &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/persistence-unit&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/persistence&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now the persistence unit name error got resolved and got other Exception saying &amp;ldquo;User is not mapped [from User]&amp;ldquo;. The User class is annotated with @Entity and is in &amp;ldquo;&lt;strong&gt;com.sivalabs.springdemo.entities&lt;/strong&gt;&amp;rdquo; package which I configured to &amp;ldquo;&lt;strong&gt;packagesToScan&lt;/strong&gt;&amp;rdquo; attribute. I didn&amp;rsquo;t understand why &amp;ldquo;packagesToScan&amp;rdquo; attribute is not working which is working fine without persistence.xml. So for time being I configured entity classes in persistence.xml file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;persistence&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;persistence-unit name=&amp;quot;Sivalabs1PU&amp;quot; transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;       &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;class&amp;gt;com.sivalabs.springdemo.entities.User&amp;lt;/class&amp;gt;   &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/persistence-unit&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;persistence-unit name=&amp;quot;Sivalabs2PU&amp;quot;  transaction-type=&amp;quot;RESOURCE_LOCAL&amp;quot;&amp;gt;      &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;class&amp;gt;com.sivalabs.springdemo.entities.User&amp;lt;/class&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;/persistence-unit&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;   &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;&amp;lt;/persistence&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally when I ran my JUnit Test which invokes AdminUserService methods everything looks good and working fine. Then I deployed the war file on JBoss AS 7.1 Server then again got a bunch of errors.  JBoss is complaining that &amp;ldquo;Connection cannot be null when &amp;lsquo;hibernate.dialect&amp;rsquo; not set&amp;rdquo; &amp;hellip;. &amp;ldquo;[PersistenceUnit: Sivalabs1PU] Unable to build EntityManagerFactory&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;After thinking for a couple of minutes, I understood that JBoss server is trying to do what it is supposed to do with &amp;ldquo;Convention Over Configuration&amp;rdquo; rules. JBoss is trying to create EntityManagerFactory because it found META-INF/persistence.xml in classpath. But as it doesn&amp;rsquo;t contain jdbc connection details its throwing Error.&lt;/p&gt;

&lt;p&gt;Again after some googling I found we can rename persistence.xml to something else(spring-persistence.xml) and hook up this new name with Spring as follows:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;bean id=&amp;quot;emf1&amp;quot; class=&amp;quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;persistenceUnitName&amp;quot; value=&amp;quot;Sivalabs1PU&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;property name=&amp;quot;persistenceXmlLocation&amp;quot; value=&amp;quot;classpath:META-INF/spring-persistence.xml&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;dataSource&amp;quot; ref=&amp;quot;dataSource1&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;          ....&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       ....        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/bean&amp;gt; &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     &amp;lt;bean id=&amp;quot;emf2&amp;quot; class=&amp;quot;org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean&amp;quot;&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;persistenceUnitName&amp;quot; value=&amp;quot;Sivalabs2PU&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;       &amp;lt;property name=&amp;quot;persistenceXmlLocation&amp;quot; value=&amp;quot;classpath:META-INF/spring-persistence.xml&amp;quot;/&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        &amp;lt;property name=&amp;quot;dataSource&amp;quot; ref=&amp;quot;dataSource2&amp;quot;&amp;gt;&amp;lt;/property&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;        ....&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;     ....        &amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;    &amp;lt;/bean&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/br&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally I got this application working on my JBoss AS 7.1 successfully(Still I don&amp;rsquo;t know how many other holes are there that I haven&amp;rsquo;t yet found).&lt;/p&gt;

&lt;p&gt;But here I didn&amp;rsquo;t understand few Spring concepts:&lt;br /&gt;
&lt;em&gt;1. When I try to give persistenceUnitName why Spring is checking for that name to be existed in persistence.xml? Anyway that persistence.xml doesn&amp;rsquo;t contain anything exception the unit-name!!&lt;/em&gt;&lt;br /&gt;
_&lt;br /&gt;
_&lt;em&gt;2. Why packagesToScan mechanism is failing when used with persistence.xml? Is it a Spring Bug?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Everything seems to be working fine except one thing is missing, a smile on my face which usually I have when working with Spring and Tomcat :-(&lt;/p&gt;

&lt;p&gt;I like Spring framework very much and I am using it since 2006 and I do enjoy while writing Spring code. That doesn&amp;rsquo;t mean I don&amp;rsquo;t like CDI, EJB3, JAX-RS :-)&lt;/p&gt;

&lt;p&gt;Anyway, with all the above exercise I feel like &lt;strong&gt;Spring3+JPA2+JavaEE6AppServer=Confusion Over Configuration&lt;/strong&gt; and it is my(an average java developer) opinion only.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Again say one more time : Spring is great, JavaEE6 is great and latest JavaEE6 Application servers are also great :-).&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RESTEasy Tutorial Part 3 - Exception Handling</title>
      <link>http://sivalabs.github.io/post/2012/resteasy-tutorial-part-3-exception-handling/</link>
      <pubDate>Tue, 12 Jun 2012 10:54:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2012/resteasy-tutorial-part-3-exception-handling/</guid>
      <description>&lt;p&gt;RESTEasy Tutorial Series&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sivalabs.in/2012/06/resteasy-tutorial-part-1-basics.html&#34;&gt;RESTEasy Tutorial Part-1: Basics&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sivalabs.in/2012/06/resteasy-tutorial-part-2-spring.html&#34;&gt;RESTEasy Tutorial Part-2: Spring Integration&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sivalabs.in/2012/06/resteasy-tutorial-part-3-exception.html&#34;&gt;RESTEasy Tutorial Part 3 - Exception Handling&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Exception Handling is an obvious requirement while developing software application. If any error occured while processing user request we should show the user an error page with details like brief exception message, error code(optional), hints to correct the input and retry(optional) and actual root cause(optional). This is applicable to RESTful web services also.&lt;/p&gt;

&lt;p&gt;But putting try-catch-finally blocks all around the code is not a good practice. We should design/code in such a way that if there is any unrecoverable error occured then the code should throw that exception and there should an exception handler to catch those exceptions and extract the error details and give a proper error response to the client with all the error details.&lt;/p&gt;

&lt;p&gt;RESTEasy provides such ExceptionHandler mechanism which simplifies the ExceptionHandling process.&lt;/p&gt;

&lt;p&gt;In this part I will show you how we can use RESTEasy&amp;rsquo;s ExceptionHandlers to handle Exceptions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#1: Create Application Specific Exceptions.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/2916667&#34;&gt;https://gist.github.com/sivaprasadreddy/2916667&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#2: Create ExceptionHandlers by implementing ExceptionMapper interface.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/2916671&#34;&gt;https://gist.github.com/sivaprasadreddy/2916671&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#3: Update UserResource.getUserXMLById() method to validate user input and throw respective exceptions&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/2916676&#34;&gt;https://gist.github.com/sivaprasadreddy/2916676&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;**Step#4: Test the UserResource.getUserXMLById() service method by issueing following requests. **&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/2916687&#34;&gt;https://gist.github.com/sivaprasadreddy/2916687&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;**
**&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important things to note:&lt;/strong&gt;
As Spring is creating the necessary objects we should let Spring know about @Provider classes to get them registered with RESTEasy. We can do this in two ways.&lt;/p&gt;

&lt;p&gt;a)Annotate Provider classes with @Component&lt;/p&gt;

&lt;p&gt;b)Using component-scan&amp;rsquo;s include-filter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;context:component-scan base-package=&#34;com.sivalabs.springdemo&#34;&gt;&lt;/strong&gt;
&lt;strong&gt;         &lt;context:include-filter expression=&#34;javax.ws.rs.ext.Provider&#34; type=&#34;annotation&#34;/&gt;&lt;/strong&gt;
&lt;strong&gt;&lt;a href=&#34;http://sivalabs.github.io/context:component-scan&#34;&gt;/context:component-scan&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RESTEasy Tutorial Part-2: Spring Integration</title>
      <link>http://sivalabs.github.io/post/2012/resteasy-tutorial-part-2-spring-integration/</link>
      <pubDate>Wed, 06 Jun 2012 17:19:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2012/resteasy-tutorial-part-2-spring-integration/</guid>
      <description>&lt;p&gt;RESTEasy Tutorial Series&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sivalabs.in/2012/06/resteasy-tutorial-part-1-basics.html&#34;&gt;RESTEasy Tutorial Part-1: Basics&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sivalabs.in/2012/06/resteasy-tutorial-part-2-spring.html&#34;&gt;RESTEasy Tutorial Part-2: Spring Integration&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sivalabs.in/2012/06/resteasy-tutorial-part-3-exception.html&#34;&gt;RESTEasy Tutorial Part 3 - Exception Handling&lt;/a&gt;
RESTEasy provides support for Spring integration which enables us to expose Spring beans as RESTful WebServices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#1: Configure RESTEasy+Spring dependencies using Maven.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/2915901&#34;&gt;https://gist.github.com/sivaprasadreddy/2915901&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#2: Configure RESTEasy+Spring in web.xml&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;web-app xmlns=&amp;quot;http://java.sun.com/xml/ns/javaee&amp;quot; version=&amp;quot;3.0&amp;quot; xmlns:web=&amp;quot;http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemalocation=&amp;quot;http://java.sun.com/xml/ns/javaee 
        http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&amp;quot; id=&amp;quot;WebApp_ID&amp;quot;&amp;gt;

   &amp;lt;listener&amp;gt;
    &amp;lt;listener-class&amp;gt;org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap&amp;lt;/listener-class&amp;gt;
  &amp;lt;/listener&amp;gt;
  &amp;lt;listener&amp;gt;
    &amp;lt;listener-class&amp;gt;org.jboss.resteasy.plugins.spring.SpringContextLoaderListener&amp;lt;/listener-class&amp;gt;
  &amp;lt;/listener&amp;gt;
  &amp;lt;servlet&amp;gt;
    &amp;lt;servlet-name&amp;gt;Resteasy&amp;lt;/servlet-name&amp;gt;
    &amp;lt;servlet-class&amp;gt;org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher&amp;lt;/servlet-class&amp;gt;
  &amp;lt;/servlet&amp;gt;
  &amp;lt;servlet-mapping&amp;gt;
    &amp;lt;servlet-name&amp;gt;Resteasy&amp;lt;/servlet-name&amp;gt;
    &amp;lt;url-pattern&amp;gt;/rest/*&amp;lt;/url-pattern&amp;gt;
  &amp;lt;/servlet-mapping&amp;gt;
  &amp;lt;context-param&amp;gt;
    &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;
    &amp;lt;param-value&amp;gt;classpath:applicationContext.xml&amp;lt;/param-value&amp;gt;
  &amp;lt;/context-param&amp;gt;
  &amp;lt;context-param&amp;gt;
    &amp;lt;param-name&amp;gt;resteasy.servlet.mapping.prefix&amp;lt;/param-name&amp;gt;
    &amp;lt;param-value&amp;gt;/rest&amp;lt;/param-value&amp;gt;
  &amp;lt;/context-param&amp;gt;

  &amp;lt;context-param&amp;gt;
        &amp;lt;param-name&amp;gt;resteasy.scan&amp;lt;/param-name&amp;gt;
        &amp;lt;param-value&amp;gt;false&amp;lt;/param-value&amp;gt;
    &amp;lt;/context-param&amp;gt;
&amp;lt;/web-app&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Step#3: Create a Spring Service class UserService and update UserResource to use UserService bean.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/2915642&#34;&gt;https://gist.github.com/sivaprasadreddy/2915642&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#4: Same JUnit TestCase to test the REST Webservice described in Part-1.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/2882422&#34;&gt;https://gist.github.com/sivaprasadreddy/2882422&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important Things to Keep in mind:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap Listener should be registered before any other listener.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You should configure resteasy.servlet.mapping.prefix &lt;context-param&gt; if the HttpServletDispatcher servlet url-pattern is anything other than /*&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;3. While using Spring integration set &lt;strong&gt;resteasy.scan&lt;/strong&gt; to &lt;strong&gt;_false _&lt;/strong&gt;or don&amp;rsquo;t configure &lt;strong&gt;resteasy.scan&lt;/strong&gt; parameter at all.
Otherwise you may get REST Resource instances(UserResource) from RestEasy instead of Spring container. While running JUnit Tests I observed this random behavior.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You should register REST Resource as Spring bean by annotating with @Component or @Service.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>RESTEasy Tutorial Part-1: Basics</title>
      <link>http://sivalabs.github.io/post/2012/resteasy-tutorial-part-1-basics/</link>
      <pubDate>Wed, 06 Jun 2012 15:37:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2012/resteasy-tutorial-part-1-basics/</guid>
      <description>&lt;p&gt;RESTEasy Tutorial Series&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sivalabs.in/2012/06/resteasy-tutorial-part-1-basics.html&#34;&gt;RESTEasy Tutorial Part-1: Basics&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sivalabs.in/2012/06/resteasy-tutorial-part-2-spring.html&#34;&gt;RESTEasy Tutorial Part-2: Spring Integration&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.sivalabs.in/2012/06/resteasy-tutorial-part-3-exception.html&#34;&gt;RESTEasy Tutorial Part 3 - Exception Handling&lt;/a&gt;
RESTEasy is a JAX-RS implementation from JBoss/RedHat and is in-built in JBoss 6 onwards.
Here I am going to show you how to develop a Simple RESTful Web Services application using RESTEasy and JBossAS7.1.1.FINAL.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#1: Configure RESTEasy dependencies using Maven.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/2882384&#34;&gt;https://gist.github.com/sivaprasadreddy/2882384&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#2: Configure RESTEasy in web.xml&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/2882393&#34;&gt;https://gist.github.com/sivaprasadreddy/2882393&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#3: Create User domain class, MockUserTable class to store User objects in-memory for testing purpose and UserResource class to expose CRUD operations on User as RESTful webservices.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/2882408&#34;&gt;https://gist.github.com/sivaprasadreddy/2882408&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#6: JUnit TestCase to test the REST Webservice.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;[gist &lt;a href=&#34;https://gist.github.com/sivaprasadreddy/2882422&#34;&gt;https://gist.github.com/sivaprasadreddy/2882422&lt;/a&gt; /]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step#7: To test the REST service we can use the REST Client Tool. &lt;/strong&gt;
You can download REST Client Tool at &lt;a href=&#34;http://code.google.com/a/eclipselabs.org/p/restclient-tool/&#34;&gt;http://code.google.com/a/eclipselabs.org/p/restclient-tool/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important Things to Keep in mind:&lt;/strong&gt;
1. org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap Listener should be registered before any other listener.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You should configure &lt;strong&gt;resteasy.servlet.mapping.prefix&lt;/strong&gt; &lt;context-param&gt; if the HttpServletDispatcher servlet url-pattern is anything other than &lt;strong&gt;/&lt;/strong&gt;*
**
**&lt;/li&gt;
&lt;li&gt;Keep visiting my blog :-)&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>@GeneratedValue not setting up auto increment in mysql and h2 dialects</title>
      <link>http://sivalabs.github.io/post/2012/generatedvalue-not-setting-up-auto-increment-in-mysql-and-h2-dialects/</link>
      <pubDate>Thu, 26 Apr 2012 07:57:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2012/generatedvalue-not-setting-up-auto-increment-in-mysql-and-h2-dialects/</guid>
      <description>&lt;p&gt;Hi,&lt;br /&gt;
In earlier versions of Hibernate if we want to have an auto_increment primary key we can use the following:&lt;/p&gt;

&lt;p&gt;@Id @GeneratedValue(strategy=GenerationType.AUTO)&lt;br /&gt;
@Column(name=&amp;ldquo;user_id&amp;rdquo;)&lt;br /&gt;
private Integer userId;&lt;/p&gt;

&lt;p&gt;But in latest version of Hibernate(may be Hibernate4, whatever is used in JBoss AS7) this doesn&amp;rsquo;t work as expected. The generated table primary key is not auto_increment column.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To resolve this configure &lt;property name=&#34;hibernate.id.new_generator_mappings&#34; value=&#34;false&#34;&gt; in persistence.xml.&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Solution for JDK6 &#43; JBoss-5.1.0GA &#43; JAX-WS integration error: java.lang.UnsupportedOperationException: setProperty must be overridden by all subclasses of SOAPMessage</title>
      <link>http://sivalabs.github.io/post/2011/solution-for-jdk6-jboss-510ga-jax-ws/</link>
      <pubDate>Sun, 04 Dec 2011 02:53:00 +0000</pubDate>
      
      <guid>http://sivalabs.github.io/post/2011/solution-for-jdk6-jboss-510ga-jax-ws/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Copy the following jars from JBOSS_HOME/client to JBOSS_HOME/lib/endorsed dir.&lt;br /&gt;
a.  jbossws-native-jaxrpc.jar&lt;br /&gt;
b.  jbossws-native-jaxws.jar&lt;br /&gt;
c.  jbossws-native-jaxws-ext.jar&lt;br /&gt;
d.  jbossws-native-saaj.jar&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Delete saaj-impl.jar(if its already there) from JBOSS_HOME/lib/endorsed dir.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>