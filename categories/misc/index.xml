<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Misc on SivaLabs</title>
    <link>https://sivalabs.github.io/categories/misc/</link>
    <description>Recent content in Misc on SivaLabs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 30 Nov 2014 01:21:00 +0000</lastBuildDate>
    
	<atom:link href="https://sivalabs.github.io/categories/misc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Can MicroServices Architecture Solve All Your Problems?</title>
      <link>https://sivalabs.github.io/2014/11/can-microservices-architecture-solve-all-your-problems/</link>
      <pubDate>Sun, 30 Nov 2014 01:21:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2014/11/can-microservices-architecture-solve-all-your-problems/</guid>
      <description>IT is one field where you can find new things coming everyday. Theses days the whole developer community websites are flooded with MicroServices and Docker related stuff. Among them the idea of MicroServices is very exciting and encourages better way of building software systems. But as with any architectural style there will be pros and cons to every approach.
Before discussing what are good and bad sides of MicroServices approach, first let me say what I understood about MicroServices.</description>
    </item>
    
    <item>
      <title>Few Things That I Learned as a Blogger</title>
      <link>https://sivalabs.github.io/2014/10/few-things-that-i-learned-as-blogger/</link>
      <pubDate>Mon, 13 Oct 2014 05:58:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2014/10/few-things-that-i-learned-as-blogger/</guid>
      <description>I started my career as a Java developer in 2006. I was working on a Servlets/JSP project based web application which we thought of migrating it to Struts framework.
I got some issue and struggling with it for hours and hours and couldn&amp;#8217;t be able to find any solution. I read all the Struts reference documentation and referred many books on Struts framework. But in all those books and reference documentation I could find the happy path situation guidelines only.</description>
    </item>
    
    <item>
      <title>How much crap you are keeping because “You might need it in future”?</title>
      <link>https://sivalabs.github.io/2014/09/how-much-crap-you-are-keeping-because-you-might-need-it-in-future/</link>
      <pubDate>Mon, 15 Sep 2014 03:11:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2014/09/how-much-crap-you-are-keeping-because-you-might-need-it-in-future/</guid>
      <description>How much crap you are keeping because &amp;#8220;You might need it in future&amp;#8221;?
I am planning to move to a new house in a couple of weeks, so I started packing things and throwing away unnecessary stuff.
In the process of identifying unnecessary stuff I realized how much crap I am keeping in my house thinking it might be required in future.
But I only came to know that I have these things while looking for waste to throw away.</description>
    </item>
    
    <item>
      <title>What is your favorite open source project?</title>
      <link>https://sivalabs.github.io/2014/07/what-is-your-favorite-open-source-project/</link>
      <pubDate>Wed, 02 Jul 2014 21:20:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2014/07/what-is-your-favorite-open-source-project/</guid>
      <description>I do spend at-least couple of hours everyday reading about what is going on in Java community to be aware where we are heading and what is hot these days.
Because in Java land everyday new frameworks, new libraries came out and few of them might be really good and can drastically simplify the work you are doing. So I thought it is good to know about these new and hot stuff even if you are not going to use them in your official project.</description>
    </item>
    
    <item>
      <title>Do you have defect id to burn the hours spent on code refactoring?</title>
      <link>https://sivalabs.github.io/2012/02/do-you-have-defect-id-to-burn-hours/</link>
      <pubDate>Wed, 22 Feb 2012 04:34:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2012/02/do-you-have-defect-id-to-burn-hours/</guid>
      <description>Working on a large legacy code-base is challenging(painful?) and is inevitable.
You may need to keep on refactoring the legacy code to fix bugs, to add new features or enhancements.
For these changes normally we would have a defect or new requirement created in QualityCenter/VersionOne or whatever the tool you use for tracking the tasks. We burn the hours spent on these tasks against the respective defect-id or requirement-id.
Then assume you identify some piece of code which is written in horrible way and thought of refactoring that logic.</description>
    </item>
    
    <item>
      <title>Where is Craig McClanahan(Author of Struts 1.x)?</title>
      <link>https://sivalabs.github.io/2012/02/where-is-craig-mcclanahanauthor-of-struts-1-x/</link>
      <pubDate>Thu, 02 Feb 2012 00:23:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2012/02/where-is-craig-mcclanahanauthor-of-struts-1-x/</guid>
      <description>Firstly, a little background on why I like Struts&amp;#8230;please bear with me.
I started my career as a java developer in 2006. That time my team lead strongly believes that freshers should work on core technologies without any tools for at-least 6 months so that they will get a chance to learn basics and have a strong foundation on fundamentals.So I was working on Core Java, Servlets and JSP for first 3-4 months and I used to hear the term &amp;#8220;Struts&amp;#8221; very frequently on web and in our senior java developers discussions.</description>
    </item>
    
    <item>
      <title>Unable to create a maven project using appfuse archetypes?</title>
      <link>https://sivalabs.github.io/2011/12/unable-to-create-maven-project-using/</link>
      <pubDate>Sat, 03 Dec 2011 21:29:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2011/12/unable-to-create-maven-project-using/</guid>
      <description>I don&amp;#8217;t know why sometimes when i tried to create a Maven project using one of appfuse archetypes, eclipse throws error saying unable to create maven project.
I resolved it by doing following:
Window&amp;#8211;&amp;gt;Preferences&amp;#8211;&amp;gt;Maven&amp;#8211;&amp;gt;Archetypes
Add Remote Catalog : http://repo1.maven.org/maven2/archetype-catalog.xml
Now I am able to create maven projects using Appfuse archetypes.</description>
    </item>
    
    <item>
      <title>Are frameworks making developers dumb?</title>
      <link>https://sivalabs.github.io/2011/08/frameworks-making-developers-dumb/</link>
      <pubDate>Mon, 22 Aug 2011 01:16:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2011/08/frameworks-making-developers-dumb/</guid>
      <description>Last week I got to take interviews to hire senior java developers with around 5 years of experience. But after the interview process is over I felt like the frameworks makes developers life easier but at the same time  making them dumb.
Everyone puts almost all the new frameworks on their resume claiming they have &amp;#8220;Strong, working experience on Spring, Hibernate, Web Services etc&amp;#8221;.
Here is how the interviews went on.</description>
    </item>
    
    <item>
      <title>Syntax Highlighting</title>
      <link>https://sivalabs.github.io/2011/02/syntax-highlighting/</link>
      <pubDate>Fri, 04 Feb 2011 00:38:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2011/02/syntax-highlighting/</guid>
      <description>To enable syntax highlighting on blogspot follow the below steps.
Go to Design &amp;#8211;&amp;gt; EditHTML&amp;#8211;&amp;gt;Edit Template section
Add the following just before 
&amp;lt;!-- Add-in CSS for syntax highlighting --&amp;gt; &amp;lt;script src=&#39;http://syntaxhighlighter.googlecode.com/svn/trunk/Scripts/shCore.js&#39; type=&#39;text/javascript&#39;/&amp;gt; &amp;lt;script src=&#39;http://syntaxhighlighter.googlecode.com/svn/trunk/Scripts/shBrushCpp.js&#39; type=&#39;text/javascript&#39;/&amp;gt; &amp;lt;script src=&#39;http://syntaxhighlighter.googlecode.com/svn/trunk/Scripts/shBrushCSharp.js&#39; type=&#39;text/javascript&#39;/&amp;gt; &amp;lt;script src=&#39;http://syntaxhighlighter.googlecode.com/svn/trunk/Scripts/shBrushCss.js&#39; type=&#39;text/javascript&#39;/&amp;gt; &amp;lt;script src=&#39;http://syntaxhighlighter.googlecode.com/svn/trunk/Scripts/shBrushDelphi.js&#39; type=&#39;text/javascript&#39;/&amp;gt; &amp;lt;script src=&#39;http://syntaxhighlighter.googlecode.com/svn/trunk/Scripts/shBrushJava.js&#39; type=&#39;text/javascript&#39;/&amp;gt; &amp;lt;script src=&#39;http://syntaxhighlighter.googlecode.com/svn/trunk/Scripts/shBrushJScript.js&#39; type=&#39;text/javascript&#39;/&amp;gt; &amp;lt;script src=&#39;http://syntaxhighlighter.googlecode.com/svn/trunk/Scripts/shBrushPhp.js&#39; type=&#39;text/javascript&#39;/&amp;gt; &amp;lt;script src=&#39;http://syntaxhighlighter.googlecode.com/svn/trunk/Scripts/shBrushPython.js&#39; type=&#39;text/javascript&#39;/&amp;gt; &amp;lt;script src=&#39;http://syntaxhighlighter.googlecode.com/svn/trunk/Scripts/shBrushRuby.js&#39; type=&#39;text/javascript&#39;/&amp;gt; &amp;lt;script src=&#39;http://syntaxhighlighter.googlecode.com/svn/trunk/Scripts/shBrushSql.js&#39; type=&#39;text/javascript&#39;/&amp;gt; &amp;lt;script src=&#39;http://syntaxhighlighter.googlecode.com/svn/trunk/Scripts/shBrushVb.js&#39; type=&#39;text/javascript&#39;/&amp;gt; &amp;lt;script src=&#39;http://syntaxhighlighter.googlecode.com/svn/trunk/Scripts/shBrushXml.js&#39; type=&#39;text/javascript&#39;/&amp;gt;  Add the following just before</description>
    </item>
    
    <item>
      <title>Finally you need to deliver DeveloperWrittenCode.WAR, not Manager’sManagerialSkills.zip</title>
      <link>https://sivalabs.github.io/2011/02/finally-you-need-to-deliver-developerwrittencode-war-not-managersmanagerialskills-zip/</link>
      <pubDate>Tue, 01 Feb 2011 00:40:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2011/02/finally-you-need-to-deliver-developerwrittencode-war-not-managersmanagerialskills-zip/</guid>
      <description>Some IT managers perspective on developers made me to write this post.
A managing director of a company telling to delivery head that
 We need not worry about developers. If we go around the villages with a car and get the people who just completed their school and give him a computer with internet connection and then give 15 days of time to learn java. Then assign the work and put a deadline.</description>
    </item>
    
    <item>
      <title>Next level of Don’t Repeat Yourself(DRY) principle</title>
      <link>https://sivalabs.github.io/2011/01/next-level-of-dont-repeat-yourselfdry-principle/</link>
      <pubDate>Sun, 30 Jan 2011 13:16:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2011/01/next-level-of-dont-repeat-yourselfdry-principle/</guid>
      <description>We are building the software applications using various languages for several years. Over the time new frameworks, new tools, new methodologies have came up. Especially in Java platform, now we have plenty of choices in each area following various design patterns and principles like MVC, FrontController etc.
We have many development principles like KISS(Keep It Simple Stupid), DRY(Don&amp;#8217;t Repeat Yourself) which encourages to write better code which is maintainable. Especially DRY principle is a very good one which every developer should understand and follow.</description>
    </item>
    
    <item>
      <title>Struts, Spring, Hibernate… What next?</title>
      <link>https://sivalabs.github.io/2011/01/struts-spring-hibernate-what-next/</link>
      <pubDate>Sun, 09 Jan 2011 00:16:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2011/01/struts-spring-hibernate-what-next/</guid>
      <description>I have started my career in 2006 as a Java Developer. Since then most of the times I was being involved in developing web applications using Servlets, JSP, Struts, IBatis and Hibernate. In late 2008 I started working with Spring and now I am a big fan of Spring.
I am pretty much interested in learning new technologies/frameworks. So i started playing with several things like Quartz, JMS, JSF,JasperReports, DWR, XStream API, JPA, JavaMail, DisplayTag, JUnit, Ant, ApachePOI, JExcel blah blah blah.</description>
    </item>
    
    <item>
      <title>JSF can be used for several purposes.</title>
      <link>https://sivalabs.github.io/2011/01/jsf-can-be-used-for-several-purposes/</link>
      <pubDate>Wed, 05 Jan 2011 23:06:00 +0000</pubDate>
      
      <guid>https://sivalabs.github.io/2011/01/jsf-can-be-used-for-several-purposes/</guid>
      <description>Recently I got a wonderful opportunity to work with JSF and I couldn&amp;#8217;t stop myself sharing my feelings on JSF with everyone.
By god&amp;#8217;s grace till last month i didn&amp;#8217;t a chance to work on JSF in my career. But recently i have to work on a project developed in JSF 1.x.
After spending few days on JSF technology I realized that JSF is not only a web framework and we can use it for several purposes.</description>
    </item>
    
  </channel>
</rss>